[{"D:\\Coding\\React\\webAppJournal\\src\\components\\companyPages\\companySettings.jsx":"1","D:\\Coding\\React\\webAppJournal\\src\\utils\\axiosAPI.jsx":"2","D:\\Coding\\React\\webAppJournal\\src\\index.js":"3","D:\\Coding\\React\\webAppJournal\\src\\components\\freePagesCore.jsx":"4","D:\\Coding\\React\\webAppJournal\\src\\components\\landing.jsx":"5","D:\\Coding\\React\\webAppJournal\\src\\components\\authPagesCore.jsx":"6","D:\\Coding\\React\\webAppJournal\\src\\components\\contactUs.jsx":"7","D:\\Coding\\React\\webAppJournal\\src\\components\\verifyEmail.jsx":"8","D:\\Coding\\React\\webAppJournal\\src\\components\\userPages\\index.js":"9","D:\\Coding\\React\\webAppJournal\\src\\components\\companyPages\\index.js":"10","D:\\Coding\\React\\webAppJournal\\src\\components\\forgot.jsx":"11","D:\\Coding\\React\\webAppJournal\\src\\components\\userPages\\userProfile.jsx":"12","D:\\Coding\\React\\webAppJournal\\src\\components\\signIn.jsx":"13","D:\\Coding\\React\\webAppJournal\\src\\components\\signUp.jsx":"14","D:\\Coding\\React\\webAppJournal\\src\\components\\index.js":"15","D:\\Coding\\React\\webAppJournal\\src\\components\\navigation.jsx":"16","D:\\Coding\\React\\webAppJournal\\src\\components\\footer.jsx":"17","D:\\Coding\\React\\webAppJournal\\src\\reportWebVitals.js":"18","D:\\Coding\\React\\webAppJournal\\src\\components\\contentPagesCore.jsx":"19","D:\\Coding\\React\\webAppJournal\\src\\utils\\index.js":"20","D:\\Coding\\React\\webAppJournal\\src\\App.js":"21","D:\\Coding\\React\\webAppJournal\\src\\components\\companyPages\\companyEHI.jsx":"22","D:\\Coding\\React\\webAppJournal\\src\\components\\companyPages\\companyView.jsx":"23","D:\\Coding\\React\\webAppJournal\\src\\components\\userPages\\journalView.jsx":"24"},{"size":16612,"mtime":1616831989264,"results":"25","hashOfConfig":"26"},{"size":35462,"mtime":1616934925394,"results":"27","hashOfConfig":"26"},{"size":721,"mtime":1611805827867,"results":"28","hashOfConfig":"26"},{"size":958,"mtime":1613636749199,"results":"29","hashOfConfig":"26"},{"size":1042,"mtime":1610993265550,"results":"30","hashOfConfig":"26"},{"size":957,"mtime":1613636766729,"results":"31","hashOfConfig":"26"},{"size":3522,"mtime":1614162154431,"results":"32","hashOfConfig":"26"},{"size":4717,"mtime":1615860480743,"results":"33","hashOfConfig":"26"},{"size":55,"mtime":1616041320833,"results":"34","hashOfConfig":"26"},{"size":63,"mtime":1616055171295,"results":"35","hashOfConfig":"26"},{"size":9462,"mtime":1616835323451,"results":"36","hashOfConfig":"26"},{"size":19317,"mtime":1616936373248,"results":"37","hashOfConfig":"26"},{"size":5842,"mtime":1616405130908,"results":"38","hashOfConfig":"26"},{"size":8366,"mtime":1615970090382,"results":"39","hashOfConfig":"26"},{"size":647,"mtime":1617180447527,"results":"40","hashOfConfig":"26"},{"size":2825,"mtime":1614763071457,"results":"41","hashOfConfig":"26"},{"size":512,"mtime":1613962934097,"results":"42","hashOfConfig":"26"},{"size":362,"mtime":1609239931187,"results":"43","hashOfConfig":"26"},{"size":34361,"mtime":1617094886416,"results":"44","hashOfConfig":"26"},{"size":19638,"mtime":1615121721277,"results":"45","hashOfConfig":"26"},{"size":5231,"mtime":1617094203986,"results":"46","hashOfConfig":"26"},{"size":4065,"mtime":1617180177700,"results":"47","hashOfConfig":"26"},{"size":13990,"mtime":1617180275322,"results":"48","hashOfConfig":"26"},{"size":10103,"mtime":1617180314888,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"1ell0sa",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Coding\\React\\webAppJournal\\src\\components\\companyPages\\companySettings.jsx",["110"],"import React, { useState, useEffect  } from \"react\";\r\nimport Store from \"store\"\r\n\r\nimport { APIDivisionInvitesCreate, APIDivisionInvitesSet, APIDivisionSettingsEdit, APIDivisionSettingsGet, APIDivisionInvitesGet } from \"../../utils\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst viewingPermsCheck = ['Public', 'Private', 'Governed Users']\r\nconst inviteType = ['Invalid', 'Admin', 'Viewer', 'Governed']\r\n\r\nconst CompanySettings = (props) => {\r\n\t\r\n\t// Because these are in here, these are NOT SAVED!\r\n\tconst [inviteCode, setInviteCode] = useState( \"No Data\" );\r\n\t\r\n\t// These should be fine to keep this way...\r\n\tconst [targetUser, setTargetUser] = useState( \"\" );\r\n\tconst [targetRole, setTargetRole] = useState( \"\" );\r\n\t\r\n\tconst [inviteIDList, setInviteIDList] = useState( [] );\r\n\tconst [inviteNamesList, setInviteNamesList] = useState( [] );\r\n\tconst [inviteRolesList, setInviteRolesList] = useState( [] );\r\n\t\r\n\tconst [viewPerms, setViewPerms] = useState( \"No Data\" );\r\n\tconst [expiryDate, setExpiryDate] = useState( \"No Data\" );\t\r\n\t\r\n\tconst [companyFullName, setCompanyFullName] = useState( \"No Data\" );\r\n\tconst [divisionName, setDivisionName] = useState( \"No Data\" );\r\n\t\r\n\tconst [adminsIDs, setAdminsIDs] = useState( [] );\r\n\tconst [viewsIDs, setViewsIDs] = useState( [] );\r\n\tconst [sendsIDs, setSendsIDs] = useState( [] );\r\n\tconst [governsIDs, setGovernsIDs] = useState( [] );\r\n\t\r\n\tconst [admins, setAdmins] = useState( [] );\r\n\tconst [views, setViews] = useState( [] );\r\n\tconst [sends, setSends] = useState( [] );\r\n\tconst [governs, setGoverns] = useState( [] );\r\n\t\r\n\tconst [delAdmins, setDelAdmins] = useState( [] );\r\n\tconst [delViews, setDelViews] = useState( [] );\r\n\tconst [delSends, setDelSends] = useState( [] );\r\n\tconst [delGoverns, setDelGoverns] = useState( [] );\r\n\t\r\n\tconst [numChild, setNumChild] = useState( 0 );\r\n\t\r\n\tuseEffect(() => {    \r\n\t\t// Update the document title using the browser API    \r\n\t\tconsole.log(\"Triggered Refresh!\")\r\n\t\ttiggerReload()\r\n\t\t// This should be fine, for dependancies.. as this SHOULD NOT EVER refresh other than the base one...\r\n\t}, []);\r\n\t\r\n\tfunction tiggerReload() {\r\n\t\tgetDivisionData()\r\n\t\tgetDivisionsInvites()\r\n\t}\r\n\t\r\n\tfunction getSuccess(successData) {\r\n\t\tconsole.log(\"Get Data Success\")\r\n\t\tStore.set(props.currentDivisionID+\"-Data\", successData)\r\n\t\t\r\n\t\tsetCompanyFullName( successData[\"fullPathName\"] )\r\n\t\tsetDivisionName( successData[\"divisionName\"] )\r\n\t\tsetNumChild( successData[\"getNumChildUsers\"] )\r\n\t\t\r\n\t\tsetInviteCode( successData[\"inviteCode\"] )\r\n\t\t\r\n\t\tsetExpiryDate( successData[\"getCompanyExpiryDate\"] )\r\n\t\t\r\n\t\tsetAdmins( successData[\"adminAccountNames\"] )\r\n\t\tsetViews( successData[\"privateViewingNames\"] )\r\n\t\tsetSends( successData[\"resultsSendTargetsNames\"] )\r\n\t\tsetGoverns( successData[\"governedUsersNames\"] )\r\n\t\t\r\n\t\tsetAdminsIDs( successData[\"adminAccounts\"] )\r\n\t\tsetViewsIDs( successData[\"privateViewingPerms\"] )\r\n\t\tsetSendsIDs( successData[\"resultsSendTargets\"] )\r\n\t\tsetGovernsIDs( successData[\"governedUsers\"] )\r\n\t\t\r\n\t\tsetDelAdmins( [] )\r\n\t\tsetDelViews( [] )\r\n\t\tsetDelSends( [] )\r\n\t\tsetDelGoverns( [] )\r\n\t\t\r\n\t\tsetViewPerms( viewingPermsCheck[ successData[\"summaryViewAccess\"] ] )\r\n\r\n\t}\r\n\tfunction getFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Get Data Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t}\r\n\tfunction getDivisionData() {\r\n\t\t// Verify that the division is valid?\r\n\t\tif (props.currentDivisionID >= 0) {\r\n\t\t\tlet checkData = Store.get(props.currentDivisionID+\"-Data\")\r\n\t\t\tif (checkData === undefined) {\r\n\t\t\t\tconsole.log(\"Requesting Division Data From Server...\")\r\n\t\t\t\tAPIDivisionSettingsGet( props.APIHost, props.authToken, props.currentDivisionID, getSuccess, getFailure )\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"Data will do here...\")\r\n\t\t\t\tgetSuccess(checkData)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction getInvitesSuccess(successData) {\r\n\t\tconsole.log(\"Get Invites Success\")\r\n\t\tStore.set(props.currentDivisionID+\"-Invites\", successData)\r\n\r\n\t\tlet IDList = []\r\n\t\tlet nameList = []\r\n\t\tlet roleList = []\r\n\t\t\r\n\t\tfor (let i in successData) {\r\n\t\t\t// This.... doesnt seem secure enough...\r\n\t\t\tIDList.push( successData[i][\"id\"] )\r\n\t\t\tnameList.push( successData[i][\"getUserFullName\"] )\r\n\t\t\troleList.push( inviteType[successData[i][\"targetRole\"]] )\r\n\t\t}\r\n\t\t\r\n\t\tsetInviteIDList(IDList)\r\n\t\tsetInviteNamesList(nameList)\r\n\t\tsetInviteRolesList(roleList)\r\n\t}\r\n\tfunction getInvitesFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Get Invites Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t}\r\n\tfunction getDivisionsInvites() {\r\n\t\tif (props.currentDivisionID >= 0) {\r\n\t\t\tlet checkData = Store.get(props.currentDivisionID+\"-Invites\")\r\n\t\t\tif (checkData === undefined) {\r\n\t\t\t\tAPIDivisionInvitesGet( props.APIHost, props.authToken, props.currentDivisionID, getInvitesSuccess, getInvitesFailure )\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"Data will do here...\")\r\n\t\t\t\tgetInvitesSuccess(checkData)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction setSuccess(successData) {\r\n\t\tconsole.log(\"Set Data Success\")\r\n\t\tconsole.log(successData)\r\n\t\t\r\n\t\tprops.triggerRefresh()\r\n\t}\r\n\tfunction setFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Set Data Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t\t\r\n\t\t//triggerLogout?\r\n\t}\r\n\tfunction saveChanges() {\r\n\t\t\r\n\t\t// I will need to put a validator in here... Definetly...\r\n\t\t// For now I will not allow it...\r\n\t\tlet chName = \"\"\r\n\t\t\r\n\t\tlet testData = {\r\n\t\t\t\"reqDiv\":props.currentDivisionID,\r\n\t\t\t\r\n\t\t\t\"chName\": chName,\r\n\t\t\t\r\n\t\t\t\"delAdmins\":delAdmins,\r\n\t\t\t\"delViews\":delViews,\r\n\t\t\t\"delEmails\":delSends,\r\n\t\t\t\"delGovern\":delGoverns,\r\n\t\t}\r\n\t\t\r\n\t\tAPIDivisionSettingsEdit( props.APIHost, props.authToken, testData, setSuccess, setFailure )\r\n\t}\r\n\t\r\n\tfunction inviteSuccess(successData) {\r\n\t\tconsole.log(\"Create Invite Success\")\r\n\t\tconsole.log(successData)\r\n\t}\r\n\tfunction inviteFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Create Invite Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t\t\r\n\t\t//triggerLogout?\r\n\t}\r\n\tfunction inviteUser(event) {\r\n\t\tconsole.log(\"Send Invite\")\r\n\t\t\r\n\t\tAPIDivisionInvitesCreate( props.APIHost, props.authToken, props.currentDivisionID, targetUser, targetRole, inviteSuccess, inviteFailure )\r\n\t}\r\n\t\r\n\tfunction spendInviteSuccess(successData) {\r\n\t\tconsole.log(\"Spend Invite Success\")\r\n\t\tconsole.log(successData)\r\n\t\t\r\n\t\ttiggerReload()\r\n\t}\r\n\tfunction spendInviteFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Spend Invite Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t\t\r\n\t\tgetDivisionsInvites()\r\n\t}\r\n\tfunction inviteYes(event) {\r\n\t\tconsole.log(\"Accept\")\r\n\t\t\r\n\t\t// Lets do... 0 == Cancel\r\n\t\t// 1 == Accept\r\n\t\tlet action = 1\r\n\t\tlet targetInvite = event.target.value\r\n\t\tAPIDivisionInvitesSet( props.APIHost, props.authToken, props.currentDivisionID, targetInvite, action, spendInviteSuccess, spendInviteFailure )\r\n\t}\r\n\tfunction inviteNo(event) {\r\n\t\tconsole.log(\"Deny\")\r\n\r\n\t\t// 0 == Cancel\r\n\t\t// 1 == Accept\r\n\t\tlet action = 0\r\n\t\tlet targetInvite = event.target.value\r\n\t\t\r\n\t\tAPIDivisionInvitesSet( props.APIHost, props.authToken, props.currentDivisionID, targetInvite, action, spendInviteSuccess, spendInviteFailure )\r\n\t}\r\n\t\r\n\tfunction userFieldChange(event) {\r\n\t\tsetTargetUser(event.target.value)\r\n\t}\r\n\t\r\n\tfunction toggleDelete(event) {\r\n\t\t\r\n\t\tlet valueInt = Number(event.target.value)\r\n\t\t\r\n\t\tlet temp = []\r\n\t\tlet index = -1\r\n\t\tswitch(event.target.name) {\r\n\t\t\tcase \"adm\":\r\n\t\t\t\ttemp = delAdmins.slice()\r\n\t\t\t\t// It was NOT found, so add it\r\n\t\t\t\tindex = temp.indexOf( valueInt )\r\n\t\t\t\tif ( index === -1) {\r\n\t\t\t\t\ttemp.push( valueInt )\r\n\t\t\t\t}\r\n\t\t\t\t// It WAS found, so delete it\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemp.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t\tsetDelAdmins(temp)\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase \"vie\":\r\n\t\t\t\ttemp = delViews.slice()\r\n\t\t\t\t// It was NOT found, so add it\r\n\t\t\t\tindex = temp.indexOf( valueInt )\r\n\t\t\t\tif ( index === -1) {\r\n\t\t\t\t\ttemp.push( valueInt )\r\n\t\t\t\t}\r\n\t\t\t\t// It WAS found, so delete it\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemp.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t\tsetDelViews(temp)\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase \"sen\":\r\n\t\t\t\ttemp = delSends.slice()\r\n\t\t\t\t// It was NOT found, so add it\r\n\t\t\t\tindex = temp.indexOf( valueInt )\r\n\t\t\t\tif ( index === -1) {\r\n\t\t\t\t\ttemp.push( valueInt )\r\n\t\t\t\t}\r\n\t\t\t\t// It WAS found, so delete it\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemp.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t\tsetDelSends(temp)\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase \"gov\":\r\n\t\t\t\ttemp = delGoverns.slice()\r\n\t\t\t\t// It was NOT found, so add it\r\n\t\t\t\tindex = temp.indexOf( valueInt )\r\n\t\t\t\tif ( index === -1) {\r\n\t\t\t\t\ttemp.push( valueInt )\r\n\t\t\t\t}\r\n\t\t\t\t// It WAS found, so delete it\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemp.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t\tsetDelGoverns(temp)\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"Failed to have the correct name\")\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction triggerDropdown(event) {\r\n\t\tsetTargetRole(event.target.value)\r\n\t}\r\n\t\r\n\tlet invitesDisplayList = []\r\n\tfor (let i in inviteNamesList) {\r\n\t\tlet extra = \"\"\r\n\t\tinvitesDisplayList.push(\r\n\t\t\t<li className={\"list-group-item d-flex justify-content-around\"+extra} key={i}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{inviteNamesList[i]}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{inviteRolesList[i]}\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"badge badge-success badge-pill\" value={inviteIDList[i]} onClick={inviteYes}>/</button>\r\n\t\t\t\t<button className=\"badge badge-danger badge-pill\" value={inviteIDList[i]} onClick={inviteNo}>X</button>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\tif (inviteNamesList.length === 0) {\r\n\t\tinvitesDisplayList.push(\r\n\t\t\t<li className=\"list-group-item\" key={0}>\r\n\t\t\t\tNo Invites!\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\t\r\n\tlet adminUserList = []\r\n\tfor (let i in admins) {\r\n\t\tlet extra = \"\"\r\n\t\tlet index = delAdmins.indexOf(adminsIDs[i])\r\n\t\tif (index >= 0) {\r\n\t\t\textra = 'bg-warning'\r\n\t\t}\r\n\t\t\r\n\t\tadminUserList.push(\r\n\t\t\t<li className={\"list-group-item d-flex justify-content-around\"+extra} key={i}>\r\n\t\t\t\t{admins[i]}\r\n\t\t\t\t{/*<button className=\"badge badge-danger badge-pill\" name=\"adm\" value={adminsIDs[i]} onClick={toggleDelete}>\r\n\t\t\t\t\tX\r\n\t\t\t\t</button>*/}\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\tif (admins.length === 0) {\r\n\t\tadminUserList.push(\r\n\t\t\t<li className=\"list-group-item\" key={0}>\r\n\t\t\t\tNo Users!\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\t\r\n\tlet viewingUserList = []\r\n\tfor (let i in views) {\r\n\t\tlet extra = \"\"\r\n\t\tlet index = delViews.indexOf(viewsIDs[i])\r\n\t\tif (index >= 0) {\r\n\t\t\textra = 'bg-warning'\r\n\t\t}\r\n\t\t\r\n\t\tviewingUserList.push(\r\n\t\t\t<li className={\"list-group-item d-flex justify-content-around \"+extra} key={i}>\r\n\t\t\t\t{views[i]}\r\n\t\t\t\t<button className=\"badge badge-danger badge-pill\" name=\"vie\" value={viewsIDs[i]} onClick={toggleDelete}>\r\n\t\t\t\t\tX\r\n\t\t\t\t</button>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\tif (views.length === 0) {\r\n\t\tviewingUserList.push(\r\n\t\t\t<li className=\"list-group-item\" key={0}>\r\n\t\t\t\tNo Users!\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\t\r\n\tlet sentUserList = []\r\n\tfor (let i in sends) {\r\n\t\tlet extra = \"\"\r\n\t\tlet index = delSends.indexOf(sendsIDs[i])\r\n\t\tif (index >= 0) {\r\n\t\t\textra = 'bg-warning'\r\n\t\t}\r\n\t\t\r\n\t\tsentUserList.push(\r\n\t\t<li className={\"list-group-item d-flex justify-content-around \"+extra} key={i}>\r\n\t\t\t\t{sends[i]}\r\n\t\t\t\t<button className=\"badge badge-danger badge-pill\" name=\"sen\" value={sendsIDs[i]} onClick={toggleDelete}>\r\n\t\t\t\t\tX\r\n\t\t\t\t</button>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\tif (sends.length === 0) {\r\n\t\tsentUserList.push(\r\n\t\t\t<li className=\"list-group-item\" key={0}>\r\n\t\t\t\tNo Users!\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\r\n\tlet governedUserList = []\r\n\tfor (let i in governs) {\r\n\t\tlet extra = \"\"\r\n\t\tlet index = delGoverns.indexOf(governsIDs[i])\r\n\t\tif (index >= 0) {\r\n\t\t\textra = 'bg-warning'\r\n\t\t}\r\n\t\t\r\n\t\tgovernedUserList.push(\r\n\t\t\t<li className={\"list-group-item d-flex justify-content-around \"+extra} key={i}>\r\n\t\t\t\t{governs[i]}\r\n\t\t\t\t<button className=\"badge badge-danger badge-pill\" name=\"gov\" value={governsIDs[i]} onClick={toggleDelete}>\r\n\t\t\t\t\tX\r\n\t\t\t\t</button>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\t\r\n\tif (governs.length === 0) {\r\n\t\tgovernedUserList.push(\r\n\t\t\t<li className=\"list-group-item\" key={0}>\r\n\t\t\t\tNo Users!\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\tgovernedUserList.push(\r\n\t\t<li className=\"list-group-item\" key={\"end\"}>\r\n\t\t\tAnd {numChild} others in child nodes\r\n\t\t</li>\r\n\t)\r\n\r\n\tlet showTargetRole = \"Select Role =>\"\r\n\tif (targetRole !== \"\") {\r\n\t\tshowTargetRole = inviteType[targetRole]\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className=\"companySett\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Full Company Path</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t{companyFullName}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Change Division Name</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<input type='text' className='form-control' value={divisionName} onChange={userFieldChange} placeholder='No Name?!' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Invites List</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t{invitesDisplayList}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Invite Code</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t{inviteCode}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Viewing Permissions</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t{viewPerms}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Subscription Expiry</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body d-inline-flex justify-content-around\">\r\n\t\t\t\t\t\t\t\t{expiryDate}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Invite User</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input type='text' className='form-control' value={targetUser} onChange={userFieldChange} placeholder='Enter Username or Email' />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{showTargetRole}\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"dropdown-item\" value=\"1\" onClick={triggerDropdown}>Admin</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"dropdown-item\" value=\"2\" onClick={triggerDropdown}>View Permissions</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"dropdown-item\" value=\"3\" onClick={triggerDropdown}>Governed User</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={inviteUser}>\r\n\t\t\t\t\t\t\t\t\tInvite\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Administrators</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t{adminUserList}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Viewing Privilages:</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t{viewingUserList}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Users Notified:</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t{sentUserList}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Target Users:</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t{governedUserList}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<button className=\"btn btn-primary\" onClick={saveChanges}>\r\n\t\t\t\t\tSave Changes\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default withRouter(CompanySettings);",["111","112"],"D:\\Coding\\React\\webAppJournal\\src\\utils\\axiosAPI.jsx",[],"D:\\Coding\\React\\webAppJournal\\src\\index.js",[],["113","114"],"D:\\Coding\\React\\webAppJournal\\src\\components\\freePagesCore.jsx",[],["115","116"],"D:\\Coding\\React\\webAppJournal\\src\\components\\landing.jsx",[],["117","118"],"D:\\Coding\\React\\webAppJournal\\src\\components\\authPagesCore.jsx",[],"D:\\Coding\\React\\webAppJournal\\src\\components\\contactUs.jsx",[],"D:\\Coding\\React\\webAppJournal\\src\\components\\verifyEmail.jsx",[],["119","120"],"D:\\Coding\\React\\webAppJournal\\src\\components\\userPages\\index.js",[],"D:\\Coding\\React\\webAppJournal\\src\\components\\companyPages\\index.js",[],["121","122"],"D:\\Coding\\React\\webAppJournal\\src\\components\\forgot.jsx",[],["123","124"],"D:\\Coding\\React\\webAppJournal\\src\\components\\userPages\\userProfile.jsx",["125"],"import React, { useState, useEffect } from \"react\";\r\nimport Store from \"store\"\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { APIUserInviteCode, APIUserInvitesGet, APIUserInvitesSet, APIUserSettingsEdit, APIChangeUserEmail, APIChangeUserName, APIChangeUserPassword } from \"../../utils\";\r\n\r\nconst inviteType = ['Invalid', 'Admin', 'Viewer', 'Governed']\r\n\r\n// Trying this in function form instead of class\r\nconst UserProfile = (props) => {\r\n\r\n\tconst [inviteCode, setInviteCode] = useState(\"\");\r\n\t\r\n\tconst currentEmail = \"Not Yet\"\r\n\tconst currentFirstName = \"Not \"\r\n\tconst currentLastName = \"Implemented\"\r\n\t\r\n\t// Try this...\r\n\tconst [newEmail, setNewEmail] = useState(\"\");\r\n\tconst [newFirstName, setNewFirstName] = useState(\"\");\r\n\tconst [newLastName, setNewLastName] = useState(\"\");\r\n\t\r\n\tconst [oldPassword, setOldPassword] = useState( [] );\r\n\tconst [newPassword, setNewPassword] = useState( [] );\r\n\tconst [newPassword2, setNewPassword2] = useState( [] );\r\n\t\r\n\tconst [inviteIDList, setInviteIDList] = useState( [] );\r\n\tconst [inviteNamesList, setInviteNamesList] = useState( [] );\r\n\tconst [inviteRolesList, setInviteRolesList] = useState( [] );\r\n\t\r\n\tconst [delViews, setDelViews] = useState( [] );\r\n\tconst [togSends, setTogSends] = useState( [] );\r\n\tconst [delGoverns, setDelGoverns] = useState( [] );\r\n\t\r\n\tuseEffect(() => {    \r\n\t\t// Update the document title using the browser API    \r\n\t\tconsole.log(\"Triggered Refresh!\")\r\n\t\ttiggerReload()\r\n\t\t// This should be fine, for dependancies.. as this SHOULD NOT EVER refresh...\r\n\t}, []);\r\n\r\n\tfunction tiggerReload() {\r\n\t\tgetUserInvites()\r\n\t}\r\n\r\n\tfunction inviteSuccess(successCodes, successData) {\r\n\t\tconsole.log(\"Invite Success\")\r\n\t}\r\n\tfunction inviteFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Invite Failure\")\r\n\t\t// Is there an even better way to do this?\r\n\t\t// Like, hmmm... So this is literally one line? Beause the state has to be set here...\r\n\t\tfor (let i in errorCodes) {\r\n\t\t\tif (errorCodes[i] === 0) {\r\n\t\t\t\t// network Error\r\n\t\t\t}\r\n\t\t\telse if (errorCodes[i] === 1) {\r\n\t\t\t\t// Already on the list\r\n\t\t\t}\r\n\t\t\telse if (errorCodes[i] === 2) {\r\n\t\t\t\t// Code doesnt match anything...\r\n\t\t\t}\r\n\t\t\telse if (errorCodes[i] === 3) {\r\n\t\t\t\t// Invite already exists\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// unknown error\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction submitCode() {\r\n\t\tconsole.log(inviteCode)\r\n\t\tconsole.log(\"Submit\")\r\n\t\t\r\n\t\tAPIUserInviteCode( props.APIHost, props.authToken, inviteCode, inviteSuccess, inviteFailure )\r\n\t}\r\n\t\r\n\tfunction getInvitesSuccess(successData) {\r\n\t\tconsole.log(\"Get Invites Success\")\r\n\t\tStore.set(props.currentUser+\"-Invites\", successData)\r\n\r\n\t\tlet IDList = []\r\n\t\tlet nameList = []\r\n\t\tlet roleList = []\r\n\t\t\r\n\t\tfor (let i in successData) {\r\n\t\t\t// This.... doesnt seem secure enough...\r\n\t\t\tIDList.push( successData[i][\"id\"] )\r\n\t\t\tnameList.push( successData[i][\"getUserFullName\"] )\r\n\t\t\troleList.push( inviteType[successData[i][\"targetRole\"]] )\r\n\t\t}\r\n\t\t\r\n\t\tsetInviteIDList(IDList)\r\n\t\tsetInviteNamesList(nameList)\r\n\t\tsetInviteRolesList(roleList)\r\n\t}\r\n\tfunction getInvitesFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Get Invites Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t}\r\n\tfunction getUserInvites() {\r\n\t\tlet checkData = Store.get(props.currentUser+\"-Invites\")\r\n\t\tif (checkData === undefined) {\r\n\t\t\tAPIUserInvitesGet( props.APIHost, props.authToken, getInvitesSuccess, getInvitesFailure )\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Data will do here...\")\r\n\t\t\tgetInvitesSuccess(checkData)\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction spendInviteSuccess(successData) {\r\n\t\tconsole.log(\"Spend Invite Success\")\r\n\t\tconsole.log(successData)\r\n\t\t\r\n\t\ttiggerReload()\r\n\t}\r\n\tfunction spendInviteFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Spend Invite Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t\t\r\n\t\ttiggerReload()\r\n\t}\r\n\tfunction inviteYes(event) {\r\n\t\tconsole.log(\"Accept\")\r\n\t\t\r\n\t\t// Lets do... 0 == Cancel\r\n\t\t// 1 == Accept\r\n\t\tlet action = 1\r\n\t\tlet targetInvite = event.target.value\r\n\t\tAPIUserInvitesSet( props.APIHost, props.authToken, targetInvite, action, spendInviteSuccess, spendInviteFailure )\r\n\t}\r\n\tfunction inviteNo(event) {\r\n\t\tconsole.log(\"Deny\")\r\n\r\n\t\t// 0 == Cancel\r\n\t\t// 1 == Accept\r\n\t\tlet action = 0\r\n\t\tlet targetInvite = event.target.value\r\n\t\t\r\n\t\tAPIUserInvitesSet( props.APIHost, props.authToken, targetInvite, action, spendInviteSuccess, spendInviteFailure )\r\n\t}\r\n\t\r\n\tfunction toggleDelete(event) {\r\n\t\tlet valueInt = Number(event.target.value)\r\n\t\t//console.log(\"Leave\")\r\n\t\t//console.log(valueInt)\r\n\t\t\r\n\t\tlet temp = []\r\n\t\tlet index = -1\r\n\t\tswitch(event.target.name) {\r\n\t\t\tcase \"gov\":\r\n\t\t\t\ttemp = delGoverns.slice()\r\n\t\t\t\t// It was NOT found, so add it\r\n\t\t\t\tindex = temp.indexOf( valueInt )\r\n\t\t\t\tif ( index === -1) {\r\n\t\t\t\t\ttemp.push( valueInt )\r\n\t\t\t\t}\r\n\t\t\t\t// It WAS found, so delete it\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemp.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t\tsetDelGoverns(temp)\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sen\":\r\n\t\t\t\ttemp = togSends.slice()\r\n\t\t\t\t// It was NOT found, so add it\r\n\t\t\t\tindex = temp.indexOf( valueInt )\r\n\t\t\t\tif ( index === -1) {\r\n\t\t\t\t\ttemp.push( valueInt )\r\n\t\t\t\t}\r\n\t\t\t\t// It WAS found, so delete it\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemp.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t\tsetTogSends(temp)\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vie\":\r\n\t\t\t\ttemp = delViews.slice()\r\n\t\t\t\t// It was NOT found, so add it\r\n\t\t\t\tindex = temp.indexOf( valueInt )\r\n\t\t\t\tif ( index === -1) {\r\n\t\t\t\t\ttemp.push( valueInt )\r\n\t\t\t\t}\r\n\t\t\t\t// It WAS found, so delete it\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemp.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t\tsetDelViews(temp)\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"Failed to have the correct name\")\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction codeFieldChange(event) {\r\n\t\tsetInviteCode(event.target.value)\r\n\t}\r\n\tfunction oldPasswordChange(event) {\r\n\t\tsetOldPassword(event.target.value)\r\n\t}\r\n\tfunction newPasswordChange(event) {\r\n\t\tsetNewPassword(event.target.value)\r\n\t}\r\n\tfunction newPassword2Change(event) {\r\n\t\tsetNewPassword2(event.target.value)\r\n\t}\r\n\tfunction newEmailChange(event) {\r\n\t\tsetNewEmail(event.target.value)\r\n\t}\r\n\tfunction newNewFirstChange(event) {\r\n\t\tsetNewFirstName(event.target.value)\r\n\t}\r\n\tfunction newLastNameChange(event) {\r\n\t\tsetNewLastName(event.target.value)\r\n\t}\r\n\t\t\r\n\tfunction changeGeneralSuccess(successData) {\r\n\t\tconsole.log(\"Update Success\")\r\n\t\tconsole.log(successData)\r\n\t\t// Set some sort of success!?\r\n\t\t\r\n\t}\r\n\tfunction changeGeneralFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Update Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t\t// Show some error\r\n\t}\r\n\t\r\n\tfunction changeEmail() {\r\n\t\t// Verify first...\r\n\t\tAPIChangeUserEmail( props.APIHost, props.authToken, newEmail, changeGeneralSuccess, changeGeneralFailure )\r\n\t\tsetNewEmail(\"\")\r\n\t}\r\n\t\r\n\tfunction changeName() {\r\n\t\tAPIChangeUserName( props.APIHost, props.authToken, newFirstName, newLastName, changeGeneralSuccess, changeGeneralFailure )\r\n\t\tsetNewFirstName(\"\")\r\n\t\tsetNewLastName(\"\")\r\n\t}\r\n\t\r\n\tfunction changePassword() {\r\n\t\tAPIChangeUserPassword( props.APIHost, props.authToken, oldPassword, newPassword, newPassword2, changeGeneralSuccess, changeGeneralFailure )\r\n\t\tsetOldPassword(\"\")\r\n\t\tsetNewPassword(\"\")\r\n\t\tsetNewPassword2(\"\")\r\n\t}\r\n\t\r\n\tfunction setSuccess(successData) {\r\n\t\tconsole.log(\"Set Data Success\")\r\n\t\tconsole.log(successData)\r\n\t\t\r\n\t\t// This needs to be a props refresh..\r\n\t\tprops.triggerRefresh()\r\n\t}\r\n\tfunction setFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Set Data Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t}\r\n\tfunction saveChanges() {\r\n\t\tlet testData = {\r\n\t\t\t\r\n\t\t\t// Hmm, perhaps the generic way wont work...\r\n\t\t\t//\"delViews\":delViews,\r\n\t\t\t\"togEmails\":togSends,\r\n\t\t\t\"delGovern\":delGoverns,\r\n\t\t}\r\n\t\t\r\n\t\tAPIUserSettingsEdit( props.APIHost, props.authToken, testData, setSuccess, setFailure )\r\n\t}\r\n\t\r\n\tlet invitesDisplayList = []\r\n\tfor (let i in inviteNamesList) {\r\n\t\tlet extra = \"\"\r\n\t\tinvitesDisplayList.push(\r\n\t\t\t<li className={\"list-group-item d-flex justify-content-around\"+extra} key={i}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{inviteNamesList[i]}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{inviteRolesList[i]}\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"badge badge-success badge-pill\" value={inviteIDList[i]} onClick={inviteYes}>/</button>\r\n\t\t\t\t<button className=\"badge badge-danger badge-pill\" value={inviteIDList[i]} onClick={inviteNo}>X</button>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\tif (inviteNamesList.length === 0) {\r\n\t\tinvitesDisplayList.push(\r\n\t\t\t<li className=\"list-group-item\" key={0}>\r\n\t\t\t\tNo Invites!\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\t\r\n\tlet displayViewSends = []\r\n\tif (props.viewNameList.length > 0) {\r\n\t\tfor (let i in props.viewNameList) {\r\n\t\t\tlet extra = \"\"\r\n\t\t\t\r\n\t\t\t// Blank will just be admin/view for now... Highlighted in green means Email...\r\n\t\t\tlet index = props.sendIDList.indexOf(props.viewIDList[i])\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\textra = 'bg-success'\r\n\t\t\t}\r\n\t\t\t// Sends we are toggling....\r\n\t\t\tindex = togSends.indexOf(props.viewIDList[i])\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\textra = 'bg-warning'\r\n\t\t\t}\r\n\t\t\t// Views we are deleting\r\n\t\t\tindex = delViews.indexOf(props.viewIDList[i])\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\textra = 'bg-danger'\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdisplayViewSends.push(\r\n\t\t\t\t<li key={i} className={\"list-group-item d-flex justify-content-around \"+extra}>\r\n\t\t\t\t\t{props.viewNameList[i]}\r\n\t\t\t\t\t<button className=\"badge badge-success badge-pill\" name=\"sen\" value={props.viewIDList[i]} onClick={toggleDelete}>View</button>\r\n\t\t\t\t\t<button className=\"badge badge-danger badge-pill\" name=\"vie\" value={props.viewIDList[i]} onClick={toggleDelete}>X</button>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// There was nothing\r\n\t\tdisplayViewSends.push(\r\n\t\t\t<li key={0} className=\"list-group-item d-flex justify-content-around\">\r\n\t\t\t\tNone!\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\t\r\n\tlet displayOwningCompanyList = []\r\n\tif (props.governedNameList.length > 0) {\r\n\t\tfor (let i in props.governedNameList) {\r\n\t\t\tlet extra = \"\"\r\n\t\t\tlet index = delGoverns.indexOf(props.governedIDList[i])\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\textra = 'bg-danger'\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdisplayOwningCompanyList.push(\r\n\t\t\t\t<li key={i} className={\"list-group-item d-flex justify-content-around \"+extra}>\r\n\t\t\t\t\t{props.governedNameList[i]}\r\n\t\t\t\t\t<button className=\"badge badge-danger badge-pill\" name=\"gov\" value={props.governedIDList[i]} onClick={toggleDelete}>X</button>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// There was nothing\r\n\t\tdisplayOwningCompanyList.push(\r\n\t\t\t<li key={0} className=\"list-group-item d-flex justify-content-around\">\r\n\t\t\t\tNone!\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\r\n\tlet emailClass = 'form-control'\r\n\t//if (this.state.emailError) {\r\n\t//\temailClass += ' bg-warning'\r\n\t//}\r\n\r\n\tlet passwordClass = 'form-control'\r\n\t//if (passwordError) {\r\n\t//\tpasswordClass += ' bg-warning'\r\n\t//}\r\n\r\n\treturn (\r\n\t\t<div className=\"defaultView\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Invite Code</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\t<input type='text' className='form-control' value={inviteCode} onChange={codeFieldChange} placeholder='Enter Code' />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={submitCode}>\r\n\t\t\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Company Invites</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t{invitesDisplayList}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Companies getting your Journal Info</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t{displayViewSends}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#deleteConfirm\">\r\n\t\t\t\t\t\t\t\t\tConfirm\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Companies getting your Journal Info</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t{displayOwningCompanyList}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#deleteConfirm\">\r\n\t\t\t\t\t\t\t\t\tConfirm\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Edit User Security Details</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\tUnder Construction...\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t{currentEmail}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#changeEmailModal\">\r\n\t\t\t\t\t\t\t\t\t\t\tChange Email\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t{currentFirstName + \" \" + currentLastName}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#changeNameModal\">\r\n\t\t\t\t\t\t\t\t\t\t\tChange Name\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#changePasswordModal\">\r\n\t\t\t\t\t\t\t\t\t\t\tChange Password\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t<div className=\"modal fade\" id=\"deleteConfirm\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"deleteConfirmation\" aria-hidden=\"true\">\r\n\t\t\t\t  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t  <div className=\"modal-header\">\r\n\t\t\t\t\t\t<h5 className=\"modal-title\" id=\"deleteTitleConfirm\">Delete Confirmation</h5>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t\t\t\t  <span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-body\">\r\n\t\t\t\t\t\tAre you SURE you want to make these changes? \r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-footer\">\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={saveChanges}>Yes</button>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">No</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"modal fade\" id=\"changeEmailModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"changeEmailModal\" aria-hidden=\"true\">\r\n\t\t\t\t  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t  <div className=\"modal-header\">\r\n\t\t\t\t\t\t<h5 className=\"modal-title\" id=\"deleteTitleConfirm\">Change Password</h5>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t\t\t\t  <span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-body\">\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label id=\"align-left\">{\"Current Email: \" + currentEmail}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label id=\"align-left\">New Email</label>\r\n\t\t\t\t\t\t\t\t<input type='email' className={emailClass} value={newEmail} onChange={newEmailChange} placeholder='Enter Email' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-footer\">\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-outline-secondary\" data-dismiss=\"modal\" onClick={changeEmail}>Change Email</button>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"modal fade\" id=\"changeNameModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"changeNameModal\" aria-hidden=\"true\">\r\n\t\t\t\t  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t  <div className=\"modal-header\">\r\n\t\t\t\t\t\t<h5 className=\"modal-title\" id=\"deleteTitleConfirm\">Change Password</h5>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t\t\t\t  <span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-body\">\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label id=\"align-left\">{\"Current name: \" + currentFirstName + \" \" + currentLastName}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label id=\"align-left\">New First Name</label>\r\n\t\t\t\t\t\t\t\t<input type='text' className={emailClass} value={newFirstName} onChange={newNewFirstChange} placeholder='Enter New First Name' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label id=\"align-left\">New Last Name</label>\r\n\t\t\t\t\t\t\t\t<input type='text' className={emailClass} value={newLastName} onChange={newLastNameChange} placeholder='Enter New Last Name' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-footer\">\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-outline-secondary\" data-dismiss=\"modal\" onClick={changeName}>Change Name</button>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"modal fade\" id=\"changePasswordModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"changePasswordModal\" aria-hidden=\"true\">\r\n\t\t\t\t  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t  <div className=\"modal-header\">\r\n\t\t\t\t\t\t<h5 className=\"modal-title\" id=\"deleteTitleConfirm\">Change Password</h5>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t\t\t\t  <span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-body\">\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label id=\"align-left\">Old Password</label>\r\n\t\t\t\t\t\t\t\t<input type='password' className={passwordClass} value={oldPassword} onChange={oldPasswordChange} placeholder='Enter password' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label id=\"align-left\">New Password</label>\r\n\t\t\t\t\t\t\t\t<input type='password' className={passwordClass} value={newPassword} onChange={newPasswordChange} placeholder='Enter password' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label id=\"align-left\">New Password (again)</label>\r\n\t\t\t\t\t\t\t\t<input type='password' className={passwordClass} value={newPassword2} onChange={newPassword2Change} placeholder='Enter password' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-footer\">\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-outline-secondary\" data-dismiss=\"modal\" onClick={changePassword}>Change Password</button>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default withRouter(UserProfile);","D:\\Coding\\React\\webAppJournal\\src\\components\\signIn.jsx",[],"D:\\Coding\\React\\webAppJournal\\src\\components\\signUp.jsx",[],["126","127"],"D:\\Coding\\React\\webAppJournal\\src\\components\\index.js",[],"D:\\Coding\\React\\webAppJournal\\src\\components\\navigation.jsx",[],"D:\\Coding\\React\\webAppJournal\\src\\components\\footer.jsx",[],["128","129"],"D:\\Coding\\React\\webAppJournal\\src\\reportWebVitals.js",[],"D:\\Coding\\React\\webAppJournal\\src\\components\\contentPagesCore.jsx",[],"D:\\Coding\\React\\webAppJournal\\src\\utils\\index.js",[],"D:\\Coding\\React\\webAppJournal\\src\\App.js",[],["130","131"],"D:\\Coding\\React\\webAppJournal\\src\\components\\companyPages\\companyEHI.jsx",[],"D:\\Coding\\React\\webAppJournal\\src\\components\\companyPages\\companyView.jsx",[],"D:\\Coding\\React\\webAppJournal\\src\\components\\userPages\\journalView.jsx",[],{"ruleId":"132","severity":1,"message":"133","line":51,"column":5,"nodeType":"134","endLine":51,"endColumn":7,"suggestions":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"136","replacedBy":"140"},{"ruleId":"138","replacedBy":"141"},{"ruleId":"136","replacedBy":"142"},{"ruleId":"138","replacedBy":"143"},{"ruleId":"136","replacedBy":"144"},{"ruleId":"138","replacedBy":"145"},{"ruleId":"136","replacedBy":"146"},{"ruleId":"138","replacedBy":"147"},{"ruleId":"136","replacedBy":"148"},{"ruleId":"138","replacedBy":"149"},{"ruleId":"136","replacedBy":"150"},{"ruleId":"138","replacedBy":"151"},{"ruleId":"132","severity":1,"message":"133","line":40,"column":5,"nodeType":"134","endLine":40,"endColumn":7,"suggestions":"152"},{"ruleId":"136","replacedBy":"153"},{"ruleId":"138","replacedBy":"154"},{"ruleId":"136","replacedBy":"155"},{"ruleId":"138","replacedBy":"156"},{"ruleId":"136","replacedBy":"157"},{"ruleId":"138","replacedBy":"158"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tiggerReload'. Either include it or remove the dependency array.","ArrayExpression",["159"],"no-native-reassign",["160"],"no-negated-in-lhs",["161"],["160"],["161"],["160"],["161"],["160"],["161"],["160"],["161"],["160"],["161"],["160"],["161"],["162"],["160"],["161"],["160"],["161"],["160"],["161"],{"desc":"163","fix":"164"},"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"165"},"Update the dependencies array to be: [tiggerReload]",{"range":"166","text":"167"},{"range":"168","text":"167"},[2085,2087],"[tiggerReload]",[1538,1540]]