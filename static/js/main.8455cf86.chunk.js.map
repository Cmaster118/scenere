{"version":3,"sources":["components/navigation.jsx","components/footer.jsx","components/signIn.jsx","components/signUp.jsx","components/forgot.jsx","components/landing.jsx","components/mainMenu.jsx","utils/index.js","components/journalView.jsx","components/journalMake.js","components/companyView.js","components/companySettings.jsx","components/testStuff.jsx","components/testStuff2.jsx","App.js","reportWebVitals.js","index.js"],"names":["navigation","props","triggerLogout","clearLogin","state","something","basePath","this","iconButton","userDisplay","undefined","currentUser","className","to","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","React","Component","withRouter","footer","signIn","loadFromCookies","data","Store","get","setState","username","user","password","pass","userFieldChange","event","target","value","passFieldChange","remFieldChange","remember","handleSubmit","set","console","log","axios","post","APIHost","then","res","latestAttempt","result","loginSave","token","history","push","reRouteTarget","catch","err","preventDefault","currentState","onSubmit","onChange","placeholder","htmlFor","forgotPath","signup","usernameFieldChange","emailFieldChange","email","pass2FieldChange","password2","firstNameFieldChange","firstName","lastnameFieldChange","lastName","checkFieldChange","checkField","first_name","last_name","latestAttept","forgotPassword","goSignIn","arePasswordsSame","password1","swapToCode","sendEmail","checkValue","checkPasswords","tokenFieldChange","resetToken","pass1FieldChange","passwordsSame","currentField","currentButton","currentMessage","landing","getFromCookies","chartReference","createRef","userToken","mainMenu","journalWriteDirect","journalReadDirect","companyReadDirect","companySettingDirect","getRadarEmotionData","inputData","labels","datasets","label","backgroundColor","borderColor","borderWidth","getSentimentData","getConceptsData","getCategoryData","testMaxMin","inputMax","inputAve","inputMin","testBarMulti","stackedBarData","inputData1","inputData2","inputData3","stackedBarData2Test","stackedBarData3Test","sentimentBarData","makeCompanyDaydata","emotion","max","joy","Math","random","anger","sadness","disgust","fear","min","ave","threshold","sentiment","thresholdPos","thresholdNeg","entities","text","count","confidence","std","relevance","keywords","relations","score","arguments","makeCompanyTestData","p1","name","responsePurity","mon","tue","wed","thu","fri","sat","sun","allDay","p2","p3","p4","journalView","backButton","goBack","journalDates","validJournalScanDates","AIDates","validJournalDates","loadTestData","index","AIdata","catData","categories","catLabels","catScores","cat","conData","concepts","conLabels","conRelevance","conDatabase","con","dbpedia_resource","emDataObj","document","emData","entData","entity","ent","entEmotion","senDataScore","oppData","abs","arrangedDataScore","entStore","keyData","keyword","key","keyEmotion","keyStore","relation","relDat","rel","relStore","init","action","dataCategories","dataConcepts","dataEmotion","dataEntities","dataKeywords","dataRelations","dataSentiment","saveToCookies","getJournalDates","config","headers","Authorization","authToken","tempAIArray","tempJoArray","remove","item","newDate","Date","createdDate","checkDate","getFullYear","getMonth","getDate","hasAI","response","status","forceLogout","pickDate","selectedDate","currentDate","journal","content","dateReq","toJSON","split","length","AIresult","messages","toString","journalDisp","forceCalenderUpdateTest","journalData","optionsCategories","scales","yAxes","ticks","beginAtZero","suggestedMin","suggestedMax","optionsConcepts","optionsEmotions","scale","optionsSentiment","cutoutPercentage","editorState","setEditor","editor","entitiesDisplay","emotionData","sentimentData","scope","ref","options","keywordsDisplay","relationsDisplay","tileClassName","date","view","hasJournal","find","element","minDetail","maxDetail","styles","border","minHeight","StyleButton","onToggle","e","style","active","BLOCK_TYPES","BlockStyleControls","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","getType","map","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","saveJournal","shorthand","author","getPlainText","loadToday","test2","getBlocksAsArray","test","next","ContentState","createFromBlockArray","EditorState","createWithContent","cookieToday","convertToRaw","onBoldClick","RichUtils","toggleInlineStyle","toggleBlockType","inlineStyle","handleKeyCommand","command","newState","today","createEmpty","journalPlaceolder","incomingState","companyView","batchIndex","maxVal","relSum","batchData","i","conSum","emSum","emSet","totalData","unshift","entEmSum","entRelSum","entSenSum","entConSum","entSenScore","keyEmSum","keyRelSum","keySenSum","keySenScore","totalCount","senSum","ResponsePurity","getCookiesValidDates","getDates","currentCompany","validSummaryDates","getValidDates","tempSumArray","forDate","getCompanyList","adding","companyOwner","includes","companyAllowsView","companySendsTo","companyList","summaryData","summaryResult","companyDisp","setCurrentCompany","dropMessage","dropDownInternal","comp","aria-haspopup","aria-labelledby","ProgressBar","now","sorter","companySettings","postNewCompanyData","companyName","companyReName","dataCompanyName","summaryViewAccess","dataCompanyPriv","resultsSendTargets","dataCompanySendTo","privateViewingPerms","dataCompanyViewing","governedUsers","dataCompanyGoverned","dataCompanySendToDeleted","dataCompanyViewingDeleted","dataCompanyGovernedDeleted","getCompanyData","targetCompany","sendChange","searchSend","viewChange","searchView","govChange","searchGov","addingEmail","triggerCompanySwap","triggerModal","clickedList","parentElement","clickedIndex","triggerStopAdd","subset","dataCompanySendToAdded","splice","dataCompanyViewingAdded","dataCompanyGovernedAdded","triggerReAdd","reAdd","modelAddEmail","newArray","modelAcceptDelete","deleteQueue","companySend","userSet","indexOf","companySendAdd","companySendDelete","companyViewing","companyViewingAdd","companyViewingDelete","governedList","companyGovernedAdd","companyGovernedDelete","selectedUser","tabIndex","role","aria-hidden","data-dismiss","promptNames","promptList","AIAspect","daySet","parseEmotion","testClass","selectPrompt","selectedPrompt","currentTarget","changeRequest","selectAI","selectedAspect","selectDay","seletedDay","dataSet","tableDisplay","currentPrompt","currentDay","currentAspect","purity","displayStats","emoMax","emoAve","emoMin","dataRadarTest","radarOptionsTest","emoThresh","dataBarTest","barOptionsTest","dataBarStack","barStackOptions","xAxes","dataTresh","dataBarNorm","barOptionsNorm","emoData","emoOptions","dataEntSent","dataEntOptions","colspan","dataRadar","dataRadarOptions","dataKeySent","dataKeyOptions","colSpan","relData","scoreData","scoreOptions","width","ButtonGroup","toggle","radio","idx","ToggleButton","variant","checked","hostName","App","lastUserSet","sessionToken","session","setToken","refresh","logout","path","exact","component","tokenRefresh","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8455cf86.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nclass navigation extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n          \r\n\t\t  something: null,\r\n\r\n        };\r\n\t}\r\n\r\n\ttriggerLogout = () => {\r\n\t\tthis.props.clearLogin()\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst basePath = this.props.basePath\r\n\r\n\t\tlet iconButton = null\r\n\t\tlet userDisplay = null\r\n\r\n\t\tif (this.props.currentUser === undefined) {\r\n\t\t\ticonButton = [\r\n\t\t\t\t(<li className={'nav-item'} key='0'>\r\n\t\t\t\t\t<Link className=\"nav-link\" to={basePath+\"/signup\"}>\r\n\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>),\r\n\r\n\t\t\t\t(<li className={'nav-item'}  key='1'>\r\n\t\t\t\t\t<Link className=\"nav-link\" to={basePath+\"/signin\"}>\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>)\r\n\t\t\t]\r\n\r\n\t\t\tuserDisplay = (\r\n\t\t\t\t<li className={'nav-item'}  key='2'>\t\r\n\t\t\t\t\t<Link className=\"nav-link\" to={basePath+\"/menu\"}>\r\n\t\t\t\t\t\tNone\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse {\r\n\t\t\ticonButton = (\r\n\t\t\t\t<li className={'nav-item'}  key='3'>\r\n\t\t\t\t\t<Link className=\"nav-link\" to={basePath+\"/\"} onClick={this.triggerLogout}>\r\n\t\t\t\t\t\tSign Out\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\r\n\t\t\tuserDisplay = (\r\n\t\t\t\t<li className={'nav-item'}  key='4'>\t\r\n\t\t\t\t\t<Link className=\"nav-link\" to={basePath+\"/menu\"}>\r\n\t\t\t\t\t\t{this.props.currentUser}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"navigation\">\r\n\t\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<Link className=\"navbar-brand\" to={basePath+\"/\"}>\r\n\t\t\t\t\t\t\tProject Scenere\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"navbar-toggler\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tdata-toggle=\"collapse\"\r\n\t\t\t\t\t\t\tdata-target=\"#navbarResponsive\"\r\n\t\t\t\t\t\t\taria-controls=\"navbarResponsive\"\r\n\t\t\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t\t\t\taria-label=\"Toggle navigation\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n\t\t\t\t\t\t\t<ul className=\"navbar-nav ml-auto\">\r\n\t\t\t\t\t\t\t\t<li className={'nav-item'}  key='30'>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to={basePath+\"/test\"}>\r\n\t\t\t\t\t\t\t\t\t\t!!TestDisplay 1!!\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className={'nav-item'}  key='31'>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to={basePath+\"/test2\"}>\r\n\t\t\t\t\t\t\t\t\t\t!!TestDisplay 2!!\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{iconButton}\r\n\t\t\t\t\t\t\t\t<li className={'nav-link'}>\t\r\n\t\t\t\t\t\t\t\t\tCurrent User: \r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t{userDisplay}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(navigation);","import React from \"react\";\r\n\r\nclass footer extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\t}\r\n\t// fixed-bottom\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"footer\">\r\n\t\t\t\t<footer className=\"py-3 bg-dark fixed-bottom\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<p className=\"m-0 text-center text-white\">\r\n\t\t\t\t\t\t\tCopyright &copy; Nightingale Technologies 2020\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</footer>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default footer;","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport Store from \"store\"\r\n\r\nclass signIn extends React.Component {\r\n\r\n\t// Lets test this out, before we move this over to the App js file\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          \r\n\t\t\t// Lets do a state machine for the sake of it...\r\n\t\t\t// 0 is \"No result given yet\"\r\n\t\t\t// 1+ would be error codes...\r\n\t\t\t// How can I change this screen as per this?\r\n\t\t\t// Eh, thats later...\r\n\t\t\tcurrentState: 0,\r\n\r\n\t\t\t// This can take in the response code, and we can use that, cant we?\r\n\t\t\tlatestAttempt: 0,\r\n\t\t  \r\n\t\t\tusername: '',\r\n\t\t\t\r\n\t\t\t// This needs to be hashed as fast as possible...\r\n\t\t\t// But I will worry about security...\r\n\t\t\t// Just note that this is probobly a bad idea...\r\n\t\t\tpassword: '',\r\n\t\t\t\r\n\t\t\tremember: false,\r\n\t\t\t\r\n        };\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis.loadFromCookies();\r\n\t};\r\n\t\r\n\tloadFromCookies = () => {\r\n\t\t\r\n\t\tconst data = Store.get('rememberUser')\r\n\t\ttry {\r\n\t\t\tthis.setState({ username:data.user ,password:data.pass })\r\n\t\t} catch {\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tuserFieldChange = (event) => {\r\n\t\tthis.setState( {username: event.target.value} )\r\n\t}\r\n\t\r\n\tpassFieldChange = (event) => {\r\n\t\tthis.setState( {password: event.target.value} )\r\n\t}\r\n\t\r\n\tremFieldChange = (event) => {\r\n\t\tthis.setState( {remember: event.target.value} )\r\n\t}\r\n\t\r\n\thandleSubmit = event => {\r\n\t\t//console.log(\"Login Triggered\")\r\n\t\t\r\n\t\t// THIS IS TERRIBLE SECIRTY! WILL SECURE THE PASSWORD IN PLAIN TEXT!\r\n\t\tif(this.state.remember) {\r\n\t\t\tStore.set('rememberUser', {user:this.state.username , pass: this.state.password })\r\n\t\t\tconsole.log(\"User data Stored\")\r\n\t\t}\r\n\t\t\r\n\t\tconst data = {\r\n\t\t\tusername: this.state.username,\r\n\t\t\tpassword: this.state.password\r\n\t\t};\r\n\t\t\r\n\t\t//console.log(data)\r\n\r\n\t\taxios.post(this.props.APIHost +\"/apiTokenAuth/\", data )\r\n\t\t.then( res => { \r\n\t\t\tthis.setState({ latestAttempt: 200 })\r\n\t\t\tconst result = this.props.loginSave( res.data.token, this.state.username )\r\n\t\t\tconsole.log(\"Success\")\r\n\t\t\t\r\n\t\t\tif (result) {\r\n\t\t\t\tconsole.log(\"Token registered\")\r\n\t\t\t\t\r\n\t\t\t\t// Change this to a dashboard lookin thing\r\n\t\t\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"Token Failed..?\")\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch( err => {\r\n\t\t\t// Change this depending on the error...\r\n\t\t\tthis.setState({ latestAttempt: 400 })\r\n\t\t\tconsole.log(err)\r\n\t\t\tconsole.log(\"Connection failed...\")\r\n\t\t})\r\n\r\n\t\tevent.preventDefault();\r\n\t}\r\n\t\r\n\trender() {\r\n\t\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<form onSubmit={this.handleSubmit} >\r\n\t\t\t\t\t<h3>Sign In</h3>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Email Address</label>\r\n\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.username} onChange={this.userFieldChange} placeholder='Enter Username' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t\t\t<input type='password' className='form-control' value={this.state.password} onChange={this.passFieldChange} placeholder='Enter password' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<input type='checkbox' className='form-control-input' id='customCheck1' value={this.state.remember} onChange={this.remFieldChange} />\r\n\t\t\t\t\t\t<label className='form-control-label' htmlFor='customCheck1' >Remember Me</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button type='submit' className='btn btn-dark btn-block'>Submit</button>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<p className='col forgot-password text-right text-dark'>\r\n\t\t\t\t\t\t\t<Link className=\"nav-link\" to={this.props.forgotPath}>\r\n\t\t\t\t\t\t\t\tForgot password?\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(signIn);","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass signup extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t\t\r\n\t\t\tusername: '',\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tpassword2: '',\r\n\t\t\tfirstName: '',\r\n\t\t\tlastName: '',\r\n\t\t\t\r\n\t\t\tcheckField: false,\r\n        };\r\n\t}\r\n\t\r\n\t// Wait, are Usernames a good thing for what we are doing? Hmmmm\r\n\tusernameFieldChange = (event) => {\r\n\t\tthis.setState( {username: event.target.value} )\r\n\t}\r\n\t\r\n\temailFieldChange = (event) => {\r\n\t\tthis.setState( {email: event.target.value} )\r\n\t}\r\n\t\r\n\tpassFieldChange = (event) => {\r\n\t\tthis.setState( {password: event.target.value} )\r\n\t}\r\n\t\r\n\tpass2FieldChange = (event) => {\r\n\t\tthis.setState( {password2: event.target.value} )\r\n\t}\r\n\t\r\n\tfirstNameFieldChange = (event) => {\r\n\t\tthis.setState( {firstName: event.target.value} )\r\n\t}\r\n\t\r\n\tlastnameFieldChange = (event) => {\r\n\t\tthis.setState( {lastName: event.target.value} )\r\n\t}\r\n\t\r\n\tcheckFieldChange = (event) => {\r\n\t\tthis.setState( {checkField: event.target.value} )\r\n\t}\r\n\t\r\n\thandleSubmit = event => {\r\n\t\t\r\n\t\tif (this.state.checkField) {\r\n\t\t\tconsole.log(\"Field was not checked\")\r\n\t\t}\r\n\t\t\r\n\t\tconst data = {\r\n\t\t\tusername: this.state.username,\r\n\t\t\t\r\n\t\t\tpassword: this.state.password,\r\n\t\t\tpassword2: this.state.password2,\r\n\t\t\t\r\n\t\t\temail: this.state.email,\r\n\t\t\t\r\n\t\t\tfirst_name: this.state.firstName,\r\n\t\t\tlast_name: this.state.firstName,\r\n\t\t};\r\n\t\t\r\n\t\t//DISABLE SIGNUP FOR NOW\r\n\t\t\r\n\t\t//console.log(data)\r\n\r\n\t\taxios.post(this.props.APIHost +\"/registerUser/\", data )\r\n\t\t.then( res => { \r\n\t\t\tthis.setState({ latestAttept: 200 })\r\n\t\t\tconsole.log(\"Success\")\r\n\t\t})\r\n\t\t.catch( err => {\r\n\t\t\t// Change this depending on the error...\r\n\t\t\tthis.setState({ latestAttept: 400 })\r\n\t\t\tconsole.log(err)\r\n\t\t\tconsole.log(\"Connection failed...\")\r\n\t\t})\r\n\r\n\t\tevent.preventDefault();\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<form  onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<h3>Sign Up</h3>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Username</label>\r\n\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.username} onChange={this.usernameFieldChange} placeholder='Enter Username' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Email Address</label>\r\n\t\t\t\t\t\t<input type='email' className='form-control' value={this.state.email} onChange={this.emailFieldChange} placeholder='Enter email' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t\t\t<input type='password' className='form-control' value={this.state.password} onChange={this.passFieldChange} placeholder='Enter password' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Confirm Password</label>\r\n\t\t\t\t\t\t<input type='password' className='form-control' value={this.state.password2} onChange={this.pass2FieldChange} placeholder='Confirm password' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>First Name</label>\r\n\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.firstName} onChange={this.firstNameFieldChange} placeholder='First Name' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Last Name</label>\r\n\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.lastName} onChange={this.lastnameFieldChange} placeholder='Last Name' />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<input type='checkbox' className='form-control-input' id='customCheck1' value={this.state.checkField} onChange={this.checkFieldChange} />\r\n\t\t\t\t\t\t<label className='form-control-label' htmlFor='customCheck1' >Legal stuff? Not sure...</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button type='submit' className='btn btn-dark btn-block'>Submit</button>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t</form>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default signup;","import React from \"react\";\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass forgotPassword extends React.Component {\r\n\t\t\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n\t\t\temail: '',\r\n\r\n\t\t\tresetToken: '',\r\n\r\n\t\t\tcurrentState: 0,\r\n\r\n\t\t\tpassword1:'',\r\n\t\t\tpassword2:'',\r\n\r\n\t\t\tpasswordsSame: false\r\n\t\t\t\t\t\t\r\n        };\r\n\t\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState( \r\n\t\t\t{email: ''},\r\n\t\t\t{resetToken: ''},\r\n\t\t\t{password1: ''},\r\n\t\t\t{password2: ''},\r\n\t\t)\r\n\t}\r\n\r\n\tgoSignIn = () => {\r\n\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t}\r\n\r\n\tarePasswordsSame = () => {\r\n\t\t// I MAY need something more complicated than this, but it can be this for now....\r\n\t\treturn (this.state.password1 === this.state.password2)\r\n\t}\r\n\r\n\tswapToCode = () => {\r\n\t\tthis.setState( {currentState: 1} )\r\n\t}\r\n\r\n\tsendEmail = () => {\r\n\t\tthis.setState( {currentState: 1} )\r\n\t}\r\n\r\n\tcheckValue = () => {\r\n\t\tthis.setState( {currentState: 2} )\r\n\t}\r\n\r\n\tcheckPasswords = () => {\r\n\t\t// I can use the API for this...\r\n\t\tif (this.arePasswordsSame()) {\r\n\t\t\tthis.setState( {currentState: 3} )\r\n\t\t}\r\n\t}\r\n\r\n\r\n\temailFieldChange = (event) => {\r\n\t\tthis.setState( {email: event.target.value} )\r\n\t}\r\n\r\n\ttokenFieldChange = (event) => {\r\n\t\tthis.setState( {resetToken: event.target.value} )\r\n\r\n\t\tthis.arePasswordsSame()\r\n\t}\r\n\t\r\n\tpass1FieldChange = (event) => {\r\n\t\tthis.setState( {password1: event.target.value} )\r\n\r\n\t\t//this.arePasswordsSame()\r\n\t}\r\n\r\n\tpass2FieldChange = (event) => {\r\n\t\tthis.setState( {password2: event.target.value} )\r\n\r\n\t\tthis.arePasswordsSame()\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\tlet currentField = null\r\n\t\tlet currentButton = null\r\n\t\tlet currentMessage = null\r\n\r\n\t\tif (this.state.currentState === 0) {\r\n\t\t\tcurrentMessage = (\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<p> \r\n\t\t\t\t\t\t\tEnter your email address.\r\n\t\t\t\t\t\t\tIf it is in the system, we will send you an email address with a code.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\r\n\t\t\tcurrentField = (\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label>Email Address</label>\r\n\t\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.email} onChange={this.emailFieldChange} placeholder='Enter email' />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\r\n\t\t\tcurrentButton = [\r\n\t\t\t\t(\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.sendEmail}>\r\n\t\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t),(\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col m-2\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.swapToCode}>\r\n\t\t\t\t\t\t\t\tAlready have the code!\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t]\r\n\t\t\t\t\r\n\t\t}\r\n\t\telse if (this.state.currentState === 1) {\r\n\r\n\t\t\tcurrentMessage = (\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<p> \r\n\t\t\t\t\t\tCheck your email.\r\n\t\t\t\t\t\tIf your email is correct, then enter the code it gives you here:\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\r\n\t\t\tcurrentField = (\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Reset token</label>\r\n\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.resetToken} onChange={this.tokenFieldChange} placeholder='Enter Token' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\r\n\t\t\tcurrentButton = (\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.checkValue}>\r\n\t\t\t\t\t\tCheck...\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse if (this.state.currentState === 2) {\r\n\t\r\n\t\t\tcurrentMessage = [\r\n\t\t\t\t<div className=\"row\"> \r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<p> Enter your new password! </p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t]\r\n\t\t\tif (!this.arePasswordsSame()) {\r\n\t\t\t\tcurrentMessage.push(\r\n\t\t\t\t\t<div className=\"row\"> \r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<p className=\"text-danger\"> Passwords do not match! </p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\tcurrentField = [\r\n\t\t\t\t( \r\n\t\t\t\t\t<div className=\"row\"> \r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.resetToken} onChange={this.pass1FieldChange} placeholder='Enter Password' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t),\r\n\t\t\t\t(\r\n\t\t\t\t\t<div className=\"row\"> \r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.resetToken} onChange={this.pass2FieldChange} placeholder='Re-enter Password' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t)\r\n\t\t\t]\r\n\t\t\tcurrentButton = (\r\n\t\t\t\t<div className=\"row\"> \r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.checkPasswords}>\r\n\t\t\t\t\t\t\tCheck...\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse if (this.state.currentState === 2) {\r\n\t\t\tcurrentMessage = (\r\n\t\t\t\t<div className=\"row\"> \r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<p> Password has been successfullty reset! </p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t\tcurrentField = null\r\n\r\n\t\t\tcurrentButton = (\r\n\t\t\t\t<div className=\"row\"> \r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.goSignIn}>\r\n\t\t\t\t\t\t\tSign In!\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className='container-sm'>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<h3> Forgot your password? </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{currentMessage}\r\n\t\t\t\t{currentField}\r\n\t\t\t\t{currentButton}\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(forgotPassword);","import React from \"react\";\r\n// import axios from \"axios\";\r\n\r\nimport Store from \"store\"\r\n\r\nclass landing extends React.Component {\r\n\r\n\t// Lets test this out, before we move this over to the App js file\r\n\tconstructor(props) {\r\n        super(props);\r\n\t\tthis.chartReference = React.createRef();\r\n\t\t\r\n        this.state = {\r\n\t\t\tuserToken: null,\r\n        };\r\n\t}\r\n\t\r\n\tgetFromCookies = () => {\r\n\t\tStore.get('rememberSomething')\r\n\t};\r\n\t\r\n\trender() {\r\n\t\r\n\t\treturn (\r\n\t\t\t<div className=\"landing\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row align-items-center my-5\">\r\n\t\t\t\t\t\t<div className=\"col-lg-12 border\">\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tSample Title\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row align-items-center my-2 border\">\r\n\t\t\t\t\t\t<div className=\"col-lg-7\">\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tAnother set of explinations?\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col m-5 border\">\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tExplainations ahoy!\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default landing;","import React from \"react\";\r\n// import axios from \"axios\";\r\n\r\nimport Store from \"store\"\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nclass mainMenu extends React.Component {\r\n\r\n\t// Lets test this out, before we move this over to the App js file\r\n\tconstructor(props) {\r\n        super(props);\r\n\t\tthis.chartReference = React.createRef();\r\n\t\t\r\n        this.state = {\r\n\t\t\tsomething: null,\r\n        };\r\n\r\n\t\t// We are going to have to redirect from here if there is no user...\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log(\"Check for login...\")\r\n\r\n\t\tif (this.props.currentUser === undefined) {\r\n\t\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t\t}\r\n\t\t\r\n\t\t// Hm, What would be a better use of our tokens then doing just this every time?\r\n\t\t\r\n\t\t//let check = this.props.tokenRefresh()\r\n\t\t//if (!check) {\r\n\t\t//\tthis.props.history.push(this.props.reRouteTarget)\r\n\t\t//}\r\n\t}\r\n\t\r\n\tgetFromCookies = () => {\r\n\t\tStore.get('rememberSomething')\r\n\t};\r\n\t\r\n\trender() {\r\n\t\r\n\t\treturn (\r\n\t\t\t<div className=\"mainMenu\">\r\n\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\r\n\t\t\t\t\t<div className=\"row align-items-center my-5\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\tWelcome to this barebones dashboard lookin thing!\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"row align-items-center my-5\">\r\n\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\tWrite/Edit Journal\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t\tClick this button to write today's Journal\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"btn btn-primary\" to={this.props.journalWriteDirect}>\r\n\t\t\t\t\t\t\t\t\t\tGo!\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\tView Past Journal\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t\tView the contents and AI result of your previous Journals\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"btn btn-primary\" to={this.props.journalReadDirect}>\r\n\t\t\t\t\t\t\t\t\t\tGo!\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\tView Company Summary\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t\tView contents of Company Summaries, to which you belong.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"btn btn-primary\" to={this.props.companyReadDirect}>\r\n\t\t\t\t\t\t\t\t\t\tGo!\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\tCompany Edit!\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t\tEdit Company Entiries to which you are Owner of\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"btn btn-primary\" to={this.props.companySettingDirect}>\r\n\t\t\t\t\t\t\t\t\t\tGo!\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(mainMenu);","// Use this or localstorage?\r\nimport Store from \"store\"\r\n\r\n// Maybe I should put ALL the storage stuff here...\r\nexport const login = (tokenKey, username) => {\r\n\tStore.set('jwtSession', {user:username, token:tokenKey})\r\n}\r\n\r\nexport const logout = () => {\r\n\tStore.remove('jwtSession')\r\n}\r\n\r\nexport const isLoggedIn = () => {\r\n\tif (Store.get('jwtSession')) {\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\treturn false;\r\n}\r\n\r\n// Lets try this for the Graph Data...\r\n// See if this works out okay...\r\n// The options may be overkill though...\r\n\r\n\r\n// Initial tests show good results, So I should merge these into as few functions as I can....\r\n// Right now its too many...\r\nexport const getRadarEmotionData = (inputData) => {\r\n\t\r\n\tconst data = {\r\n\t\tlabels: ['Anger', 'Disgust', 'Fear', 'Joy', 'Sadness'],\r\n\t\t\tdatasets: [ \r\n\t\t\t{\r\n\t\t\t\tlabel: 'Confidence Levels',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tbackgroundColor: 'rgba(99, 255, 132, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(99, 255, 132, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getRadarEmotionOptions = () => {\r\n\tconst options = {\r\n\t  scale: {\r\n\t\tticks: { \r\n\t\t\tbeginAtZero: true,\r\n\t\t\tsuggestedMin: 0,\r\n\t\t\tsuggestedMax: 1,\r\n\t\t},\r\n\t  },\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getSentimentData = (inputData) => {\r\n\tconst data = {\r\n\tlabels: ['Positive', 'Negative'],\r\n\tdatasets: [\r\n\t\t\t{\r\n\t\t\tlabel: ['Sentiment'], \r\n\t\t\tdata: inputData,\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(99, 255, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgba(99, 255, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getSentimentOptions = () => {\r\n\tconst options = {\r\n\t\tcutoutPercentage: 50,\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getConceptsData = (inputData, labels) => {\r\n\tconst data = {\r\n\tlabels: labels,\r\n\tdatasets: [\r\n\t\t\t{\r\n\t\t\tlabel: 'Concepts Relevance',\r\n\t\t\tdata: inputData,\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getConceptsOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tsuggestedMin: 0,\r\n\t\t\t\t\t\tsuggestedMax: 1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\n// This can probobly be merged with the other one... but it is here for perhaps a color shift?\r\nexport const getCategoryData = (inputData, labels) => {\r\n\tconst data = {\r\n\tlabels: labels,\r\n\tdatasets: [\r\n\t\t\t{\r\n\t\t\tlabel: 'Categories Score',\r\n\t\t\tdata: inputData,\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getCategoryOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tsuggestedMin: 0,\r\n\t\t\t\t\t\tsuggestedMax: 1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\n// Now we can test to see how this would actually look.\r\nexport const testMaxMin = (inputMax, inputAve, inputMin) => {\r\n\tconst data = {\r\n\t\tlabels: ['Joy', 'Anger', 'Sadness', 'Disgust', 'Fear'],\r\n\t\t\tdatasets: [ \r\n\t\t\t{\r\n\t\t\t\tlabel: 'Max',\r\n\t\t\t\tdata: inputMax,\r\n\t\t\t\tbackgroundColor: 'rgba(99, 255, 132, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(99, 255, 132, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Ave',\r\n\t\t\t\tdata: inputAve,\r\n\t\t\t\tbackgroundColor: 'rgba(99, 132, 255, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(99, 132, 255, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Min',\r\n\t\t\t\tdata: inputMin,\r\n\t\t\t\tbackgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(255, 99, 132, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\n// How can I make this not terrible back here?\r\nexport const testBarMulti = (inputData) => {\r\n\tconst data = {\r\n\tlabels: ['Joy', 'Anger', 'Sadness', 'Disgust', 'Fear'],\r\n\tdatasets: [\r\n\t\t\t{\r\n\t\t\tlabel: '% Above Threshold',\r\n\t\t\tdata: inputData,\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\nexport const testBarMultiOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tsuggestedMin: 0,\r\n\t\t\t\t\t\tsuggestedMax: 1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const stackedBarData = (inputData1, inputData2, inputData3) => {\r\n\tconst data = {\r\n\t\tlabels: ['Value'],\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Minimum',\r\n\t\t\t\tdata: inputData1,\r\n\t\t\t\tbackgroundColor: 'rgb(255, 99, 132)',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Average',\r\n\t\t\t\tdata: inputData2,\r\n\t\t\t\tbackgroundColor: 'rgb(54, 162, 235)',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Maximum',\r\n\t\t\t\tdata: inputData3,\r\n\t\t\t\tbackgroundColor: 'rgb(75, 192, 192)',\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\nexport const stackedBarOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\t//stacked: true,\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tsuggestedMin: -1,\r\n\t\t\t\t\t\tsuggestedMax: 1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\txAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\t//stacked: true,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const stackedBarData2Test = (inputData1, inputData2, inputData3) => {\r\n\tconst data = {\r\n\t\tlabels: ['Relevance', 'Sentiment'],\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Minimum',\r\n\t\t\t\tdata: inputData1,\r\n\t\t\t\tbackgroundColor: 'rgb(255, 99, 132)',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Average',\r\n\t\t\t\tdata: inputData2,\r\n\t\t\t\tbackgroundColor: 'rgb(54, 162, 235)',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Maximum',\r\n\t\t\t\tdata: inputData3,\r\n\t\t\t\tbackgroundColor: 'rgb(75, 192, 192)',\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const stackedBarData3Test = (inputData1, inputData2, inputData3) => {\r\n\tconst data = {\r\n\t\tlabels: ['Confidence', 'Relevance', 'Sentiment'],\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Minimum',\r\n\t\t\t\tdata: inputData1,\r\n\t\t\t\tbackgroundColor: 'rgb(255, 99, 132)',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Average',\r\n\t\t\t\tdata: inputData2,\r\n\t\t\t\tbackgroundColor: 'rgb(54, 162, 235)',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Maximum',\r\n\t\t\t\tdata: inputData3,\r\n\t\t\t\tbackgroundColor: 'rgb(75, 192, 192)',\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const sentimentBarData = (inputData) => {\r\n\tconst data = {\r\n\t\tlabels: ['Positive', 'Negative'],\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\tlabel: '% Above Threshold',\r\n\t\t\tdata: inputData,\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\nexport const sentimentBarOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tsuggestedMin: 0,\r\n\t\t\t\t\t\tsuggestedMax: 1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\n// This is where my template stuff is ---------------------------------------------------------------\r\nexport const getDoughData = (inputData) => {\r\n\tconst data = {\r\n\t\tlabels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\t\tborderColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getDoughOptions = () => {\r\n\tconst options = {\r\n\t\tcutoutPercentage: 50,\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getRadarData = (inputData) => {\r\n\tconst data = {\r\n\t\tlabels: ['Thing 1', 'Thing 2', 'Thing 3', 'Thing 4', 'Thing 5', 'Thing 6'],\r\n\t\t\tdatasets: [ \r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tbackgroundColor: 'rgba(99, 255, 132, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(99, 255, 132, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getRadarOptions = () => {\r\n\tconst options = {\r\n\t  scale: {\r\n\t\tticks: { beginAtZero: true },\r\n\t  },\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getLineData = (inputData, inputData2) => {\r\n\tconst data = {\r\n\t\tlabels: ['Thing 1', 'Thing 2', 'Thing 3', 'Thing 4', 'Thing 5', 'Thing 6'],\r\n\t\t\tdatasets: [ \r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tfill: false,\r\n\t\t\t\tbackgroundColor: 'rgb(99, 255, 132)',\r\n\t\t\t\tborderColor: 'rgba(99, 255, 132, 0.2)',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes2',\r\n\t\t\t\tdata: inputData2,\r\n\t\t\t\tfill: false,\r\n\t\t\t\tbackgroundColor: 'rgb(255, 99, 132)',\r\n\t\t\t\tborderColor: 'rgba(255, 99, 132, 0.2)',\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getLineOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getBarData = (inputData) => {\r\n\tconst data = {\r\n\tlabels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n\tdatasets: [\r\n\t\t\t{\r\n\t\t\tlabel: '# of Votes',\r\n\t\t\tdata: inputData,\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getBarOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getScatterData = (inputData, inputData2) => {\r\n\tconst data = {\r\n\t\tlabels: ['Thing 1', 'Thing 2', 'Thing 3', 'Thing 4', 'Thing 5', 'Thing 6'],\r\n\t\t\tdatasets: [ \r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tbackgroundColor: 'rgba(99, 255, 132, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(99, 255, 132, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes2',\r\n\t\t\t\tdata: inputData2,\r\n\t\t\t\tbackgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(255, 99, 132, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getScatterOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t},\r\n\t\t\t},],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\n// THIS IS EXAMPLE COMPANY TEST DATA!!!\r\nconst makeCompanyDaydata = () => {\r\n\t\r\n\t\r\n\t\r\n\tlet dayData = {\r\n\t\t\temotion: { \r\n\t\t\t\tmax:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()}, \r\n\t\t\t\tmin:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()}, \r\n\t\t\t\tave:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\r\n\t\t\t\tthreshold:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t},\r\n\t\t\tsentiment: {\r\n\t\t\t\tmax:2*Math.random()-1, \r\n\t\t\t\tmin:2*Math.random()-1, \r\n\t\t\t\tave:2*Math.random()-1,\r\n\t\t\t\t\r\n\t\t\t\tthresholdPos:Math.random(),\r\n\t\t\t\tthresholdNeg:Math.random(),\r\n\t\t\t},\r\n\t\t\tentities: [\r\n\t\t\t\t{text:\"Example Entity\", \r\n\t\t\t\t\tcount:12,\r\n\t\t\t\t\ttype:\"Whatever\",\r\n\t\t\t\t\tconfidence:{ \r\n\t\t\t\t\t\tmax:Math.random(), \r\n\t\t\t\t\t\tmin:Math.random(), \r\n\t\t\t\t\t\tave:Math.random(),\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstd:Math.random(),\r\n\t\t\t\t\t},\r\n\t\t\t\t\trelevance:{\r\n\t\t\t\t\t\tmax:Math.random(),\r\n\t\t\t\t\t\tmin:Math.random(),\r\n\t\t\t\t\t\tave:Math.random(),\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstd:Math.random(),\r\n\t\t\t\t\t},\r\n\t\t\t\t\temotion:{\r\n\t\t\t\t\t\tmax:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\t\tmin:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\t\tave:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstd:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\t}, \r\n\t\t\t\t\tsentiment:{\r\n\t\t\t\t\t\tmax:2*Math.random()-1, \r\n\t\t\t\t\t\tmin:2*Math.random()-1, \r\n\t\t\t\t\t\tave:2*Math.random()-1,\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstd:Math.random(),\r\n\t\t\t\t\t},\r\n\t\t\t\t}, \r\n\t\t\t],\r\n\t\t\tkeywords: [\r\n\t\t\t\t{text:\"Example Keyword\", \r\n\t\t\t\t\tcount:6, \r\n\t\t\t\t\t\r\n\t\t\t\t\trelevance:{\r\n\t\t\t\t\t\tmax:Math.random(),\r\n\t\t\t\t\t\tmin:Math.random(),\r\n\t\t\t\t\t\tave:Math.random(),\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstd:Math.random(),\r\n\t\t\t\t\t}, \r\n\t\t\t\t\temotion:{\r\n\t\t\t\t\t\tmax:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\t\tmin:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\t\tave:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstd:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\t}, \r\n\t\t\t\t\tsentiment:{\r\n\t\t\t\t\t\tmax:2*Math.random()-1, \r\n\t\t\t\t\t\tmin:2*Math.random()-1, \r\n\t\t\t\t\t\tave:2*Math.random()-1,\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstd:Math.random(),\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\trelations: [\r\n\t\t\t\t{type:\"didTo\", \r\n\t\t\t\t\tcount:4, \r\n\t\t\t\t\tscore:{\r\n\t\t\t\t\t\tmax:2*Math.random()-1, \r\n\t\t\t\t\t\tmin:2*Math.random()-1, \r\n\t\t\t\t\t\tave:2*Math.random()-1,\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstd:Math.random(),\r\n\t\t\t\t\t}, \r\n\t\t\t\t\targuments:[{text:\"person1\"},{text:\"person2\"}] }\r\n\t\t\t],\r\n\t\t}\r\n\treturn dayData\r\n}\r\n\r\nexport const makeCompanyTestData = () => {\r\n\t\r\n\tconst testData = {\r\n\t\tp1:{ name:\"Prompt 1 Full Sentance\",\r\n\t\t\tresponsePurity:90,\r\n\t\t\tmon: makeCompanyDaydata(),\r\n\t\t\ttue: makeCompanyDaydata(),\r\n\t\t\twed: makeCompanyDaydata(),\r\n\t\t\tthu: makeCompanyDaydata(),\r\n\t\t\tfri: makeCompanyDaydata(),\r\n\t\t\tsat: makeCompanyDaydata(),\r\n\t\t\tsun: makeCompanyDaydata(),\r\n\t\t\tallDay: makeCompanyDaydata(),\r\n\t\t},\r\n\t\tp2:{ name:\"Prompt 2 Full Sentance\",\r\n\t\t\tresponsePurity:50,\r\n\t\t\tmon:makeCompanyDaydata(),\r\n\t\t\ttue:makeCompanyDaydata(),\r\n\t\t\twed:makeCompanyDaydata(),\r\n\t\t\tthu:makeCompanyDaydata(),\r\n\t\t\tfri:makeCompanyDaydata(),\r\n\t\t\tsat:makeCompanyDaydata(),\r\n\t\t\tsun:makeCompanyDaydata(),\r\n\t\t\tallDay:makeCompanyDaydata(),\r\n\t\t},\r\n\t\tp3:{ name:\"Prompt 3 Full Sentance\",\r\n\t\t\tresponsePurity:10,\r\n\t\t\tmon: makeCompanyDaydata(),\r\n\t\t\ttue: makeCompanyDaydata(),\r\n\t\t\twed: makeCompanyDaydata(),\r\n\t\t\tthu: makeCompanyDaydata(),\r\n\t\t\tfri: makeCompanyDaydata(),\r\n\t\t\tsat: makeCompanyDaydata(),\r\n\t\t\tsun: makeCompanyDaydata(),\r\n\t\t\tallDay: makeCompanyDaydata(),\r\n\t\t},\r\n\t\tp4:{ name:\"Prompt 4 Full Sentance\",\r\n\t\t\tresponsePurity:75,\r\n\t\t\tmon: makeCompanyDaydata(),\r\n\t\t\ttue: makeCompanyDaydata(),\r\n\t\t\twed: makeCompanyDaydata(),\r\n\t\t\tthu: makeCompanyDaydata(),\r\n\t\t\tfri: makeCompanyDaydata(),\r\n\t\t\tsat: makeCompanyDaydata(),\r\n\t\t\tsun: makeCompanyDaydata(),\r\n\t\t\tallDay: makeCompanyDaydata(),\r\n\t\t},\r\n\t}\r\n\t\t\t\r\n\treturn testData\r\n}","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Store from \"store\"\r\nimport Calendar from 'react-calendar'\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { Doughnut, Radar, Bar } from 'react-chartjs-2';\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n//import {isLoggedIn} from '../utils';\r\nimport {getRadarEmotionData, getSentimentData, getConceptsData, getCategoryData} from '../utils';\r\nimport {getRadarEmotionOptions, getSentimentOptions, getConceptsOptions, getCategoryOptions} from '../utils';\r\n\r\nclass journalView extends React.Component {\r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tmessages: \"Waiting for user input...\",\r\n\t\t\tjournalData: \"\",\r\n\t\t\t\r\n\t\t\tcurrentDate: new Date(),\r\n\t\t\t\r\n\t\t\t// These are the dates that we know have valid Journal entries\r\n\t\t\tvalidJournalDates: [],\r\n\t\t\t// These are the dates that we know have a valid Journal, AND an valid AI response!\r\n\t\t\tvalidJournalScanDates: [],\r\n\t\t\t\r\n\t\t\tdataCategories: getCategoryData([0], ['']),\r\n\t\t\toptionsCategories: getCategoryOptions(),\r\n\t\t\t\r\n\t\t\tdataConcepts: getConceptsData([0],['']),\r\n\t\t\toptionsConcepts: getConceptsOptions(),\r\n\t\t\t\r\n\t\t\tdataEntities: [],\r\n\t\t\tdataKeywords: [],\r\n\t\t\tdataRelations: [],\r\n\t\t\t\r\n\t\t\tdataEmotion: getRadarEmotionData([0]),\r\n\t\t\toptionsEmotions: getRadarEmotionOptions(),\r\n\t\t\t\r\n\t\t\tdataSentiment: getSentimentData([0]),\r\n\t\t\toptionsSentiment: getSentimentOptions(),\r\n\r\n        };\r\n\t\t\r\n\t\t// This doesnt look right... Fix this later I guess\r\n\t\tthis.onChange = (editorState) => this.setState({editorState});\r\n\t\tthis.setEditor = (editor) => {\r\n\t\t\tthis.editor = editor;\r\n\t\t};\r\n\t\t\r\n\t};\r\n\r\n\tbackButton = () => {\r\n\t\tthis.props.history.goBack()\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\t\r\n\t\tlet result = this.loadFromCookies();\r\n\t\tif (!result) {\r\n\t\t\tthis.getJournalDates()\r\n\t\t}\r\n\t};\r\n\t\r\n\tloadFromCookies = () => {\r\n\t\t// Security here given our user....\r\n\t\t// console.log(this.props.currentUser)\r\n\t\t\r\n\t\t// Change this so that it is for the currentuser, I got that up here done, but LETS TRY\r\n\t\tlet journalDates = Store.get(this.props.currentUser+'-ValidDates')\r\n\t\t\r\n\t\ttry{\r\n\t\t\tthis.setState({validJournalScanDates: journalDates.AIDates, validJournalDates: journalDates.journalDates})\r\n\t\t\tconsole.log(\"Got the journal data from the cookies\")\r\n\t\t\treturn true\r\n\t\t} catch{\r\n\t\t\tconsole.log(\"No cookies to load the data from\")\r\n\t\t\treturn false\r\n\t\t}\r\n\t};\r\n\t\r\n\tloadTestData = () => {\r\n\t\t// And here is our testdata for display\r\n\t\tlet AIdata = Store.get('testData')\r\n\t\t//try{\r\n\t\t\t//console.log(AIdata)\r\n\t\t\t\r\n\t\t\t// Categories!\r\n\t\t\tconst catData = AIdata.categories\r\n\t\t\t\r\n\t\t\tlet catLabels = []\r\n\t\t\tlet catScores = []\r\n\t\t\t\r\n\t\t\tvar index;\r\n\t\t\tfor (index in catData) {\r\n\t\t\t\tconst cat = catData[index]\r\n\t\t\t\t//console.log(cat)\r\n\t\t\t\t\r\n\t\t\t\tcatLabels.push(cat.label)\r\n\t\t\t\tcatScores.push(cat.score)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Concepts!\r\n\t\t\tconst conData = AIdata.concepts\r\n\t\t\t\r\n\t\t\tlet conLabels = []\r\n\t\t\tlet conRelevance = []\r\n\t\t\tlet conDatabase = []\r\n\t\t\t\r\n\t\t\tfor (index in conData) {\r\n\t\t\t\tconst con = conData[index]\r\n\t\t\t\t\r\n\t\t\t\tconLabels.push(con.text)\r\n\t\t\t\tconRelevance.push(con.relevance)\r\n\t\t\t\tconDatabase.push(con.dbpedia_resource)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Emotions!\r\n\t\t\tconst emDataObj = AIdata.emotion.document.emotion\r\n\t\t\tconst emData = [emDataObj.anger, emDataObj.disgust, emDataObj.fear, emDataObj.joy, emDataObj.sadness]\r\n\t\t\t\r\n\t\t\t// Entities!\r\n\t\t\tconst entData = AIdata.entities\r\n\t\t\t\r\n\t\t\tlet entity = []\r\n\r\n\t\t\tfor (index in entData) {\r\n\t\t\t\tconst ent = entData[index]\r\n\t\t\t\t//console.log(ent)\r\n\t\t\t\t\r\n\t\t\t\t// What about this?\r\n\t\t\t\t//console.log(ent.disambiguation)\r\n\t\t\t\t\r\n\t\t\t\tconst entEmotion = [ent.emotion.anger, ent.emotion.disgust, ent.emotion.fear, ent.emotion.joy, ent.emotion.sadness]\r\n\t\t\t\t\r\n\t\t\t\tconst senDataScore = ent.sentiment.score\r\n\t\t\t\tconst oppData = 1-Math.abs(senDataScore)\r\n\t\t\t\t\r\n\t\t\t\tlet arrangedDataScore = [0, 0]\r\n\t\t\t\tif (senDataScore > 0) {\r\n\t\t\t\t\tarrangedDataScore = [senDataScore, oppData]\r\n\t\t\t\t} else {\r\n\t\t\t\t\tarrangedDataScore = [oppData, senDataScore]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst entStore = {\r\n\t\t\t\t\tid:index,\r\n\t\t\t\t\t\r\n\t\t\t\t\ttext:ent.text,\r\n\t\t\t\t\ttype:ent.type,\r\n\t\t\t\t\t\r\n\t\t\t\t\tcount:ent.count,\r\n\t\t\t\t\trelevance:ent.relevance,\r\n\t\t\t\t\t\r\n\t\t\t\t\temotion:entEmotion,\r\n\t\t\t\t\tsentiment:arrangedDataScore,\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tentity.push(entStore)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Keywords!\r\n\t\t\tconst keyData = AIdata.keywords\r\n\t\t\t\r\n\t\t\tlet keyword = []\r\n\r\n\t\t\tfor (index in keyData) {\r\n\t\t\t\tconst key = keyData[index]\r\n\t\t\t\t\r\n\t\t\t\t//console.log(key.emotion)\r\n\t\t\t\t//console.log(key.sentiment)\r\n\t\t\t\t\r\n\t\t\t\tconst keyEmotion = [key.emotion.anger, key.emotion.disgust, key.emotion.fear, key.emotion.joy, key.emotion.sadness]\r\n\t\t\t\t\r\n\t\t\t\tconst senDataScore = key.sentiment.score\r\n\t\t\t\tconst oppData = 1-Math.abs(senDataScore)\r\n\t\t\t\t\r\n\t\t\t\tlet arrangedDataScore = [0, 0]\r\n\t\t\t\tif (senDataScore > 0) {\r\n\t\t\t\t\tarrangedDataScore = [senDataScore, oppData]\r\n\t\t\t\t} else {\r\n\t\t\t\t\tarrangedDataScore = [oppData, senDataScore]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst keyStore = {\r\n\t\t\t\t\tid:index,\r\n\t\t\t\t\t\r\n\t\t\t\t\ttext:key.text,\r\n\t\t\t\t\tcount:key.count,\r\n\t\t\t\t\trelevance:key.relevance,\r\n\t\t\t\t\t\r\n\t\t\t\t\temotion:keyEmotion,\r\n\t\t\t\t\tsentiment:arrangedDataScore,\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tkeyword.push(keyStore)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Relations!\r\n\t\t\tlet relation = []\r\n\t\t\t\r\n\t\t\tconst relDat = AIdata.relations\r\n\r\n\t\t\tfor (index in relDat) {\r\n\t\t\t\tconst rel = relDat[index]\r\n\t\t\t\t\r\n\t\t\t\t// Probobly combine these?\r\n\t\t\t\t\r\n\t\t\t\tconst relStore = {\r\n\t\t\t\t\tid: index,\r\n\t\t\t\t\tinit:rel.arguments[0].text,\r\n\t\t\t\t\taction:rel.type,\r\n\t\t\t\t\ttarget:rel.arguments[1].text,\r\n\t\t\t\t\tscore:rel.score,\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\trelation.push(relStore)\r\n\r\n\t\t\t\t// How do I Show this?\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Sentiment!\r\n\t\t\tconst senDataScore = AIdata.sentiment.document.score\r\n\t\t\t\r\n\t\t\tconst senOne = 0.5*(senDataScore + 1)\r\n\t\t\tconst senOpp = 0.5*(senDataScore - 1)\r\n\t\t\t\r\n\t\t\tlet arrangedDataScore = [senOne, senOpp]\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\t\r\n\t\t\t\tdataCategories:getCategoryData(catScores, catLabels),\r\n\t\t\t\tdataConcepts:getConceptsData(conRelevance, conLabels),\r\n\t\t\t\tdataEmotion:getRadarEmotionData(emData),\r\n\t\t\t\t\r\n\t\t\t\tdataEntities: entity,\r\n\t\t\t\tdataKeywords: keyword,\r\n\t\t\t\tdataRelations: relation,\r\n\t\t\t\r\n\t\t\t\tdataSentiment:getSentimentData(arrangedDataScore),\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\t\r\n\t\t//} catch{\r\n\t\t\t//console.log(\"Error!\")\r\n\t\t//}\r\n\t}\r\n\t\r\n\tsaveToCookies = () => {\r\n\t\t\r\n\t\tStore.set(this.props.currentUser+'-ValidDates', { journalDates:this.state.validJournalDates, AIDates:this.state.validJournalScanDates })\r\n\t\tconsole.log(\"Saved to cookies!\")\r\n\t};\r\n\t\r\n\tgetJournalDates = () => {\r\n\t\t\r\n\t\tconst config = {\r\n\t\t\theaders: { Authorization: `JWT ${this.props.authToken}` }\r\n\t\t};\r\n\t\t\r\n\t\t// IF ANY GETS FAILS DUE TO BAD TOKEN, WE NEED TO SEND IT UP THE CHAIN TO DO SOMETHING ABOUT IT\r\n\t\t\r\n\t\t// So, this will give you EVERY SINGLE VALID ENTRY WE HAVE\r\n\t\t// WITHOUT. I REPEAT. WITHOUT THE JOURNAL CONTENT\r\n\t\taxios.get(this.props.APIHost +\"/getJournalDates\", config)\r\n\t\t.then( \r\n\t\t\tres => {\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(\"Got Data!\")\r\n\t\t\t\t\r\n\t\t\t\tlet tempAIArray = []\r\n\t\t\t\tlet tempJoArray = []\r\n\t\t\t\t\r\n\t\t\t\tStore.remove(this.props.currentUser+'-ValidDates')\r\n\r\n\t\t\t\tvar item = \"\"\r\n\t\t\t\tfor (item in res.data){\r\n\t\t\t\t\t\r\n\t\t\t\t\t// THESE DATES HAVE THE WRONG TIMEZONE COMING IN, SO THE RESULTING DAY CAN BE WRONG!!!!\r\n\t\t\t\t\t// CHANGE THIS!!!\r\n\t\t\t\t\tconst newDate = new Date(res.data[item].createdDate)\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst checkDate = newDate.getFullYear()+\"-\"+newDate.getMonth()+\"-\"+(newDate.getDate()+1)\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (res.data[item].hasAI) {\r\n\t\t\t\t\t\ttempAIArray.push( checkDate )\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttempJoArray.push( checkDate )\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({validJournalScanDates: tempAIArray, validJournalDates: tempJoArray})\r\n\t\t\t\t\r\n\t\t\t\t// Save this new set to the cookies...\r\n\t\t\t\tthis.saveToCookies()\r\n\t\t\t\t\r\n\t\t})\r\n\t\t.catch( err => {\r\n\t\t\tif (err.response.status === 401) {\r\n\t\t\t\tthis.props.forceLogout()\r\n\t\t\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn false\r\n\t};\r\n\t\r\n\tpickDate = (selectedDate) => {\r\n\t\t\r\n\t\tconsole.log(\"requesting date\")\r\n\t\tthis.setState({currentDate: selectedDate})\r\n\t\t\r\n\t\t// Okay, so check to see if we HAVE the journal entry in our storage\r\n\t\t// If we do, show that!\r\n\t\r\n\t\t// Change this so that it is for the currentuser, I got that up here done, but LETS TRY\r\n\t\tlet journal = Store.get(this.props.currentUser+'-Journal-'+selectedDate)\r\n\t\t\r\n\t\ttry{\r\n\t\t\t\r\n\t\t\t// TO DO, THIS ONE!\r\n\t\t\tconsole.log(journal.content)\r\n\t\t\t\r\n\t\t\tconsole.log(\"Got the Journal entry from storage?!\")\r\n\t\t} catch{\r\n\t\t\t//console.log(\"No cookies to load the data from\")\r\n\t\t\r\n\t\t\t// If we DONT, ask the server\r\n\t\t\t// need to be able to check if it was changed...\r\n\t\t\t// Probobly need to add a \"last Edited\" field...\r\n\t\t\t// And and edit history... but that is for later\r\n\t\t\t\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: { Authorization: `JWT ${this.props.authToken}` }\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tconsole.log(\"requesting date\")\r\n\t\t\tthis.setState({currentDate: selectedDate})\r\n\t\t\t\r\n\t\t\tconst dateReq = selectedDate.toJSON().split(\"T\")[0]\r\n\t\t\t\r\n\t\t\taxios.get(this.props.APIHost +\"/getUserJournal/?reqDate=\"+dateReq, config)\r\n\t\t\t.then( \r\n\t\t\t\tres => {\r\n\t\t\t\t\t// What if it is > 1?\r\n\t\t\t\t\tif (res.data.length > 0) {\r\n\t\t\t\t\t\tconsole.log(\"obtained a journal entry\")\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (res.data[0].hasAI) {\r\n\t\t\t\t\t\t\tconsole.log(\"Saved to the storage\")\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// Save in the cookies for non-login access...\r\n\t\t\t\t\t\t\tStore.set('testData', res.data[0].AIresult)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.loadTestData()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState( {\r\n\t\t\t\t\t\t\tmessages: \"Showing Journal Entry for: \" + this.state.currentDate.toString(),\r\n\t\t\t\t\t\t\tjournalDisp: res.data[0].content,\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tconsole.log(\"No entry for that day\")\r\n\t\t\t\t\t\tthis.setState( {\r\n\t\t\t\t\t\t\tmessages: \"No entry for that day\",\r\n\t\t\t\t\t\t\tjournalDisp: \"\",\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// LEts not store it in the cookies for now...\r\n\t\t\t})\r\n\t\t\t.catch( err => {\r\n\t\t\t\t\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tthis.props.forceLogout()\r\n\t\t\t\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\r\n\t\t}\r\n\t};\r\n\t\r\n\tforceCalenderUpdateTest = () => {\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\t\r\n\t\tconst tileClassName = ({ date, view }) => {\r\n\t\t\r\n\t\t\t// Add class to tiles in month view only\r\n\t\t\tif (view === 'month') {\r\n\t\t\t\t\r\n\t\t\t\tconst checkDate = date.getFullYear()+\"-\"+date.getMonth()+\"-\"+date.getDate()\r\n\t\t\t\t\r\n\t\t\t\t//console.log(checkDate)\r\n\t\t\t\t//console.log(this.state.validJournalDates)\r\n\r\n\t\t\t\t// Check if a date React-Calendar wants to check is on the list of dates to add class to\r\n\t\t\t\tconst hasJournal = this.state.validJournalDates.find( element => element === checkDate)\r\n\t\t\t\tconst hasAI = this.state.validJournalScanDates.find( element => element === checkDate)\r\n\t\t\t\t\r\n\t\t\t\tif (hasAI) {\r\n\t\t\t\t\treturn 'btn btn-success';\r\n\t\t\t\t} else if (hasJournal) {\r\n\t\t\t\t\treturn 'btn btn-warning'\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// use the default styling...\r\n\t\t\t\t\t//return 'btn btn-outline-dark'\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Entities\r\n\t\tvar entitiesDisplay = [];\r\n\t\t\r\n\t\tif (this.state.dataEntities.length > 0) { \r\n\t\t\tvar index;\r\n\t\t\tfor (index in this.state.dataEntities) {\r\n\t\t\t\tconst ent = this.state.dataEntities[index]\r\n\t\t\t\t\r\n\t\t\t\tconst emotionData = getRadarEmotionData(ent.emotion)\r\n\t\t\t\tconst sentimentData = getSentimentData(ent.sentiment)\r\n\t\t\t\t\r\n\t\t\t\tentitiesDisplay.push(\r\n\t\t\t\t\t<tr key={ent.id}>\r\n\t\t\t\t\t\t<th scope=\"row\">{ent.text}</th>\r\n\t\t\t\t\t\t<td>{ent.type}</td>\r\n\t\t\t\t\t\t<td>{ent.count}</td>\r\n\t\t\t\t\t\t<td>{ent.relevance}</td>\r\n\t\t\t\t\t\t<td> <Radar ref={this.chartReference} data={emotionData} options={this.state.optionsEmotions} /> </td>\r\n\t\t\t\t\t\t<td> <Doughnut ref={this.chartReference} data={sentimentData} options={this.state.optionsSentiment} /> </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t}\r\n\t\t\r\n\t\t// Keywords\r\n\t\tvar keywordsDisplay = [];\r\n\t\t\r\n\t\tif (this.state.dataKeywords.length > 0) { \r\n\t\t\tfor (index in this.state.dataKeywords) {\r\n\t\t\t\tconst key = this.state.dataKeywords[index]\r\n\t\t\t\t\r\n\t\t\t\tconst emotionData = getRadarEmotionData(key.emotion)\r\n\t\t\t\tconst sentimentData = getSentimentData(key.sentiment)\r\n\t\t\t\t\r\n\t\t\t\tkeywordsDisplay.push(\r\n\t\t\t\t\t<tr key={key.id}>\r\n\t\t\t\t\t\t<th scope=\"row\">{key.text}</th>\r\n\t\t\t\t\t\t<td>{key.count}</td>\r\n\t\t\t\t\t\t<td><Radar ref={this.chartReference} data={emotionData} options={this.state.optionsEmotions} /></td>\r\n\t\t\t\t\t\t<td><Doughnut ref={this.chartReference} data={sentimentData} options={this.state.optionsSentiment} /></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t}\r\n\t\t\r\n\t\t// R E L A T I O N S\r\n\t\tvar relationsDisplay = [];\r\n\t\t\r\n\t\tif (this.state.dataRelations.length > 0) { \r\n\t\t\r\n\t\t\tfor (index in this.state.dataRelations) {\r\n\t\t\t\tconst rel = this.state.dataRelations[index]\r\n\t\t\t\trelationsDisplay.push(\r\n\t\t\t\t\t<tr key={rel.id}>\r\n\t\t\t\t\t\t<th scope=\"row\">{rel.init}</th>\r\n\t\t\t\t\t\t<td>{rel.action}</td>\r\n\t\t\t\t\t\t<td>{rel.target}</td>\r\n\t\t\t\t\t\t<td>{rel.score}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"mainView\">\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"container\">\r\n\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-sm-3 m-2\">\t\r\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.backButton}>\r\n\t\t\t\t\t\t\t\tGo Back\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-sm m-2\">\t\r\n\t\t\t\t\t\t\tPage Title Test!\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"row \">\r\n\t\t\t\t\t\t<div className=\"col-lg-3 border m-2\">\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Calendar \r\n\t\t\t\t\t\t\t\t\tonChange={this.pickDate}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.currentDate}\r\n\t\t\t\t\t\t\t\t\ttileClassName={tileClassName}\r\n\r\n\t\t\t\t\t\t\t\t\tminDetail={'year'}\r\n\t\t\t\t\t\t\t\t\tmaxDetail={'month'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col border m-2\">\t\t\t\t\t\r\n\t\t\t\t\t\t\t<p>{this.state.messages}</p>\r\n\t\t\t\t\t\t\t<p>{this.state.journalDisp}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col border mx-2\">\r\n\t\t\t\t\t\t\t<Radar ref={this.chartReference} data={this.state.dataEmotion} options={this.state.optionsEmotions} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col border mx-2\">\r\n\t\t\t\t\t\t\t<Doughnut ref={this.chartReference} data={this.state.dataSentiment} options={this.state.optionsSentiment} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row  my-2\">\r\n\t\t\t\t\t\t<div className=\"col border mx-2\">\r\n\t\t\t\t\t\t\t<Bar ref={this.chartReference} data={this.state.dataCategories} options={this.state.optionsCategories} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col border mx-2\">\r\n\t\t\t\t\t\t\t<Bar ref={this.chartReference} data={this.state.dataConcepts} options={this.state.optionsConcepts} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<h3>Entities!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Type</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Relevance Score</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Emotion</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Sentiment</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{entitiesDisplay}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<h3>Keywords!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Word</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Emotion</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Sentiment</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{keywordsDisplay}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<h3>Relations!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Thing</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Action</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Target</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Score</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{relationsDisplay}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col-lg-2 border mx-2\">\r\n\t\t\t\t\t\t\t<p> Debug! </p>\r\n\t\t\t\t\t\t\t<button onClick={this.loadTestData}> Load Stored AI Data </button>\r\n\t\t\t\t\t\t\t<button onClick={this.getJournalDates}> Force Dates Update </button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row  my-2\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tPADDING\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(journalView);","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Store from \"store\"\r\nimport {Editor, EditorState, ContentState, RichUtils, convertToRaw } from 'draft-js';\r\n\r\nconst styles = {\r\n  editor: {\r\n    border: '1px solid gray',\r\n    minHeight: '6em'\r\n  }\r\n};\r\n\r\n// START OF EXAMPLE CODE FROM THE DRAFT.JS!!!!!\r\nclass StyleButton extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.onToggle = (e) => {\r\n\t\t\t//console.log(this.props.style)\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.props.onToggle(this.props.style);\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet className = 'btn btn-outline-primary';\r\n\t\tif (this.props.active) {\r\n\t\t\tclassName += ' active';\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<button className={className} onClick={this.onToggle}>\r\n\t\t\t\t{this.props.label}\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst BLOCK_TYPES = [\r\n\t{label: 'H1', style: 'header-one'},\r\n\t{label: 'H2', style: 'header-two'},\r\n\t{label: 'H3', style: 'header-three'},\r\n\t{label: 'H4', style: 'header-four'},\r\n\t{label: 'H5', style: 'header-five'},\r\n\t{label: 'H6', style: 'header-six'},\r\n\t//{label: 'Blockquote', style: 'blockquote'},\r\n\t{label: 'UL', style: 'unordered-list-item'},\r\n\t{label: 'OL', style: 'ordered-list-item'},\r\n\t//{label: 'Code Block', style: 'code-block'},\r\n];\r\n\r\nconst BlockStyleControls = (props) => {\r\n\tconst {editorState} = props;\r\n\tconst selection = editorState.getSelection();\r\n\tconst blockType = editorState\r\n\t  .getCurrentContent()\r\n\t  .getBlockForKey(selection.getStartKey())\r\n\t  .getType();\r\n\r\n\treturn (\r\n\t\t<div className=\"RichEditor-controls\">\r\n\t\t\t{BLOCK_TYPES.map((type) =>\r\n\t\t\t\t<StyleButton\r\n\t\t\t\t\tkey={type.label}\r\n\t\t\t\t\tactive={type.style === blockType}\r\n\t\t\t\t\tlabel={type.label}\r\n\t\t\t\t\tonToggle={props.onToggle}\r\n\t\t\t\t\tstyle={type.style}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst INLINE_STYLES = [\r\n\t{label: 'Bold', style: 'BOLD'},\r\n\t{label: 'Italic', style: 'ITALIC'},\r\n\t{label: 'Underline', style: 'UNDERLINE'},\r\n\t//{label: 'Monospace', style: 'CODE'},\r\n];\r\n\r\nconst InlineStyleControls = (props) => {\r\n\tconst currentStyle = props.editorState.getCurrentInlineStyle();\r\n\t\r\n\treturn (\r\n\t\t<div className=\"RichEditor-controls\">\r\n\t\t\t{INLINE_STYLES.map((type) =>\r\n\t\t\t\t<StyleButton\r\n\t\t\t\t\tkey={type.label}\r\n\t\t\t\t\tactive={currentStyle.has(type.style)}\r\n\t\t\t\t\tlabel={type.label}\r\n\t\t\t\t\tonToggle={props.onToggle}\r\n\t\t\t\t\tstyle={type.style}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// END OF THE EXAMPLE CODE!!!\r\n\r\nclass journalView extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n\t\t\r\n\t\tconst today = new Date()\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tcurrentDate: today,\r\n\t\t\t\r\n\t\t\tmessages: \"Creating journal for: \" + today.toJSON().split(\"T\")[0],\r\n\t\t\t\r\n\t\t\teditorState: EditorState.createEmpty(),\r\n\t\t\t\r\n\t\t\tjournalPlaceolder: \"\",\r\n\r\n        };\r\n\t\t\r\n\t\t// This doesnt look right... Fix this later I guess\r\n\t\tthis.onChange = (incomingState) => {\r\n\t\t\t//console.log(incomingState)\r\n\t\t\tthis.setState({\r\n\t\t\t\teditorState:incomingState,\r\n\t\t\t})\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.setEditor = (editor) => {\r\n\t\t\tthis.editor = editor;\r\n\t\t};\r\n\t\t\r\n\t};\r\n\r\n\tbackButton = () => {\r\n\t\tthis.props.history.goBack()\r\n\t}\r\n\r\n\t// Lets test a POST request then!\r\n\tsaveJournal = () => {\r\n\t\t\r\n\t\tconst config = {\r\n\t\t\theaders: { Authorization: `JWT ${this.props.authToken}` }\r\n\t\t};\r\n\t\t\r\n\t\tconst data = {\r\n\t\t\tshorthand: 'made from the website (random code needed)',\r\n\t\t\t\r\n\t\t\t// This is my workaround before I learn what ACTUALLY TO DO HERE\r\n\t\t\tauthor: '',\r\n\t\t\r\n\t\t\t// It SHOULD be sufficient to use the current date...\r\n\t\t\t// Because the journal transitions on date changes...\t\t\r\n\t\t\tcreatedDate: this.state.currentDate.toJSON().split(\"T\")[0],\r\n\t\t\t\r\n\t\t\t// Same here, Should be able to do this...\r\n\t\t\t// The question is, is this an \"overwrite\" or just an add?\r\n\t\t\tcontent: this.state.editorState.getCurrentContent().getPlainText(),\r\n\t\t};\r\n\t\t\r\n\t\t//console.log(data.content)\r\n\t\t\r\n\t\taxios.post(this.props.APIHost +\"/saveUserJournal/\", data, config )\r\n\t\t.then( res => { \r\n\t\t\r\n\t\t\tconsole.log(res)\r\n\t\t\tconsole.log(\"Success\")\r\n\t\t\t\r\n\t\t})\r\n\t\t.catch( err => {\r\n\t\t\t// Change this depending on the error...\r\n\t\t\tif (err.response.status === 401) {\r\n\t\t\t\tthis.props.forceLogout()\r\n\t\t\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t\r\n\tloadToday = () => {\r\n\t\tlet test2 = Store.get(\"TodayTest\")\r\n\t\t\r\n\t\tconsole.log(this.state.editorState.getCurrentContent().getBlocksAsArray())\r\n\t\tconsole.log(test2)\r\n\t\t\r\n\t\tlet test = this.state.editorState.getCurrentContent().getBlocksAsArray()\r\n\t\t\r\n\t\tlet next = ContentState.createFromBlockArray(test)\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\t\r\n\t\t\teditorState: EditorState.createWithContent(next)\r\n\t\t})\r\n\t}\r\n\t\r\n\tcookieToday = () => {\r\n\t\tconsole.log('content state', convertToRaw(this.state.editorState.getCurrentContent()));\r\n\t\t//Store.set( \"TodayTest\", this.state.editorState.getCurrentContent().getBlocksAsArray() )\r\n\t}\r\n\r\n\tonBoldClick = () => {\r\n\t\tthis.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'));\r\n\t}\r\n\t// Example code... Can I alter this to be more my style?\r\n\t// It works, so its okay for now...\r\n\ttoggleBlockType = (blockType) => {\r\n\t\tthis.onChange(\r\n\t\t\tRichUtils.toggleBlockType(\r\n\t\t\t\tthis.state.editorState,\r\n\t\t\t\tblockType\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\t\r\n\ttoggleInlineStyle = (inlineStyle) => {\r\n\t\tthis.onChange(\r\n            RichUtils.toggleInlineStyle(\r\n\t\t\t\tthis.state.editorState,\r\n\t\t\t\tinlineStyle\r\n            )\r\n        );\r\n\t}\r\n\t\r\n\thandleKeyCommand = (command, editorState) => {\r\n\t\tconst newState = RichUtils.handleKeyCommand(editorState, command);\r\n\r\n\t\tif (newState) {\r\n\t\t\tthis.onChange(newState);\r\n\t\t\treturn 'handled';\r\n\t\t}\r\n\r\n\t\treturn 'not-handled';\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"makeView\">\r\n\t\t\t\t<div className=\"container\">\r\n\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-sm-3 m-2\">\t\r\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.backButton}>\r\n\t\t\t\t\t\t\t\tGo Back\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-sm m-2\">\t\r\n\t\t\t\t\t\t\tPage Title Test!\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t{this.state.messages}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col border mx-2 my-2\">\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<BlockStyleControls\r\n\t\t\t\t\t\t\t\teditorState={this.state.editorState}\r\n\t\t\t\t\t\t\t\tonToggle={this.toggleBlockType}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InlineStyleControls\r\n\t\t\t\t\t\t\t\teditorState={this.state.editorState}\r\n\t\t\t\t\t\t\t\tonToggle={this.toggleInlineStyle}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div style={styles.editor} >\r\n\t\t\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\t\t  ref={this.setEditor}\r\n\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t  editorState={this.state.editorState}\r\n\t\t\t\t\t\t\t\t  onChange={this.onChange}\r\n\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t  handleKeyCommand={this.handleKeyCommand}\r\n\t\t\t\t\t\t\t\t  placeholder={this.state.journalPlaceolder}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<button className=\"btn btn-outline-primary\" onClick={this.saveJournal}> Save current Journal entry </button>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<button className=\"btn btn-outline-primary\" onClick={this.loadToday}> Load Today's Data </button>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<button className=\"btn btn-outline-primary\" onClick={this.cookieToday}> Cookie Today's Data </button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withRouter(journalView);","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Store from \"store\"\r\nimport Calendar from 'react-calendar'\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Doughnut, Radar, Bar } from 'react-chartjs-2';\r\n\r\nimport { ProgressBar } from 'react-bootstrap';\r\n\r\nimport {getRadarEmotionData, getSentimentData, getConceptsData, getCategoryData} from '../utils';\r\nimport {getRadarEmotionOptions, getSentimentOptions, getConceptsOptions, getCategoryOptions} from '../utils';\r\n\r\n\r\nclass companyView extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\t// Change this up to be a bit better,merge things together...\r\n\t\t\tdropMessage: 'Select Company=>',\r\n\t\t\tcurrentCompany: \"None\",\r\n\t\t\r\n\t\t\tcompanyList: [],\r\n\t\t\t\r\n\t\t\t// These are the dates that we know have valid Summary Entries...\r\n\t\t\tvalidSummaryDates: [],\r\n\t\t\t\r\n\t\t\tmessages: \"Waiting for user input...\",\r\n\t\t\tcompanyDisp:'',\r\n\t\t\t\r\n\t\t\tcurrentDate: new Date(),\r\n\t\t\t\r\n\t\t\tresponsePurity: 0,\r\n\t\t\t\r\n\t\t\tdataCategories: getCategoryData([0], ['']),\r\n\t\t\toptionsCategories: getCategoryOptions(),\r\n\t\t\t\r\n\t\t\tdataConcepts: getConceptsData([0], ['']),\r\n\t\t\toptionsConcepts: getConceptsOptions(),\r\n\t\t\t\r\n\t\t\tdataEntities: [],\r\n\t\t\tdataKeywords: [],\r\n\t\t\tdataRelations: [],\r\n\t\t\t\r\n\t\t\tdataEmotion: getRadarEmotionData([0]),\r\n\t\t\toptionsEmotions: getRadarEmotionOptions(),\r\n\t\t\t\r\n\t\t\tdataSentiment: getSentimentData([0]),\r\n\t\t\toptionsSentiment: getSentimentOptions(),\r\n\t\t\t\r\n        };\r\n\t\t\r\n\t};\r\n\r\n\tbackButton = () => {\r\n\t\tthis.props.history.goBack()\r\n\t}\r\n\t\r\n\tloadTestData = () => {\r\n\t\t// And here is our testdata for display\r\n\t\tlet AIdata = Store.get('testSummaryData')\r\n\t\t//try{\r\n\t\t\t\r\n\t\t\t//console.log(AIdata)\r\n\t\t\t// This AI data is going to be a Liiiiiittle more complex...\r\n\t\t\t\r\n\t\t\t//console.log(AIdata.ResponsePurity)\r\n\t\t\t\r\n\t\t\t// Categories!\r\n\t\t\tconst catData = AIdata.categories\r\n\t\t\t\r\n\t\t\tlet catLabels = []\r\n\t\t\tlet catScores = []\r\n\t\t\t\r\n\t\t\tvar index;\r\n\t\t\tvar batchIndex;\r\n\t\t\tfor (index in catData) {\r\n\t\t\t\tconst cat = catData[index]\r\n\t\t\t\t\r\n\t\t\t\tvar maxVal = 0\r\n\t\t\t\tvar relSum = 0\r\n\t\t\t\tfor (batchIndex in cat.batchData) {\r\n\t\t\t\t\tconst catRel = cat.batchData[batchIndex]\r\n\t\t\t\t\t// For now, we will average this...\r\n\t\t\t\t\trelSum += catRel.score\r\n\t\t\t\t\tmaxVal += 1\r\n\t\t\t\t}\r\n\t\t\t\trelSum /= maxVal\r\n\t\t\t\t\r\n\t\t\t\tcatLabels.push(index)\r\n\t\t\t\tcatScores.push(relSum)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Concepts!\r\n\t\t\tconst conData = AIdata.concepts\r\n\t\t\t//console.log(conData)\r\n\t\t\tlet conLabels = []\r\n\t\t\tlet conRelevance = []\r\n\t\t\tlet conDatabase = []\r\n\t\t\t\r\n\t\t\tvar i\r\n\t\t\t\r\n\t\t\tfor (index in conData) {\r\n\t\t\t\tconst con = conData[index]\r\n\t\t\t\t\r\n\t\t\t\tmaxVal = 0\r\n\t\t\t\tlet conSum = 0\r\n\t\t\t\t\r\n\t\t\t\tfor (i in con.batchData) {\r\n\t\t\t\t\tconSum += con.batchData[i]\r\n\t\t\t\t\tmaxVal += 1\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconSum /= maxVal\r\n\t\t\t\t\r\n\t\t\t\tconLabels.push(index)\r\n\t\t\t\tconRelevance.push(conSum)\r\n\t\t\t\tconDatabase.push(con.dbpedia_resource)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Emotions!\r\n\t\t\t\r\n\t\t\t// Doin average for now!\r\n\t\t\tmaxVal = 0\r\n\t\t\tvar emSum = [0,0,0,0,0]\r\n\t\t\tvar emSet = []\r\n\t\t\t\r\n\t\t\tconst emDataObj = AIdata.emotion\r\n\t\t\tfor (index in emDataObj) {\r\n\t\t\t\tconst emData = emDataObj[index]\r\n\t\t\t\tconst totalData = [emData.anger, emData.disgust, emData.fear, emData.joy, emData.sadness]\r\n\t\t\t\t\r\n\t\t\t\tmaxVal += 1\r\n\t\t\t\tfor( i in emSum ){\r\n\t\t\t\t\temSum[i] += totalData[i]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\temSet.push(totalData)\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tfor( i in emSum ){\r\n\t\t\t\temSum[i] /= maxVal\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Redo this for later...\r\n\t\t\temSet.unshift(emSum)\r\n\t\t\t\r\n\t\t\t// Entities!\r\n\t\t\tconst entData = AIdata.entities\r\n\t\t\t//console.log(entData)\r\n\t\t\t\r\n\t\t\t// The current form of the name being the key is probobly EXTREMELY BAD form?\r\n\t\t\t// Change that later I guess...\r\n\t\t\tlet entity = []\r\n\r\n\t\t\tfor (index in entData) {\r\n\t\t\t\tconst ent = entData[index]\r\n\t\t\t\t//console.log(ent)\r\n\r\n\t\t\t\tlet entEmSum = [0,0,0,0,0]\r\n\t\t\t\tlet entRelSum = 0\r\n\t\t\t\tlet entSenSum = 0\r\n\t\t\t\tlet entConSum = 0\r\n\t\t\t\tmaxVal = 0\r\n\t\t\t\t\r\n\t\t\t\tfor (i in ent.batchData) {\r\n\t\t\t\t\tconst entData = ent.batchData[i]\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst entEmotion = [entData.emotion.anger, entData.emotion.disgust, entData.emotion.fear, entData.emotion.joy, entData.emotion.sadness]\r\n\t\t\t\t\tfor( i in entEmSum ){\r\n\t\t\t\t\t\tentEmSum[i] += entEmotion[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tentConSum += entData.confidence\r\n\t\t\t\t\tentRelSum += entData.relevance\r\n\t\t\t\t\tentSenSum += entData.sentiment.score\r\n\t\t\t\t\t\r\n\t\t\t\t\tmaxVal += 1\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor( i in entEmSum ){\r\n\t\t\t\t\tentEmSum[i] /= maxVal\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tentConSum /= maxVal\r\n\t\t\t\tentSenSum /= maxVal\r\n\t\t\t\tentRelSum /= maxVal\r\n\r\n\t\t\t\t//console.log(entSenSum/maxVal)\r\n\t\t\t\tconst entSenOne = 0.5*(entSenSum/maxVal + 1)\r\n\t\t\t\tconst entSenOpp = 0.5*(entSenSum/maxVal - 1)\r\n\t\t\t\t\r\n\t\t\t\tlet entSenScore = [entSenOne, entSenOpp]\r\n\t\t\t\t\r\n\t\t\t\tconst entStore = {\r\n\t\t\t\t\tid:index,\r\n\t\t\t\t\t\r\n\t\t\t\t\ttext:index,\r\n\t\t\t\t\ttype:ent.type,\r\n\t\t\t\t\t\r\n\t\t\t\t\tcount:ent.batchData.length,\r\n\t\t\t\t\trelevance:entRelSum,\r\n\t\t\t\t\tconfidence:entConSum,\r\n\r\n\t\t\t\t\temotion:entEmSum,\r\n\t\t\t\t\tsentiment:entSenScore,\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tentity.push(entStore)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Keywords!\r\n\t\t\tconst keyData = AIdata.keywords\r\n\t\t\t\r\n\t\t\tlet keyword = []\r\n\r\n\t\t\tfor (index in keyData) {\r\n\t\t\t\tconst key = keyData[index]\r\n\t\t\t\t//console.log(key)\r\n\r\n\t\t\t\t//console.log(key.emotion)\r\n\t\t\t\t//console.log(key.sentiment)\r\n\t\t\t\t\r\n\t\t\t\tlet keyEmSum = [0,0,0,0,0]\r\n\t\t\t\tlet keyRelSum = 0\r\n\t\t\t\tlet keySenSum = 0\r\n\t\t\t\tmaxVal = 0\r\n\t\t\t\t\r\n\t\t\t\tfor (i in key.batchData) {\r\n\t\t\t\t\tconst keyData = key.batchData[i]\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst keyEmotion = [keyData.emotion.anger, keyData.emotion.disgust, keyData.emotion.fear, keyData.emotion.joy, keyData.emotion.sadness]\r\n\t\t\t\t\tfor( i in keyEmSum ){\r\n\t\t\t\t\t\tkeyEmSum[i] += keyEmotion[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tkeyRelSum += keyData.relevance\r\n\t\t\t\t\tkeySenSum += keyData.sentiment.score\r\n\t\t\t\t\t\r\n\t\t\t\t\tmaxVal += 1\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor( i in keyEmSum ){\r\n\t\t\t\t\tkeyEmSum[i] /= maxVal\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tkeySenSum /= maxVal\r\n\t\t\t\tkeyRelSum /= maxVal\r\n\t\t\t\t\r\n\t\t\t\tconst keySenOne = 0.5*(keySenSum/maxVal + 1) \r\n\t\t\t\tconst keySenOpp = 0.5*(keySenSum/maxVal - 1) \r\n\t\t\t\t\r\n\t\t\t\tlet keySenScore = [keySenOne, keySenOpp]\r\n\t\t\t\t\r\n\t\t\t\tconst keyStore = {\r\n\t\t\t\t\tid:index,\r\n\t\t\t\t\t\r\n\t\t\t\t\ttext:index,\r\n\t\t\t\t\tcount:key.totalCount,\r\n\t\t\t\t\trelevance:keyRelSum,\r\n\t\t\t\t\t\r\n\t\t\t\t\temotion:keyEmSum,\r\n\t\t\t\t\tsentiment:keySenScore,\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tkeyword.push(keyStore)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Relations!\r\n\t\t\t/*let relation = []\r\n\t\t\t\r\n\t\t\tconst relDat = AIdata.relations\r\n\t\t\t//console.log(relDat)\r\n\r\n\t\t\tfor (index in relDat) {\r\n\t\t\t\tconst rel = relDat[index]\r\n\t\t\t\t\r\n\t\t\t\t// Probobly combine these?\r\n\t\t\t\t\r\n\t\t\t\tconst relStore = {\r\n\t\t\t\t\tid: index,\r\n\t\t\t\t\tinit:rel.arguments[0].text,\r\n\t\t\t\t\taction:rel.type,\r\n\t\t\t\t\ttarget:rel.arguments[1].text,\r\n\t\t\t\t\tscore:rel.score,\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\trelation.push(relStore)\r\n\r\n\t\t\t}*/\r\n\t\t\r\n\t\t\tmaxVal = 0\r\n\t\t\tlet senSum = 0\r\n\t\t\r\n\t\t\t// Sentiment!\r\n\t\t\tconst senDataScore = AIdata.sentiment\r\n\t\t\tfor (index in senDataScore) {\r\n\t\t\t\tsenSum += senDataScore[index].score\r\n\t\t\t\tmaxVal += 1\r\n\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\tconst senOne = 0.5*(senSum/maxVal + 1) \r\n\t\t\tconst senOpp = 0.5*(senSum/maxVal - 1) \r\n\t\t\t\r\n\t\t\tlet arrangedDataScore = [senOne, senOpp]\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\t\r\n\t\t\t\tresponsePurity:AIdata.ResponsePurity,\r\n\t\t\t\t\r\n\t\t\t\tdataCategories:getCategoryData(catScores, catLabels),\r\n\t\t\t\tdataConcepts:getConceptsData(conRelevance, conLabels),\r\n\t\t\t\tdataEmotion:getRadarEmotionData(emSum),\r\n\t\t\t\t\r\n\t\t\t\tdataEntities: entity,\r\n\t\t\t\tdataKeywords: keyword,\r\n\t\t\t\t//dataRelations: relation,\r\n\t\t\t\r\n\t\t\t\tdataSentiment:getSentimentData(arrangedDataScore),\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\t\r\n\t\t//} catch{\r\n\t\t\t//console.log(\"Error!\")\r\n\t\t//}\r\n\t}\r\n\t\r\n\tgetCookiesValidDates = () => {\r\n\t\tlet getDates = Store.get(this.props.currentUser+'-'+this.state.currentCompany+'-ValidDates')\r\n\t\t\r\n\t\ttry {\r\n\t\t\tthis.setState({validSummaryDates: getDates['dates']})\r\n\t\t}\r\n\t\tcatch {\r\n\t\t\tconsole.log(\"Not in the cookies\")\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetValidDates = () => {\r\n\t\t\r\n\t\tif (this.state.currentCompany === \"None\") {\r\n\t\t\tconsole.log(\"Select Valid Company!\")\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\tconst config = {\r\n\t\t\theaders: { Authorization: `JWT ${this.props.authToken}` }\r\n\t\t};\r\n\t\t\r\n\t\taxios.get(this.props.APIHost + \"/getCompanyDates?reComp=\"+this.state.currentCompany, config)\r\n\t\t.then( \tres => {\r\n\t\t\t\tlet tempSumArray = []\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(\"Got Valid Dates!\")\r\n\t\t\t\tStore.remove(this.props.currentUser+'-'+this.state.currentCompany+'-ValidDates')\r\n\r\n\t\t\t\tvar item = \"\"\r\n\t\t\t\tfor (item in res.data){\r\n\t\t\t\t\t\r\n\t\t\t\t\t// THESE DATES HAVE THE WRONG TIMEZONE COMING IN, SO THE RESULTING DAY CAN BE WRONG!!!!\r\n\t\t\t\t\t// CHANGE THIS!!!\r\n\t\t\t\t\tconst newDate = new Date(res.data[item].forDate)\r\n\t\t\t\t\tconst checkDate = newDate.getFullYear()+\"-\"+newDate.getMonth()+\"-\"+(newDate.getDate()+1)\r\n\t\t\t\t\r\n\t\t\t\t\ttempSumArray.push( checkDate )\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tStore.set(this.props.currentUser+'-'+this.state.currentCompany+'-ValidDates', {'dates':tempSumArray})\r\n\t\t\t\t//console.log(tempSumArray)\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({validSummaryDates: tempSumArray})\r\n\t\t})\r\n\t\t.catch( err => {\r\n\t\t\tif (err.response.status === 401) {\r\n\t\t\t\tthis.props.forceLogout()\r\n\t\t\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tgetCompanyList = () => {\r\n\t\t\r\n\t\tconst config = {\r\n\t\t\theaders: { Authorization: `JWT ${this.props.authToken}` }\r\n\t\t};\r\n\t\r\n\t\taxios.get(this.props.APIHost +\"/getUsersCompanies\", config)\r\n\t\t.then( \tres => {\r\n\t\t\t\t// Should respond with a 1 length thing\r\n\t\t\t\tif (res.data.length > 0) {\r\n\t\t\t\t\t// Normal behaviour\r\n\t\t\t\t\tconsole.log(\"Got the list of companies\")\r\n\t\t\t\t\t//console.log(res)\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Companies this user is 'owner' of\r\n\t\t\t\t\t//console.log(res.data[0].companyOwner)\r\n\t\t\t\t\t// Companies that this user is Allowed to see\r\n\t\t\t\t\t//console.log(res.data[0].companyAllowsView)\r\n\t\t\t\t\t// Companies this user is sent updates on\r\n\t\t\t\t\t//console.log(res.data[0].companySendsTo)\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Merge these three into a single set for viewing for now?\r\n\t\t\t\t\tlet adding = []\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar index;\r\n\t\t\t\t\tfor (index in res.data[0].companyOwner) {\r\n\t\t\t\t\t\tlet name = res.data[0].companyOwner[index]\r\n\t\t\t\t\t\tif ( !adding.includes(name) ) {\r\n\t\t\t\t\t\t\tadding.push(name)\r\n\t\t\t\t\t\t\t//console.log(name)\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (index in res.data[0].companyAllowsView) {\r\n\t\t\t\t\t\tlet name = res.data[0].companyAllowsView[index]\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif ( !adding.includes(name) ) {\r\n\t\t\t\t\t\t\tadding.push(name)\r\n\t\t\t\t\t\t\t//console.log(name)\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (index in res.data[0].companySendsTo) {\r\n\t\t\t\t\t\tlet name = res.data[0].companySendsTo[index]\r\n\t\t\t\t\t\tif ( !adding.includes(name) ) {\r\n\t\t\t\t\t\t\tadding.push(name)\r\n\t\t\t\t\t\t\t//console.log(name)\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({companyList: adding})\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// This should not trigger\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch( err => {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tthis.props.forceLogout()\r\n\t\t\t\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tpickDate = (selectedDate) => {\r\n\t\t\r\n\t\tif (this.state.currentCompany === \"None\") {\r\n\t\t\tconsole.log(\"Select Valid Company!\")\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(\"requesting date\")\r\n\t\tthis.setState({currentDate: selectedDate})\r\n\t\t\r\n\t\t// Okay, so check to see if we HAVE the journal entry in our storage\r\n\t\t// If we do, show that!\r\n\t\r\n\t\t// Change this so that it is for the currentuser, I got that up here done, but LETS TRY\r\n\t\tlet summaryData = Store.get(this.props.currentUser+'-'+this.state.currentCompany+'-Summary-'+selectedDate)\r\n\t\t\r\n\t\ttry{\r\n\t\t\t\r\n\t\t\t// TO DO, THIS ONE!\r\n\t\t\tconsole.log(summaryData.content)\r\n\t\t\tconsole.log(\"Got the summary entry from storage?!\")\r\n\t\t} catch{\r\n\t\t\t\r\n\t\t\t// So, we need to get the summary data from the server...\r\n\t\t\t// We need the company name we want here, and the user, which we have...\r\n\t\t\t\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: { Authorization: `JWT ${this.props.authToken}` }\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tconst dateReq = selectedDate.toJSON().split(\"T\")[0]\r\n\t\t\t\r\n\t\t\taxios.get(this.props.APIHost +\"/getCompanySummary/?reqDate=\"+dateReq+\"&reComp=\"+this.state.currentCompany, config)\r\n\t\t\t.then( \r\n\t\t\t\tres => {\r\n\t\t\t\t\t// What if it is > 1?\r\n\t\t\t\t\tif (res.data.length > 0) {\r\n\t\t\t\t\t\tconsole.log(\"obtained a company summary\")\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Check for matching stuff on this end?\r\n\t\t\t\t\t\t//console.log(res.data[0].summaryResult)\r\n\t\t\t\t\t\t// Save in the cookies for non-login access...\r\n\t\t\t\t\t\tStore.set('testSummaryData', res.data[0].summaryResult)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.loadTestData();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState( {\r\n\t\t\t\t\t\t\tmessages: \"Showing \" + this.state.currentCompany + \": Summary Entry for: \" + this.state.currentDate.toString(),\r\n\t\t\t\t\t\t\tcompanyDisp: \">:(\",\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tconsole.log(\"No entry for that day\")\r\n\t\t\t\t\t\tthis.setState( {\r\n\t\t\t\t\t\t\tmessages: \"No entry for that day\",\r\n\t\t\t\t\t\t\tcompanyDisp: \":/\",\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// LEts not store it in the cookies for now...\r\n\t\t\t})\r\n\t\t\t.catch( err => {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tthis.props.forceLogout()\r\n\t\t\t\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\r\n\t\t}\r\n\t};\r\n\t\r\n\tsetCurrentCompany = (event) => {\r\n\t\r\n\t\tthis.setState({dropMessage: event.target.value, currentCompany: event.target.value})\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t\r\n\t\tconst tileClassName = ({ date, view }) => {\r\n\t\t\r\n\t\t\t// Add class to tiles in month view only\r\n\t\t\tif (view === 'month') {\r\n\t\t\t\t\r\n\t\t\t\tconst checkDate = date.getFullYear()+\"-\"+date.getMonth()+\"-\"+date.getDate()\r\n\t\t\t\t\r\n\t\t\t\t//console.log(checkDate)\r\n\t\t\t\t//console.log(this.state.validJournalDates)\r\n\r\n\t\t\t\t// Check if a date React-Calendar wants to check is on the list of dates to add class to\r\n\t\t\t\tconst hasSummary = this.state.validSummaryDates.find( element => element === checkDate)\r\n\t\t\t\t\r\n\t\t\t\tif (hasSummary) {\r\n\t\t\t\t\treturn 'btn btn-success'\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//return 'btn btn-outline-dark'\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar dropDownInternal = []\r\n\t\t\r\n\t\tlet index;\r\n\t\tfor (index in this.state.companyList) {\r\n\t\t\tlet comp = this.state.companyList[index]\r\n\t\t\tdropDownInternal.push( \r\n\t\t\t\t<button className=\"dropdown-item\" key={index} onClick={this.setCurrentCompany} value={ comp }>\r\n\t\t\t\t\t{comp}\r\n\t\t\t\t</button> \r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\t// Entities\r\n\t\tvar entitiesDisplay = [];\r\n\t\t\r\n\t\tif (this.state.dataEntities.length > 0) { \r\n\t\t\tfor (index in this.state.dataEntities) {\r\n\t\t\t\tconst ent = this.state.dataEntities[index]\r\n\t\t\t\t\r\n\t\t\t\tconst emotionData = getRadarEmotionData(ent.emotion)\r\n\t\t\t\tconst sentimentData = getSentimentData(ent.sentiment)\r\n\t\t\t\t\r\n\t\t\t\tentitiesDisplay.push(\r\n\t\t\t\t\t<tr key={ent.id}>\r\n\t\t\t\t\t\t<th scope=\"row\">{ent.text}</th>\r\n\t\t\t\t\t\t<td>{ent.type}</td>\r\n\t\t\t\t\t\t<td>{ent.count}</td>\r\n\t\t\t\t\t\t<td>{ent.confidence}</td>\r\n\t\t\t\t\t\t<td>{ent.relevance}</td>\r\n\t\t\t\t\t\t<td> <Radar ref={this.chartReference} data={emotionData} options={this.state.optionsEmotions} /> </td>\r\n\t\t\t\t\t\t<td> <Doughnut ref={this.chartReference} data={sentimentData} options={this.state.optionsSentiment} /> </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tentitiesDisplay.push(\r\n\t\t\t\t<tr key=\"0\">\r\n\t\t\t\t\t<th scope=\"row\">None Found!</th>\r\n\t\t\t\t</tr>\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\t// Keywords\r\n\t\tvar keywordsDisplay = [];\r\n\t\t\r\n\t\tif (this.state.dataKeywords.length > 0) { \r\n\t\t\tfor (index in this.state.dataKeywords) {\r\n\t\t\t\tconst key = this.state.dataKeywords[index]\r\n\t\t\t\t\r\n\t\t\t\tconst emotionData = getRadarEmotionData(key.emotion)\r\n\t\t\t\tconst sentimentData = getSentimentData(key.sentiment)\r\n\t\t\t\t\r\n\t\t\t\tkeywordsDisplay.push(\r\n\t\t\t\t\t<tr key={key.id}>\r\n\t\t\t\t\t\t<th scope=\"row\">{key.text}</th>\r\n\t\t\t\t\t\t<td>{key.count}</td>\r\n\t\t\t\t\t\t<td>{key.relevance}</td>\r\n\t\t\t\t\t\t<td><Radar ref={this.chartReference} data={emotionData} options={this.state.optionsEmotions} /></td>\r\n\t\t\t\t\t\t<td><Doughnut ref={this.chartReference} data={sentimentData} options={this.state.optionsSentiment} /></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tkeywordsDisplay.push(\r\n\t\t\t\t<tr key=\"0\">\r\n\t\t\t\t\t<th scope=\"row\">None Found!</th>\r\n\t\t\t\t</tr>\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\t// R E L A T I O N S\r\n\t\tvar relationsDisplay = [];\r\n\t\t\r\n\t\tif (this.state.dataRelations.length > 0) { \r\n\t\t\r\n\t\t\tfor (index in this.state.dataRelations) {\r\n\t\t\t\tconst rel = this.state.dataRelations[index]\r\n\t\t\t\trelationsDisplay.push(\r\n\t\t\t\t\t<tr key={rel.id}>\r\n\t\t\t\t\t\t<th scope=\"row\">{rel.init}</th>\r\n\t\t\t\t\t\t<td>{rel.action}</td>\r\n\t\t\t\t\t\t<td>{rel.target}</td>\r\n\t\t\t\t\t\t<td>{rel.score}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\trelationsDisplay.push(\r\n\t\t\t\t<tr key=\"0\">\r\n\t\t\t\t\t<th scope=\"row\">Unimplemented!</th>\r\n\t\t\t\t\t<th scope=\"row\">Unimplemented!</th>\r\n\t\t\t\t\t<th scope=\"row\">Unimplemented!</th>\r\n\t\t\t\t\t<th scope=\"row\">Unimplemented!</th>\r\n\t\t\t\t</tr>\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"companyView\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-sm-3 m-2\">\t\r\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.backButton}>\r\n\t\t\t\t\t\t\t\tGo Back\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-sm m-2\">\t\r\n\t\t\t\t\t\t\tPage Title Test!\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-lg-3 border m-2\">\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Calendar \r\n\t\t\t\t\t\t\t\t\tonChange={this.pickDate}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.currentDate}\r\n\t\t\t\t\t\t\t\t\ttileClassName={tileClassName}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tminDetail={'year'}\r\n\t\t\t\t\t\t\t\t\tmaxDetail={'month'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col border m-2\">\t\t\t\t\t\r\n\t\t\t\t\t\t\t<p>{this.state.messages}</p>\r\n\t\t\t\t\t\t\t<p>{this.state.companyDisp}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t  <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t  {this.state.dropMessage}\r\n\t\t\t\t\t\t\t  </button>\r\n\t\t\t\t\t\t\t  <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n\t\t\t\t\t\t\t\t{dropDownInternal}\r\n\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<button onClick={this.loadTestData}> Get Summary Test </button>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<button onClick={this.getCompanyList}> Get Comp List </button>\r\n\t\t\t\t\t\t\t<button onClick={this.getValidDates}> Get Valid Dates (server)</button>\r\n\t\t\t\t\t\t\t<button onClick={this.getCookiesValidDates}> Get Valid Dates (cookies)</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className=\"progressBar\">\r\n\t\t\t\t\t\t\t\t<h3>Summary Data for date: {this.state.currentDate.toString()}</h3>\r\n\r\n\t\t\t\t\t\t\t\t<ProgressBar now={ this.state.responsePurity } label={`${this.state.responsePurity}% Response Rate`} />\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col border mx-2\">\r\n\t\t\t\t\t\t\t<Radar ref={this.chartReference} data={this.state.dataEmotion} options={this.state.optionsEmotions} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col border mx-2\">\r\n\t\t\t\t\t\t\t<Doughnut ref={this.chartReference} data={this.state.dataSentiment} options={this.state.optionsSentiment} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row  my-2\">\r\n\t\t\t\t\t\t<div className=\"col border mx-2\">\r\n\t\t\t\t\t\t\t<Bar ref={this.chartReference} data={this.state.dataCategories} options={this.state.optionsCategories} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col border mx-2\">\r\n\t\t\t\t\t\t\t<Bar ref={this.chartReference} data={this.state.dataConcepts} options={this.state.optionsConcepts} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<h3>Entities!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Type</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Confidence Score</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Relevance Score</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Emotion</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Sentiment</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{entitiesDisplay}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<h3>Keywords!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Word</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Relevance Score</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Emotion</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Sentiment</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{keywordsDisplay}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<h3>Relations!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Thing</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Action</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Target</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Score</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{relationsDisplay}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row  my-2\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tPADDING\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withRouter(companyView);","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst sorter = [\"Public\", \"Private\"]\r\n\r\nclass companySettings extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n\t\t\r\n\t\tconst today = new Date()\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tcurrentDate: today,\r\n\t\t\t\r\n\t\t\tmessages: \"Hello, there is nothing yet here...\",\r\n\t\t\t\r\n\t\t\tdropMessage: 'Select Company=>',\r\n\t\t\tcurrentCompany: \"None\",\r\n\t\t\r\n\t\t\tcompanyList: [],\r\n\t\t\t\r\n\t\t\tdataCompanyName: 'None',\r\n\t\t\tdataCompanyPriv: 'None',\r\n\t\t\t\r\n\t\t\tdataCompanySendTo: [\"user1\", \"user2\", \"user3\"],\r\n\t\t\tdataCompanyViewing: [\"user7\", \"user9\"],\r\n\t\t\tdataCompanyGoverned: [\"user1\", \"user2\", \"user3\", \"user4\", \"user5\", \"user6\"],\r\n\t\t\t\r\n\t\t\tdataCompanySendToAdded: [\"add@add.com\", \"add2@add2.com\"],\r\n\t\t\tdataCompanyViewingAdded: [\"add@add.com\", \"add2@add2.com\"],\r\n\t\t\tdataCompanyGovernedAdded: [\"add@add.com\", \"add2@add2.com\"],\r\n\t\t\t\r\n\t\t\tdataCompanySendToDeleted: [],\r\n\t\t\tdataCompanyViewingDeleted: [],\r\n\t\t\tdataCompanyGovernedDeleted: [],\r\n\t\t\t\r\n\t\t\tsearchSend: \"\",\r\n\t\t\tsearchView: \"\",\r\n\t\t\tsearchGov: \"\",\r\n\t\t\taddingEmail: \"\",\r\n\t\t\t\r\n\t\t\tclickedList: \"\",\r\n\t\t\tclickedIndex: -1,\r\n        };\r\n\t\t\r\n\t\t\r\n\t};\r\n\r\n\tbackButton = () => {\r\n\t\tthis.props.history.goBack()\r\n\t}\r\n\t\r\n\tpostNewCompanyData = () => {\r\n\t\t\r\n\t\t// Verify we have a proper company before we do anyting...\r\n\t\tif (this.state.currentCompany === \"None\") {\r\n\t\t\tconsole.log(\"No company selected\")\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\tconst config = {\r\n\t\t\theaders: { Authorization: `JWT ${this.props.authToken}` }\r\n\t\t};\r\n\t\t\r\n\t\tconst data = {\r\n\t\t\t// These will be checked by the permissions on the other end...\r\n\t\t\t//requestUser: \"\",\r\n\t\t\tcompanyName: this.state.currentCompany,\r\n\t\t\tcompanyReName: this.state.dataCompanyName,\r\n\t\t\t\r\n\t\t\tsummaryViewAccess: this.state.dataCompanyPriv,\r\n\t\t\t\r\n\t\t\tresultsSendTargets: this.state.dataCompanySendTo,\r\n\t\t\tprivateViewingPerms: this.state.dataCompanyViewing,\r\n\t\t\tgovernedUsers: this.state.dataCompanyGoverned,\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t// This will overwrite stuff, hand ready for the deletions\r\n\t\t// But HOW do I handle the addings?\r\n\t\taxios.post(this.props.APIHost +\"/postCompanyData/\", data, config )\r\n\t\t.then( res => { \r\n\t\t\r\n\t\t\t//console.log(res)\r\n\t\t\tconsole.log(\"Success\")\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tdataCompanySendToDeleted: [],\r\n\t\t\t\tdataCompanyViewingDeleted: [],\r\n\t\t\t\tdataCompanyGovernedDeleted: [],\r\n\t\t\t})\r\n\t\t\t\r\n\t\t})\r\n\t\t.catch( err => {\r\n\t\t\t// Change this depending on the error...\r\n\t\t\tif (err.response.status === 401) {\r\n\t\t\t\tthis.props.forceLogout()\r\n\t\t\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetCompanyList = () => {\r\n\t\t\r\n\t\tconst config = {\r\n\t\t\theaders: { Authorization: `JWT ${this.props.authToken}` }\r\n\t\t};\r\n\t\t\r\n\t\t// This is bad, as it gets ALL companies...\r\n\t\t// But we SHOULD save it with the permissions...\r\n\t\t// So I need to make this better...\r\n\t\taxios.get(this.props.APIHost +\"/getUsersCompanies\", config)\r\n\t\t.then( \tres => {\r\n\t\t\t\t// Should respond with a 1 length thing\r\n\t\t\t\tif (res.data.length > 0) {\r\n\t\t\t\t\t// Normal behaviour\r\n\t\t\t\t\tconsole.log(\"Got the list of companies\")\r\n\t\t\t\t\t//console.log(res)\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Companies this user is 'owner' of\r\n\t\t\t\t\t//console.log(res.data[0].companyOwner)\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Merge these three into a single set for viewing for now?\r\n\t\t\t\t\tlet adding = []\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar index;\r\n\t\t\t\t\tfor (index in res.data[0].companyOwner) {\r\n\t\t\t\t\t\tlet name = res.data[0].companyOwner[index]\r\n\t\t\t\t\t\tif ( !adding.includes(name) ) {\r\n\t\t\t\t\t\t\tadding.push(name)\r\n\t\t\t\t\t\t\t//console.log(name)\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({companyList: adding})\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// This should not trigger\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch( err => {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tthis.props.forceLogout()\r\n\t\t\t\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tgetCompanyData = (targetCompany) => {\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: { Authorization: `JWT ${this.props.authToken}` }\r\n\t\t};\r\n\t\t\r\n\t\taxios.get(this.props.APIHost +\"/getCompanyData?reqComp=\"+targetCompany+\"\", config)\r\n\t\t.then( \tres => {\r\n\t\t\t\t// Should respond with a 1 length thing\r\n\t\t\t\tif (res.data.length > 0) {\r\n\t\t\t\t\t// Normal behaviour\r\n\t\t\t\t\tconsole.log(\"Got the company data!\")\r\n\t\t\t\t\t//console.log(res)\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tdataCompanyName: res.data[0].companyName,\r\n\t\t\t\t\t\tdataCompanyPriv: sorter[res.data[0].summaryViewAccess],\r\n\t\t\t\t\t\tdataCompanySendTo: res.data[0].resultsSendTargets,\r\n\t\t\t\t\t\tdataCompanyViewing: res.data[0].privateViewingPerms,\r\n\t\t\t\t\t\tdataCompanyGoverned: res.data[0].governedUsers,\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// This should not trigger\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch( err => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tthis.props.forceLogout()\r\n\t\t\t\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tsendChange = (event) => {\r\n\t\tthis.setState( {searchSend: event.target.value} )\r\n\t}\r\n\tviewChange = (event) => {\r\n\t\tthis.setState( {searchView: event.target.value} )\r\n\t}\r\n\tgovChange = (event) => {\r\n\t\tthis.setState( {searchGov: event.target.value} )\r\n\t}\r\n\t\r\n\temailFieldChange = (event) => {\r\n\t\tthis.setState( {addingEmail: event.target.value} )\r\n\t}\r\n\t\r\n\ttriggerCompanySwap = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tdropMessage: event.target.value, \r\n\t\t\tcurrentCompany: event.target.value\r\n\t\t})\r\n\t\t\r\n\t\tthis.getCompanyData(event.target.value)\r\n\t\t\r\n\t}\r\n\t\r\n\ttriggerModal = (event) => {\r\n\t\t\r\n\t\t//console.log(event.target.parentElement.id)\r\n\t\t//console.log(event.target.parentElement.parentElement.id)\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tclickedList: event.target.parentElement.parentElement.id,\r\n\t\t\tclickedIndex: event.target.parentElement.id,\r\n\t\t})\r\n\t}\r\n\t\r\n\ttriggerStopAdd = (event) => {\r\n\t\t\r\n\t\tlet subset = []\r\n\t\tif (event.target.parentElement.parentElement.id === \"sendUsers\") {\r\n\t\t\tsubset = this.state.dataCompanySendToAdded\r\n\t\t\tsubset.splice( event.target.parentElement.id, 1 )\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tdataCompanySendToAdded: subset\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if (event.target.parentElement.parentElement.id === \"viewUsers\") {\r\n\t\t\tsubset = this.state.dataCompanyViewingAdded\r\n\t\t\tsubset.splice( event.target.parentElement.id, 1 )\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tdataCompanyViewingAdded: subset\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if (event.target.parentElement.parentElement.id === \"govUsers\") {\r\n\t\t\tsubset = this.state.dataCompanyGovernedAdded\r\n\t\t\tsubset.splice( event.target.parentElement.id, 1 )\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tdataCompanyGovernedAdded: subset\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\ttriggerReAdd = (event) => {\r\n\t\t\r\n\t\tlet subset = []\r\n\t\tif (event.target.parentElement.parentElement.id === \"sendUsers\") {\r\n\t\t\tsubset = this.state.dataCompanySendToDeleted\r\n\t\t\tlet reAdd = this.state.dataCompanySendTo\r\n\t\t\treAdd.push( subset.splice( event.target.parentElement.id, 1 )[0] )\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tdataCompanySendTo: reAdd,\r\n\t\t\t\tdataCompanySendToDeleted: subset\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if (event.target.parentElement.parentElement.id === \"viewUsers\") {\r\n\t\t\tsubset = this.state.dataCompanyViewingDeleted\r\n\t\t\tlet reAdd = this.state.dataCompanyViewing\r\n\t\t\treAdd.push( subset.splice( event.target.parentElement.id, 1 )[0] )\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tdataCompanyViewing: reAdd,\r\n\t\t\t\tdataCompanyViewingDeleted: subset\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if (event.target.parentElement.parentElement.id === \"govUsers\") {\r\n\t\t\tsubset = this.state.dataCompanyGovernedDeleted\r\n\t\t\tlet reAdd = this.state.dataCompanyGoverned\r\n\t\t\treAdd.push( subset.splice( event.target.parentElement.id, 1 )[0] )\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tdataCompanyGoverned: reAdd,\r\n\t\t\t\tdataCompanyGovernedDeleted: subset\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\tmodelAddEmail = (event) => {\r\n\t\t//console.log( this.state.addingEmail )\r\n\t\t\r\n\t\t// Reusing a function, so this sits in a slightly wierdly named variable\r\n\t\t//console.log( this.state.clickedIndex )\r\n\t\t\r\n\t\tlet newArray = []\r\n\t\tif (this.state.clickedIndex === \"sendUsers\") {\r\n\t\t\tnewArray = this.state.dataCompanySendToAdded\r\n\t\t\tnewArray.push( this.state.addingEmail )\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tdataCompanySendToAdded: newArray,\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if (this.state.clickedIndex === \"viewUsers\") {\r\n\t\t\tnewArray = this.state.dataCompanyViewingAdded\r\n\t\t\tnewArray.push( this.state.addingEmail )\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tdataCompanyViewingAdded: newArray,\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if (this.state.clickedIndex === \"govUsers\") {\r\n\t\t\tnewArray = this.state.dataCompanyGovernedAdded\r\n\t\t\tnewArray.push( this.state.addingEmail )\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tdataCompanyGovernedAdded: newArray,\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\taddingEmail: \"\",\r\n\t\t})\r\n\t}\r\n\t\r\n\tmodelAcceptDelete = (event) => {\r\n\t\t\r\n\t\tlet subset = []\r\n\t\tif (this.state.clickedList === \"sendUsers\") {\r\n\t\t\tsubset = this.state.dataCompanySendTo\r\n\t\t\t\r\n\t\t\tlet deleteQueue = this.state.dataCompanySendToDeleted\r\n\t\t\tdeleteQueue.push( subset.splice( this.state.clickedIndex, 1 )[0] )\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tdataCompanySendTo: subset,\r\n\t\t\t\tdataCompanySendToDeleted: deleteQueue\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if (this.state.clickedList === \"viewUsers\") {\r\n\t\t\tsubset = this.state.dataCompanyViewing\r\n\t\t\t\r\n\t\t\tlet deleteQueue = this.state.dataCompanyViewingDeleted\r\n\t\t\tdeleteQueue.push( subset.splice( this.state.clickedIndex, 1 )[0] )\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tdataCompanyViewing: subset,\r\n\t\t\t\tdataCompanyViewingDeleted: deleteQueue\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if (this.state.clickedList === \"govUsers\") {\r\n\t\t\tsubset = this.state.dataCompanyGoverned\r\n\t\t\t\r\n\t\t\tlet deleteQueue = this.state.dataCompanyGovernedDeleted\r\n\t\t\tdeleteQueue.push( subset.splice( this.state.clickedIndex, 1 )[0] )\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tdataCompanyGoverned: subset,\r\n\t\t\t\tdataCompanyGovernedDeleted: deleteQueue\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\t\r\n\t\tvar dropDownInternal = []\r\n\t\t\r\n\t\tlet index;\r\n\t\tfor (index in this.state.companyList) {\r\n\t\t\tlet comp = this.state.companyList[index]\r\n\t\t\tdropDownInternal.push( \r\n\t\t\t\t<button className=\"dropdown-item\" key={index} onClick={this.triggerCompanySwap} value={ comp }>\r\n\t\t\t\t\t{comp}\r\n\t\t\t\t</button> \r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\t// Send To Set\r\n\t\tlet companySend = []\r\n\t\tfor (index in this.state.dataCompanySendTo) {\r\n\t\t\tlet userSet = this.state.dataCompanySendTo[index]\r\n\t\t\t\r\n\t\t\tif (userSet !== undefined) {\r\n\t\t\t\t\r\n\t\t\t\tif ( userSet.indexOf(this.state.searchSend) > -1) {\r\n\t\t\t\t\r\n\t\t\t\t\tcompanySend.push(\r\n\t\t\t\t\t\t<li key={index} id={index} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t{userSet}\r\n\t\t\t\t\t\t\t<button className=\"btn btn-sm btn-outline-danger\" data-toggle=\"modal\" onClick={this.triggerModal} data-target=\"#deleteConfirm\">x</button>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tlet companySendAdd = []\r\n\t\tfor (index in this.state.dataCompanySendToAdded) {\r\n\t\t\tlet userSet = this.state.dataCompanySendToAdded[index]\r\n\t\t\t\r\n\t\t\tcompanySendAdd.push(\r\n\t\t\t\t<li key={index} id={index} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t{userSet}\r\n\t\t\t\t\t<button className=\"btn btn-sm btn-outline-danger\" onClick={this.triggerStopAdd}>x</button>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\tlet companySendDelete = []\r\n\t\tfor (index in this.state.dataCompanySendToDeleted) {\r\n\t\t\tlet userSet = this.state.dataCompanySendToDeleted[index]\r\n\t\t\t\r\n\t\t\tcompanySendDelete.push(\r\n\t\t\t\t<li key={index} id={index} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t{userSet}\r\n\t\t\t\t\t<button className=\"btn btn-sm btn-outline-success\" onClick={this.triggerReAdd}>+</button>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\t// Viewing Permission Sets\r\n\t\tlet companyViewing = []\r\n\t\tfor (index in this.state.dataCompanyViewing) {\r\n\t\t\tlet userSet = this.state.dataCompanyViewing[index]\r\n\t\t\t\r\n\t\t\tif ( userSet.indexOf(this.state.searchView) > -1) {\r\n\t\t\t\r\n\t\t\t\tcompanyViewing.push(\r\n\t\t\t\t\t<li key={index} id={index} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t{userSet}\r\n\t\t\t\t\t\t<button className=\"btn btn-sm btn-outline-danger\" data-toggle=\"modal\" onClick={this.triggerModal} data-target=\"#deleteConfirm\">x</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet companyViewingAdd = []\r\n\t\tfor (index in this.state.dataCompanyViewingAdded) {\r\n\t\t\tlet userSet = this.state.dataCompanyViewingAdded[index]\r\n\t\t\t\r\n\t\t\tcompanyViewingAdd.push(\r\n\t\t\t\t<li key={index} id={index} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t{userSet}\r\n\t\t\t\t\t<button className=\"btn btn-sm btn-outline-danger\" onClick={this.triggerStopAdd}>x</button>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\tlet companyViewingDelete = []\r\n\t\tfor (index in this.state.dataCompanyViewingDeleted) {\r\n\t\t\tlet userSet = this.state.dataCompanyViewingDeleted[index]\r\n\t\t\t\r\n\t\t\tcompanyViewingDelete.push(\r\n\t\t\t\t<li key={index} id={index} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t{userSet}\r\n\t\t\t\t\t<button className=\"btn btn-sm btn-outline-success\" onClick={this.triggerReAdd}>+</button>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\t// Goverened Users List\r\n\t\tlet governedList = []\r\n\t\tfor (index in this.state.dataCompanyGoverned) {\r\n\t\t\tlet userSet = this.state.dataCompanyGoverned[index]\r\n\t\t\t\r\n\t\t\tif ( userSet.indexOf(this.state.searchGov) > -1) {\r\n\t\t\t\r\n\t\t\t\tgovernedList.push(\r\n\t\t\t\t\t<li key={index} id={index} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t{userSet}\r\n\t\t\t\t\t\t<button className=\"btn btn-sm btn-outline-danger\" data-toggle=\"modal\" onClick={this.triggerModal} data-target=\"#deleteConfirm\">x</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet companyGovernedAdd = []\r\n\t\tfor (index in this.state.dataCompanyGovernedAdded) {\r\n\t\t\tlet userSet = this.state.dataCompanyGovernedAdded[index]\r\n\t\t\t\r\n\t\t\tcompanyGovernedAdd.push(\r\n\t\t\t\t<li key={index} id={index} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t{userSet}\r\n\t\t\t\t\t<button className=\"btn btn-sm btn-outline-danger\" onClick={this.triggerStopAdd}>x</button>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\tlet companyGovernedDelete = []\r\n\t\tfor (index in this.state.dataCompanyGovernedDeleted) {\r\n\t\t\tlet userSet = this.state.dataCompanyGovernedDeleted[index]\r\n\t\t\t\r\n\t\t\tcompanyGovernedDelete.push(\r\n\t\t\t\t<li key={index} id={index} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t{userSet}\r\n\t\t\t\t\t<button className=\"btn btn-sm btn-outline-success\" onClick={this.triggerReAdd}>+</button>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\t// There is probobly a better way to do this... But the model stuff may work if it is filled out this way\r\n\t\tlet selectedUser = \"None\"\r\n\t\tif (this.state.clickedList === \"sendUsers\") {\r\n\t\t\tselectedUser = this.state.dataCompanySendTo[this.state.clickedIndex]\r\n\t\t}\r\n\t\telse if (this.state.clickedList === \"viewUsers\") {\r\n\t\t\tselectedUser = this.state.dataCompanyViewing[this.state.clickedIndex]\r\n\t\t}\r\n\t\telse if (this.state.clickedList === \"govUsers\") {\r\n\t\t\tselectedUser = this.state.dataCompanyGoverned[this.state.clickedIndex]\r\n\t\t}\r\n\t\t\r\n\t\t// Technically we can just use currentCompany but, hey! To error check I am going to use the response...\r\n\t\treturn (\r\n\t\t\t<div className=\"companySett\">\r\n\t\t\t\t<div className=\"container\">\r\n\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-sm-3 m-2\">\t\r\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.backButton}>\r\n\t\t\t\t\t\t\t\tGo Back\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-sm m-2\">\t\r\n\t\t\t\t\t\t\tPage Title Test!\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t  <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t{this.state.dropMessage}\r\n\t\t\t\t\t\t\t  </button>\r\n\t\t\t\t\t\t\t  <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n\t\t\t\t\t\t\t\t{dropDownInternal}\r\n\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<button onClick={this.getCompanyList}> Populate Company List </button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<button> onClick={this.postNewCompanyData}>Save Changes</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tEdit Company name\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t\t{this.state.dataCompanyName}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tPrivate/Publix\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t\t{this.state.dataCompanyPriv}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tUsers Notified:\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<input className=\"form-control\" id=\"\" type=\"text\" onChange={this.sendChange} placeholder=\"Search...\"/>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<ul className=\"card-text list-group\" id=\"sendUsers\">\r\n\t\t\t\t\t\t\t\t\t\t{companySend}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"list-group-item list-group-item-action active\" data-toggle=\"modal\" onClick={this.triggerModal} data-target=\"#addNewUsers\">\r\n\t\t\t\t\t\t\t\t\t\t\tAdd user +\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<li key={\"rem\"} id={\"remLabel\"} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tUsers To Remove:\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t{companySendDelete}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<li key={\"add\"} id={\"addLabel\"} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tEmails To Add:\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t{companySendAdd}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tViewing Privilages:\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<input className=\"form-control\" id=\"\" type=\"text\" onChange={this.viewChange} placeholder=\"Search...\"/>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<ul className=\"card-text list-group\"  id=\"viewUsers\">\r\n\t\t\t\t\t\t\t\t\t\t{companyViewing}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"list-group-item list-group-item-action active\" data-toggle=\"modal\" onClick={this.triggerModal} data-target=\"#addNewUsers\">\r\n\t\t\t\t\t\t\t\t\t\t\tAdd user +\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<li key={\"rem\"} id={\"remLabel\"} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tUsers To Remove:\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t{companyViewingDelete}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<li key={\"add\"} id={\"addLabel\"} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tEmails To Add:\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t{companyViewingAdd}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tTarget Users:\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<input className=\"form-control\" id=\"\" type=\"text\" onChange={this.govChange} placeholder=\"Search...\"/>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<ul className=\"card-text list-group\"  id=\"govUsers\">\r\n\t\t\t\t\t\t\t\t\t\t{governedList}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"list-group-item list-group-item-action active\" data-toggle=\"modal\" onClick={this.triggerModal} data-target=\"#addNewUsers\">\r\n\t\t\t\t\t\t\t\t\t\t\tAdd user +\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<li key={\"rem\"} id={\"remLabel\"} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tUsers To Remove:\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t{companyGovernedDelete}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<li key={\"add\"} id={\"addLabel\"} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tEmails To Add:\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t{companyGovernedAdd}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"modal fade\" id=\"deleteConfirm\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"deleteConfirmation\" aria-hidden=\"true\">\r\n\t\t\t\t  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t  <div className=\"modal-header\">\r\n\t\t\t\t\t\t<h5 className=\"modal-title\" id=\"deleteTitleConfirm\">Delete Confirmation</h5>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t\t\t\t  <span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-body\">\r\n\t\t\t\t\t\tAre you SURE you want to delete user: {selectedUser}?\r\n\t\t\t\t\t\tThey will be notified about this change.\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-footer\">\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={this.modelAcceptDelete}>Yes</button>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">No</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"modal fade\" id=\"addNewUsers\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"addNewUsersModal\" aria-hidden=\"true\">\r\n\t\t\t\t  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t  <div className=\"modal-header\">\r\n\t\t\t\t\t\t<h5 className=\"modal-title\" id=\"deleteTitleConfirm\">Add New User</h5>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t\t\t\t  <span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-body\">\r\n\t\t\t\t\t\tEnter the email of the target user\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className='form-group'>\r\n\t\t\t\t\t\t<label>Email Address</label>\r\n\t\t\t\t\t\t<input type='email' className='form-control' value={this.state.addingEmail} onChange={this.emailFieldChange} placeholder='Enter email' />\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-footer\">\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={this.modelAddEmail}>Add</button>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withRouter(companySettings);","import React from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap';\r\n\r\nimport Calendar from 'react-calendar'\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nimport Store from \"store\"\r\n\r\nimport { ProgressBar } from 'react-bootstrap';\r\n\r\nimport { Doughnut, Radar, Bar } from 'react-chartjs-2';\r\nimport { getDoughData, testMaxMin, testBarMulti, stackedBarData3Test, stackedBarData2Test, stackedBarData, sentimentBarData } from '../utils';\r\nimport { getDoughOptions, getRadarEmotionOptions, testBarMultiOptions, stackedBarOptions, sentimentBarOptions } from '../utils';\r\nimport {makeCompanyTestData} from \"../utils\";\r\n\r\nconst promptNames = {\r\n\tp1:\"Full Prompt 1 Name Here\",\r\n\tp2:\"Full Prompt 2 Name Here\",\r\n\tp3:\"Full Prompt 3 Name Here\",\r\n\tp4:\"Full Prompt 4 Name Here\",\r\n}\r\n\r\nconst promptList = [\r\n    { name: 'Prompt 1 Type?', value: 'p1' },\r\n    { name: 'Prompt 2 Type?', value: 'p2' },\r\n    { name: 'Prompt 3 Type?', value: 'p3' },\r\n\t{ name: 'Prompt 4 Type?', value: 'p4' },\r\n];\r\n\r\nconst AIAspect = [\r\n    { name: 'Emotion', value: 'emotion' },\r\n    { name: 'Sentiment', value: 'sentiment' },\r\n    { name: 'Entities', value: 'entities' },\r\n\t{ name: 'Keywords', value: 'keywords' },\r\n\t{ name: 'Relations', value: 'relations' },\r\n];\r\n\r\nconst daySet = [\r\n    { name: 'Monday', value: 'mon' },\r\n    { name: 'Tuesday', value: 'tue' },\r\n    { name: 'Wednesday', value: 'wed' },\r\n\t{ name: 'Thursday', value: 'thu' },\r\n\t{ name: 'Friday', value: 'fri' },\r\n\t{ name: 'Saturday', value: 'sat' },\r\n\t{ name: 'Sunday', value: 'sun' },\r\n\t{ name: 'All', value: 'allDay' },\r\n];\r\n\r\n// This is very lean...\r\nconst parseEmotion = (emotionData) => {\r\n\t\r\n\tlet derp = [emotionData.joy, emotionData.anger, emotionData.sadness, emotionData.disgust, emotionData.fear]\r\n\treturn derp;\r\n}\r\n\r\nclass testClass extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t\t\r\n\t\t\tselectedPrompt:\"p1\",\r\n\t\t\tselectedAspect:\"emotion\",\r\n\t\t\tseletedDay:\"mon\",\r\n\t\t\t\r\n\t\t\t// hmmmm\r\n\t\t\tdataSet: makeCompanyTestData(),\r\n\t\t\t\r\n\t\t\tmessages:\"Display based on the previous stucture, but with much more buttons and graph examples!\",\r\n        };\r\n\t}\r\n\t\r\n\tbackButton = () => {\r\n\t\tthis.props.history.goBack()\r\n\t}\r\n\t\r\n\tselectPrompt = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedPrompt:event.currentTarget.value\r\n\t\t});\r\n\t\t\r\n\t\tthis.changeRequest()\r\n\t}\r\n\tselectAI = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedAspect:event.currentTarget.value\r\n\t\t});\r\n\t\t\r\n\t\tthis.changeRequest()\r\n\t}\r\n\tselectDay = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tseletedDay:event.currentTarget.value\r\n\t\t});\r\n\t\t\r\n\t\tthis.changeRequest()\r\n\t}\r\n\t\r\n\tchangeRequest = () => {\r\n\t\t//console.log( Store.get(\"testData\") )\r\n\t\t\r\n\t\t//let overwriteData = this.state.dataSet\r\n\t\t//console.log(overwriteData)\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\t//dataSet:overwriteData\r\n\t\t})\r\n\t}\r\n\t\r\n\t// Rendering this with Bootstrap React.... To see if there is anything really interesting I can do with it\r\n\t// So far it doesnt look all that different \r\n\trender() {\r\n\t\t\r\n\t\tlet tableDisplay = []\r\n\t\tlet index;\r\n\t\t\r\n\t\t// Read the data from our state machine,\r\n\t\tconst currentPrompt = this.state.selectedPrompt\r\n\t\tconst currentDay = this.state.seletedDay\r\n\t\tconst currentAspect = this.state.selectedAspect\r\n\t\t\r\n\t\t// Switch state this bugger...\r\n\t\tlet dataSet = this.state.dataSet[currentPrompt][currentDay][currentAspect]\r\n\t\tlet purity = this.state.dataSet[currentPrompt].responsePurity\r\n\t\t\r\n\t\t// Set up the displays...\r\n\t\tlet displayStats = []\r\n\t\tdisplayStats.push(\r\n\t\t\t<div className=\"row m-2\" key=\"1\">\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<div className=\"progressBar\">\r\n\t\t\t\t\t\t<ProgressBar now={ purity } label={`${purity}% Response Rate`} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t\r\n\t\tif (!(dataSet === undefined)) {\r\n\t\t\t\r\n\t\t\tswitch(currentAspect) {\r\n\t\t\t\tcase \"emotion\":\r\n\t\t\t\t\tlet emoMax = parseEmotion( dataSet.max )\r\n\t\t\t\t\tlet emoAve = parseEmotion( dataSet.min )\r\n\t\t\t\t\tlet emoMin = parseEmotion( dataSet.ave )\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst dataRadarTest = testMaxMin( emoMax, emoAve, emoMin )\r\n\t\t\t\t\tconst radarOptionsTest = getRadarEmotionOptions()\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet emoThresh = parseEmotion( dataSet.threshold )\r\n\t\t\t\t\tconst dataBarTest = testBarMulti( emoThresh )\r\n\t\t\t\t\tconst barOptionsTest = testBarMultiOptions()\r\n\t\t\t\t\t\r\n\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t<div className=\"row m-2\" key=\"2\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\tAverages + Max and min?\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t<Radar ref={this.chartReference} data={dataRadarTest} options={radarOptionsTest} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\t\"How many have hit this threshold\"?\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t<Bar ref={this.chartReference} data={dataBarTest} options={barOptionsTest} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'sentiment':\r\n\t\t\t\t\r\n\t\t\t\t\tconst dataBarStack = stackedBarData( [dataSet.min], [dataSet.ave], [dataSet.max] )\r\n\t\t\t\t\tconst barStackOptions = stackedBarOptions()\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet dataTresh = [dataSet.thresholdPos, dataSet.thresholdNeg]\r\n\t\t\t\t\tconst dataBarNorm = sentimentBarData( dataTresh )\r\n\t\t\t\t\tconst barOptionsNorm = sentimentBarOptions()\r\n\t\t\t\t\r\n\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t<div className=\"row m-2\" key=\"2\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\tSentiment Values\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t<Bar ref={this.chartReference} data={dataBarStack} options={barStackOptions} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\t\"How many have hit this threshold\"?\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t<Bar ref={this.chartReference} data={dataBarNorm} options={barOptionsNorm} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'entities':\r\n\t\t\t\t\r\n\t\t\t\t\t//console.log(dataSet)\r\n\t\t\t\t\r\n\t\t\t\t\tfor (index in dataSet) {\r\n\t\t\t\t\t\tlet entity = dataSet[index]\r\n\t\t\t\t\t\tconsole.log(entity)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet emoMax = parseEmotion( entity.emotion.max )\r\n\t\t\t\t\t\tlet emoAve = parseEmotion( entity.emotion.min )\r\n\t\t\t\t\t\tlet emoMin = parseEmotion( entity.emotion.ave )\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet emoData = testMaxMin( emoMax, emoAve, emoMin )\r\n\t\t\t\t\t\tlet emoOptions = getRadarEmotionOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst dataEntSent = stackedBarData3Test( \r\n\t\t\t\t\t\t\t[entity.confidence.min, entity.relevance.min, entity.sentiment.min],\r\n\t\t\t\t\t\t\t[entity.confidence.ave, entity.relevance.ave, entity.sentiment.ave],\r\n\t\t\t\t\t\t\t[entity.confidence.max, entity.relevance.max, entity.sentiment.max],\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tconst dataEntOptions = stackedBarOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttableDisplay.push(\r\n\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t<th scope=\"row\">{entity.text}</th>\r\n\t\t\t\t\t\t\t\t<td>{entity.type}</td>\r\n\t\t\t\t\t\t\t\t<td>{entity.count}</td>\r\n\t\t\t\t\t\t\t\t<td colspan=\"3\"><Bar ref={this.chartReference} data={dataEntSent} options={dataEntOptions} /></td>\r\n\t\t\t\t\t\t\t\t<td><Radar ref={this.chartReference} data={emoData} options={emoOptions} /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t<table className=\"table\" key=\"2\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Type</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Confidence</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Relevance</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Sentiment</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Emotion</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{tableDisplay}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'keywords':\r\n\t\t\t\t\r\n\t\t\t\t\t//console.log(dataSet)\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (index in dataSet) {\r\n\t\t\t\t\t\tlet keyData = dataSet[index]\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//const dataKeySent = stackedBarData( [keyData.sentiment.min], [keyData.sentiment.ave], [keyData.sentiment.max] )\r\n\t\t\t\t\t\t//const dataKeyOptions = stackedBarOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet emoMax = parseEmotion( keyData.emotion.max )\r\n\t\t\t\t\t\tlet emoAve = parseEmotion( keyData.emotion.min )\r\n\t\t\t\t\t\tlet emoMin = parseEmotion( keyData.emotion.ave )\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst dataRadar = testMaxMin( emoMax, emoAve, emoMin )\r\n\t\t\t\t\t\tconst dataRadarOptions = getRadarEmotionOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst dataKeySent = stackedBarData2Test(\r\n\t\t\t\t\t\t\t[keyData.relevance.min, keyData.sentiment.min], \r\n\t\t\t\t\t\t\t[keyData.relevance.ave, keyData.sentiment.ave], \r\n\t\t\t\t\t\t\t[keyData.relevance.max, keyData.sentiment.max] \r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tconst dataKeyOptions = stackedBarOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttableDisplay.push(\r\n\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t<th scope=\"row\">{keyData.text}</th>\r\n\t\t\t\t\t\t\t\t<td>{keyData.count}</td>\r\n\t\t\t\t\t\t\t\t<td colSpan=\"2\"><Bar ref={this.chartReference} data={dataKeySent} options={dataKeyOptions} /></td>\r\n\t\t\t\t\t\t\t\t<td><Radar ref={this.chartReference} data={dataRadar} options={dataRadarOptions} /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t<table className=\"table\" key=\"2\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Relevance Score</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Sentiment</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Emotion</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{tableDisplay}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'relations':\r\n\t\t\t\t\r\n\t\t\t\t\t//console.log(dataSet)\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (index in dataSet) {\r\n\t\t\t\t\t\tlet relData = dataSet[index]\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst scoreData = stackedBarData( [relData.score.min], [relData.score.ave], [relData.score.max] )\r\n\t\t\t\t\t\tconst scoreOptions = stackedBarOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttableDisplay.push(\r\n\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t<th scope=\"row\">{relData.count}</th>\r\n\t\t\t\t\t\t\t\t<td>{relData.arguments[0].text}</td>\r\n\t\t\t\t\t\t\t\t<td>{relData.type}</td>\r\n\t\t\t\t\t\t\t\t<td>{relData.arguments[1].text}</td>\r\n\t\t\t\t\t\t\t\t<td style={{width:\"30%\"}}><Bar ref={this.chartReference} data={scoreData} options={scoreOptions} /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t<table className=\"table\" key=\"2\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Actor</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Action</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Target</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Score</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{tableDisplay}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log(\"Invalid AI selection somehow\")\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"testStuff\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-sm-3 m-2\">\t\r\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.backButton}>\r\n\t\t\t\t\t\t\t\tGo Back\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-sm m-2\">\t\r\n\t\t\t\t\t\t\tPage Title Test!\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t<div className=\"col-lg-3 border m-2\">\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Calendar \r\n\r\n\t\t\t\t\t\t\t\t\tminDetail={'year'}\r\n\t\t\t\t\t\t\t\t\tmaxDetail={'month'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col border m-2\">\t\t\t\t\t\r\n\t\t\t\t\t\t\t<p>{this.state.messages}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<ButtonGroup toggle>\r\n\t\t\t\t\t\t\t\t{promptList.map((radio, idx) => (\r\n\t\t\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\t\tname=\"radio\"\r\n\t\t\t\t\t\t\t\t\tvalue={radio.value}\r\n\t\t\t\t\t\t\t\t\tchecked={this.state.selectedPrompt === radio.value}\r\n\t\t\t\t\t\t\t\t\tonChange={this.selectPrompt}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{radio.name}\r\n\t\t\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<ButtonGroup toggle>\r\n\t\t\t\t\t\t\t\t{daySet.map((radio, idx) => (\r\n\t\t\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\t\t\t\tname=\"radio\"\r\n\t\t\t\t\t\t\t\t\tvalue={radio.value}\r\n\t\t\t\t\t\t\t\t\tchecked={this.state.seletedDay === radio.value}\r\n\t\t\t\t\t\t\t\t\tonChange={this.selectDay}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{radio.name}\r\n\t\t\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<ButtonGroup toggle>\r\n\t\t\t\t\t\t\t\t{AIAspect.map((radio, idx) => (\r\n\t\t\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"info\"\r\n\t\t\t\t\t\t\t\t\tname=\"radio\"\r\n\t\t\t\t\t\t\t\t\tvalue={radio.value}\r\n\t\t\t\t\t\t\t\t\tchecked={this.state.selectedAspect === radio.value}\r\n\t\t\t\t\t\t\t\t\tonChange={this.selectAI}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{radio.name}\r\n\t\t\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\tShowing Data for {promptNames[this.state.selectedPrompt]}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{displayStats}\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row  my-2\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(testClass);","import React from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap';\r\n\r\nimport Store from \"store\"\r\n\r\nimport { ProgressBar } from 'react-bootstrap';\r\n\r\nimport Calendar from 'react-calendar'\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nimport { Radar, Bar } from 'react-chartjs-2';\r\nimport { testMaxMin, testBarMulti, stackedBarData3Test, stackedBarData2Test, stackedBarData, sentimentBarData } from '../utils';\r\nimport { getRadarEmotionOptions, testBarMultiOptions, stackedBarOptions, sentimentBarOptions } from '../utils';\r\nimport {makeCompanyTestData} from \"../utils\";\r\n\r\nconst promptNames = {\r\n\tp1:\"Full Prompt 1 Name Here\",\r\n\tp2:\"Full Prompt 2 Name Here\",\r\n\tp3:\"Full Prompt 3 Name Here\",\r\n\tp4:\"Full Prompt 4 Name Here\",\r\n}\r\n\r\nconst promptList = [\r\n    { name: 'Prompt 1 Type?', value: 'p1' },\r\n    { name: 'Prompt 2 Type?', value: 'p2' },\r\n    { name: 'Prompt 3 Type?', value: 'p3' },\r\n\t{ name: 'Prompt 4 Type?', value: 'p4' },\r\n];\r\n\r\nconst AIAspect = [\r\n    { name: 'Emotion', value: 'emotion' },\r\n    { name: 'Sentiment', value: 'sentiment' },\r\n    { name: 'Entities', value: 'entities' },\r\n\t{ name: 'Keywords', value: 'keywords' },\r\n\t{ name: 'Relations', value: 'relations' },\r\n];\r\n\r\nconst daySet = [\r\n    { name: 'Monday', value: 'mon' },\r\n    { name: 'Tuesday', value: 'tue' },\r\n    { name: 'Wednesday', value: 'wed' },\r\n\t{ name: 'Thursday', value: 'thu' },\r\n\t{ name: 'Friday', value: 'fri' },\r\n\t{ name: 'Saturday', value: 'sat' },\r\n\t{ name: 'Sunday', value: 'sun' },\r\n\t{ name: 'All', value: 'allDay' },\r\n];\r\n\r\n// This is very lean...\r\nconst parseEmotion = (emotionData) => {\r\n\t\r\n\tlet derp = [emotionData.joy, emotionData.anger, emotionData.sadness, emotionData.disgust, emotionData.fear]\r\n\treturn derp;\r\n}\r\n\r\nclass testClass extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t\t\r\n\t\t\tselectedPrompt:\"p1\",\r\n\t\t\tselectedAspect:\"emotion\",\r\n\t\t\tseletedDay:\"mon\",\r\n\t\t\t\r\n\t\t\t// hmmmm\r\n\t\t\tdataSet: makeCompanyTestData(),\r\n        };\r\n\t}\r\n\t\r\n\tbackButton = () => {\r\n\t\tthis.props.history.goBack()\r\n\t}\r\n\t\r\n\tselectPrompt = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedPrompt:event.currentTarget.value\r\n\t\t});\r\n\t\t\r\n\t\tthis.changeRequest()\r\n\t}\r\n\tselectAI = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedAspect:event.currentTarget.value\r\n\t\t});\r\n\t\t\r\n\t\tthis.changeRequest()\r\n\t}\r\n\tselectDay = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tseletedDay:event.currentTarget.value\r\n\t\t});\r\n\t\t\r\n\t\tthis.changeRequest()\r\n\t}\r\n\t\r\n\tchangeRequest = () => {\r\n\t\t//console.log( Store.get(\"testData\") )\r\n\t\t\r\n\t\t//let overwriteData = this.state.dataSet\r\n\t\t//console.log(overwriteData)\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\t//dataSet:overwriteData\r\n\t\t})\r\n\t}\r\n\t\r\n\t// Rendering this with Bootstrap React.... To see if there is anything really interesting I can do with it\r\n\t// So far it doesnt look all that different \r\n\trender() {\r\n\t\t\r\n\t\tlet tableDisplay = []\r\n\t\tlet index;\r\n\t\t\r\n\t\t// Read the data from our state machine,\r\n\t\tconst currentPrompt = this.state.selectedPrompt\r\n\t\tconst currentDay = this.state.seletedDay\r\n\t\tconst currentAspect = this.state.selectedAspect\r\n\t\t\r\n\t\t// Switch state this bugger...\r\n\t\tlet dataSet = this.state.dataSet[currentPrompt][currentDay][currentAspect]\r\n\t\tlet purity = this.state.dataSet[currentPrompt].responsePurity\r\n\t\t\r\n\t\t// Set up the displays...\r\n\t\tlet displayStats = []\r\n\t\tdisplayStats.push(\r\n\t\t\t<div className=\"row m-2\" key=\"1\">\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<div className=\"progressBar\">\r\n\t\t\t\t\t\t<ProgressBar now={ purity } label={`${purity}% Response Rate`} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t\r\n\t\tif (!(dataSet === undefined)) {\r\n\t\t\t\r\n\t\t\tswitch(currentAspect) {\r\n\t\t\t\tcase \"emotion\":\r\n\t\t\t\t\tlet emoMax = parseEmotion( dataSet.max )\r\n\t\t\t\t\tlet emoAve = parseEmotion( dataSet.min )\r\n\t\t\t\t\tlet emoMin = parseEmotion( dataSet.ave )\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst dataRadarTest = testMaxMin( emoMax, emoAve, emoMin )\r\n\t\t\t\t\tconst radarOptionsTest = getRadarEmotionOptions()\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet emoThresh = parseEmotion( dataSet.threshold )\r\n\t\t\t\t\tconst dataBarTest = testBarMulti( emoThresh )\r\n\t\t\t\t\tconst barOptionsTest = testBarMultiOptions()\r\n\t\t\t\t\t\r\n\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t<div className=\"row m-2\" key=\"2\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\tAverages + Max and min?\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t<Radar ref={this.chartReference} data={dataRadarTest} options={radarOptionsTest} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\t\"How many have hit this threshold\"?\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t<Bar ref={this.chartReference} data={dataBarTest} options={barOptionsTest} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'sentiment':\r\n\t\t\t\t\r\n\t\t\t\t\tconst dataBarStack = stackedBarData( [dataSet.min], [dataSet.ave], [dataSet.max] )\r\n\t\t\t\t\tconst barStackOptions = stackedBarOptions()\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet dataTresh = [dataSet.thresholdPos, dataSet.thresholdNeg]\r\n\t\t\t\t\tconst dataBarNorm = sentimentBarData( dataTresh )\r\n\t\t\t\t\tconst barOptionsNorm = sentimentBarOptions()\r\n\t\t\t\t\r\n\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t<div className=\"row m-2\" key=\"2\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\t\"How many have hit this threshold\"?\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t<Bar ref={this.chartReference} data={dataBarStack} options={barStackOptions} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\t\"How many have hit this threshold\"?\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t<Bar ref={this.chartReference} data={dataBarNorm} options={barOptionsNorm} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'entities':\r\n\t\t\t\t\r\n\t\t\t\t\t//console.log(dataSet)\r\n\t\t\t\t\r\n\t\t\t\t\tfor (index in dataSet) {\r\n\t\t\t\t\t\tlet entity = dataSet[index]\r\n\t\t\t\t\t\tconsole.log(entity)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet emoMax = parseEmotion( entity.emotion.max )\r\n\t\t\t\t\t\tlet emoAve = parseEmotion( entity.emotion.min )\r\n\t\t\t\t\t\tlet emoMin = parseEmotion( entity.emotion.ave )\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet emoData = testMaxMin( emoMax, emoAve, emoMin )\r\n\t\t\t\t\t\tlet emoOptions = getRadarEmotionOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst dataEntSent = stackedBarData3Test( \r\n\t\t\t\t\t\t\t[entity.confidence.min, entity.relevance.min, entity.sentiment.min],\r\n\t\t\t\t\t\t\t[entity.confidence.ave, entity.relevance.ave, entity.sentiment.ave],\r\n\t\t\t\t\t\t\t[entity.confidence.max, entity.relevance.max, entity.sentiment.max],\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tconst dataEntOptions = stackedBarOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttableDisplay.push(\r\n\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t<th scope=\"row\">{entity.text}</th>\r\n\t\t\t\t\t\t\t\t<td>{entity.type}</td>\r\n\t\t\t\t\t\t\t\t<td>{entity.count}</td>\r\n\t\t\t\t\t\t\t\t<td colspan=\"3\"><Bar ref={this.chartReference} data={dataEntSent} options={dataEntOptions} /></td>\r\n\t\t\t\t\t\t\t\t<td><Radar ref={this.chartReference} data={emoData} options={emoOptions} /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t<table className=\"table\" key=\"2\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Type</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Confidence</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Relevance</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Sentiment</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Emotion</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{tableDisplay}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'keywords':\r\n\t\t\t\t\r\n\t\t\t\t\t//console.log(dataSet)\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (index in dataSet) {\r\n\t\t\t\t\t\tlet keyData = dataSet[index]\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//const dataKeySent = stackedBarData( [keyData.sentiment.min], [keyData.sentiment.ave], [keyData.sentiment.max] )\r\n\t\t\t\t\t\t//const dataKeyOptions = stackedBarOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet emoMax = parseEmotion( keyData.emotion.max )\r\n\t\t\t\t\t\tlet emoAve = parseEmotion( keyData.emotion.min )\r\n\t\t\t\t\t\tlet emoMin = parseEmotion( keyData.emotion.ave )\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst dataRadar = testMaxMin( emoMax, emoAve, emoMin )\r\n\t\t\t\t\t\tconst dataRadarOptions = getRadarEmotionOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst dataKeySent = stackedBarData2Test(\r\n\t\t\t\t\t\t\t[keyData.relevance.min, keyData.sentiment.min], \r\n\t\t\t\t\t\t\t[keyData.relevance.ave, keyData.sentiment.ave], \r\n\t\t\t\t\t\t\t[keyData.relevance.max, keyData.sentiment.max] \r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tconst dataKeyOptions = stackedBarOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttableDisplay.push(\r\n\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t<th scope=\"row\">{keyData.text}</th>\r\n\t\t\t\t\t\t\t\t<td>{keyData.count}</td>\r\n\t\t\t\t\t\t\t\t<td colSpan=\"2\"><Bar ref={this.chartReference} data={dataKeySent} options={dataKeyOptions} /></td>\r\n\t\t\t\t\t\t\t\t<td><Radar ref={this.chartReference} data={dataRadar} options={dataRadarOptions} /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t<table className=\"table\" key=\"2\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Relevance Score</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Sentiment</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Emotion</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{tableDisplay}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'relations':\r\n\t\t\t\t\r\n\t\t\t\t\t//console.log(dataSet)\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (index in dataSet) {\r\n\t\t\t\t\t\tlet relData = dataSet[index]\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst scoreData = stackedBarData( [relData.score.min], [relData.score.ave], [relData.score.max] )\r\n\t\t\t\t\t\tconst scoreOptions = stackedBarOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttableDisplay.push(\r\n\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t<th scope=\"row\">{relData.count}</th>\r\n\t\t\t\t\t\t\t\t<td>{relData.arguments[0].text}</td>\r\n\t\t\t\t\t\t\t\t<td>{relData.type}</td>\r\n\t\t\t\t\t\t\t\t<td>{relData.arguments[1].text}</td>\r\n\t\t\t\t\t\t\t\t<td style={{width:\"30%\"}}><Bar ref={this.chartReference} data={scoreData} options={scoreOptions} /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t<table className=\"table\" key=\"2\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Actor</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Action</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Target</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Score</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{tableDisplay}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log(\"Invalid AI selection somehow\")\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"testStuff\">\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"col-4 border\">\r\n\t\t\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t\t\t<div className=\"col border m-2\">\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Calendar \r\n\r\n\t\t\t\t\t\t\t\t\t\t\tminDetail={'year'}\r\n\t\t\t\t\t\t\t\t\t\t\tmaxDetail={'month'}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t<ButtonGroup toggle>\r\n\t\t\t\t\t\t\t\t\t\t{promptList.map((radio, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={this.state.selectedPrompt === radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.selectPrompt}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{radio.name}\r\n\t\t\t\t\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t<ButtonGroup toggle>\r\n\t\t\t\t\t\t\t\t\t\t{daySet.map((radio, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={this.state.seletedDay === radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.selectDay}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{radio.name}\r\n\t\t\t\t\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t<ButtonGroup toggle>\r\n\t\t\t\t\t\t\t\t\t\t{AIAspect.map((radio, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"info\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={this.state.selectedAspect === radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.selectAI}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{radio.name}\r\n\t\t\t\t\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"col-8 border\">\r\n\t\t\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\tShowing Data for {promptNames[this.state.selectedPrompt]}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{displayStats}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"row  my-2\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(testClass);","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport axios from \"axios\";\n\nimport { Navigation, Footer, Landing, SignIn, SignUp, Forgot, ViewJournals, WriteJournals, ViewCompany, SetCompany, MainMenu, Test, Test2 } from \"./components\";\n\nimport Store from \"store\"\n\n//import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\n\n// Is THIS a patch for Github Pages react stuff?\n// Maybe...\n// Ill have to test this...\nconst basePath = \"/scenere\"\n\nconst hostName = \"https://cmaster.pythonanywhere.com\"\n//const hostName = \"10.0.0.60:8000\"\n\nclass App extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n          \n\t\t  currentUser: undefined,\n\t\t  sessionToken: undefined,\n\n        };\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis.loadFromCookies();\n\t};\n\t\n\tloadFromCookies = () => {\n\t\tconst lastUserSet = Store.get('lastUser');\n\t\t\t\n\t\ttry{ \n\t\t\tthis.setState({ currentUser: lastUserSet.user, sessionToken: lastUserSet.session }) \n\t\t}\n\t\tcatch{\n\t\t\tconsole.log(\"User was NOT found in the storage\")\n\t\t};\n\t}\n\t\n\tsetToken = ( token, username ) => {\n\t\t// Verify this before we sent it in I guess?\n\t\tthis.setState({ sessionToken: token, currentUser: username })\n\t\t\n\t\tStore.set('lastUser', { user:username, session:token })\n\t\t\n\t\t// Return if we succeeded or not\n\t\treturn true\n\t}\n\t\n\t// Test out refreshing the token...\n\t// Should do this every page reload...\n\trefresh = () => {\n\t\tconst data = {\n\t\t\ttoken: this.state.sessionToken,\n\t\t};\n\t\t\n\t\taxios.post(hostName + \"/apiTokenRefresh/\", data)\n\t\t.then( \tres => {\n\t\t\t//console.log(res)\n\t\t\t\n\t\t\t// If we get here then we should have a new token\n\t\t\t//console.log(res.data.token)\n\t\t\tconsole.log(\"Token refreshed\")\n\t\t\t// A little bit unnecessary but hey...\n\t\t\tthis.setToken( res.data.token, this.state.currentUser)\n\t\t\t\n\t\t\treturn true\n\t\t})\n\t\t.catch( err => {\n\t\t\tconsole.log(err)\n\t\t\t// Check for a specific error?\n\t\t\t\n\t\t\tthis.logout()\n\t\t\t\n\t\t\treturn false\n\t\t});\n\t}\n\n\t// Should move this over to the UTIL...\n\tlogout = () => {\n\t\tthis.setState({ sessionToken: undefined, currentUser: undefined })\n\n\t\tStore.remove('lastUser')\n\t}\n\t\n\t// maybe I should move all the AXIOS stuff to its own file...\n\t\n\trender() {\n\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\">\n\t\t\t\n\t\t\t\t\t<Navigation \n\t\t\t\t\t\tcurrentUser={this.state.currentUser}\n\t\t\t\t\t\tbasePath={basePath}\n\n\t\t\t\t\t\tclearLogin={this.setToken}\n\t\t\t\t\t/>\n\t\t\t\t\t\t\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\n\t\t\t\t\t\t<Route path={basePath+\"/test\"} exact component={() => <Test \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/>} />\n\t\t\t\t\t\t<Route path={basePath+\"/test2\"} exact component={() => <Test2 \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/>} />\n\t\t\t\t\t\n\t\t\t\t\t\t<Route path={basePath+\"/\"} exact component={() => <Landing \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/>} />\n\t\t\t\t\t\t<Route path={basePath+\"/signin\"} exact component={() => <SignIn \n\t\t\t\t\t\t\t\tloginSave={this.setToken}\n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\n\t\t\t\t\t\t\t\treRouteTarget={basePath+\"/menu\"}\n\t\t\t\t\t\t\t\tforgotPath={basePath+\"/forgot\"}\n\t\t\t\t\t\t\t/>} />\n\t\t\t\t\t\t<Route path={basePath+\"/signup\"} exact component={() => <SignUp \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\treRouteTarget={basePath+\"/signin\"}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t/>} />\n\t\t\t\t\t\t<Route path={basePath+\"/forgot\"} exact component={() => <Forgot \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treRouteTarget={basePath+\"/signin\"}\n\t\t\t\t\t\t\t/>} />\n\n\t\t\t\t\t\t<Route path={basePath+\"/menu\"} exact component={() => <MainMenu \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\ttokenRefresh={this.refresh}\n\t\t\t\t\t\t\t\treRouteTarget={basePath+\"/signin\"}\n\n\t\t\t\t\t\t\t\tjournalWriteDirect={basePath+\"/write\"}\n\t\t\t\t\t\t\t\tjournalReadDirect={basePath+\"/read\"}\n\t\t\t\t\t\t\t\tcompanyReadDirect={basePath+\"/companyCheck\"}\n\t\t\t\t\t\t\t\tcompanySettingDirect={basePath+\"/companySet\"}\t\n\n\n\t\t\t\t\t\t\t\tcurrentUser={this.state.currentUser}\n\t\t\t\t\t\t\t\tauthToken={this.state.sessionToken}\n\t\t\t\t\t\t\t/>} />\n\n\t\t\t\t\t\t<Route path={basePath+\"/read\"} exact component={() => <ViewJournals \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\ttokenRefresh={this.refresh}\n\t\t\t\t\t\t\t\treRouteTarget={basePath+\"/signin\"}\n\t\t\t\t\t\t\t\tforceLogout={this.logout}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcurrentUser={this.state.currentUser}\n\t\t\t\t\t\t\t\tauthToken={this.state.sessionToken}\n\t\t\t\t\t\t\t/>} />\n\t\t\t\t\t\t<Route path={basePath+\"/write\"} exact component={() => <WriteJournals \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\ttokenRefresh={this.refresh}\n\t\t\t\t\t\t\t\treRouteTarget={basePath+\"/signin\"}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tauthToken={this.state.sessionToken}\n\t\t\t\t\t\t\t/>} />\n\t\t\t\t\t\t<Route path={basePath+\"/companyCheck\"} exact component={() => <ViewCompany \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\ttokenRefresh={this.refresh}\n\t\t\t\t\t\t\t\treRouteTarget={basePath+\"/signin\"}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tauthToken={this.state.sessionToken}\n\t\t\t\t\t\t\t/>} />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t<Route path={basePath+\"/companySet\"} exact component={() => <SetCompany \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\ttokenRefresh={this.refresh}\n\t\t\t\t\t\t\t\treRouteTarget={basePath+\"/signin\"}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tauthToken={this.state.sessionToken}\n\t\t\t\t\t\t\t/>} />\n\n\t\t\t\t\t</Switch>\n\n\t\t\t\t\t<Footer \n\t\t\t\t\t\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport'bootstrap/dist/css/bootstrap.min.css';\n//import $ from'jquery';\n//import Popper from 'popper.js';\nimport'bootstrap/dist/js/bootstrap.bundle.min';\n\n//import '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\n//<React.StrictMode>\n//</React.StrictMode>,\n\nReactDOM.render(\n  \n\t<App />,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}