{"version":3,"sources":["utils/axiosAPI.jsx","utils/graphs.jsx","components/authPages/signIn.jsx","components/authPages/signUp.jsx","components/authPages/forgot.jsx","components/authPages/verifyEmail.jsx","components/landingPages/header.jsx","components/landingPages/features.jsx","components/landingPages/aboutUs.jsx","components/landingPages/betaReqContact.jsx","components/landingPages/contactUs.jsx","components/navigation.jsx","utils/index.js","components/footer.jsx","components/authPagesCore.jsx","components/userPages/writingSuggestion.jsx","components/userPages/userProfile.jsx","components/userPages/journalView.jsx","components/userPages/journalMake.jsx","components/companyPages/companyEHI.jsx","components/companyPages/companySettings.jsx","components/companyPages/selectCompany.jsx","components/companyPages/suggestionBox.jsx","components/companyPages/companyView.jsx","components/contentPagesCore.jsx","components/landingPagesCore.jsx","App.js","reportWebVitals.js","index.js"],"names":["APISignIn","APIHost","requestUsername","requestPassword","callbackFunction","callbackFailure","data","username","password","axios","post","then","res","outData","token","catch","err","response","errData","errCodes","errDatas","errorName","push","APIResendValidator","authToken","config","headers","Authorization","get","console","log","undefined","status","APIGetUsersPermTree","reqPerms","APIGetSuggestionData","targetCompany","targetDate","dateReq","toJSON","split","APIDivisionInvitesSet","targetDivision","targetInvite","targetAction","reqDiv","put","succData","APIUserInvitesSet","arbitraryLineData","inputXAxis","inputDataList","builtData","dataIndex","label","fill","backgroundColor","borderColor","labels","datasets","getRadarEmotionData","inputData","borderWidth","testMaxMin","inputMax","inputAve","inputMin","stackedBarData","inputData1","inputData2","inputData3","stackedBarData2Test","stacked2BarData1Data","stacked3BarData1Data","signIn","props","userFieldChange","event","setState","target","value","usernameError","passwordError","isWrongError","networkError","miscError","passFieldChange","remFieldChange","remember","state","handleSubmitSuccess","incomingToken","loginSave","history","reRouteTarget","handleSubmitFailure","errorCodes","errorDatas","errorSet","extra","index","length","handleSubmit","preventDefault","currentState","lastAttemptCode","lastAttemptMessage","usernameClass","this","passwordClass","className","onSubmit","type","onChange","placeholder","id","htmlFor","to","forgotPath","React","Component","withRouter","signup","usernameFieldChange","emailFieldChange","email","password2","passwordErrorDetail","pass2FieldChange","firstNameFieldChange","firstName","lastnameFieldChange","lastName","checkFieldChange","checkField","nowSendEmailCallback","nowSendEmailFailure","nowSendEmail","newToken","nowSignInCallback","nowSignInFailure","nowSignIn","handleSignUpSubmitCallback","responseStatus","handleSignUpSubmitFailure","errorSetData","emailError","uncaughtError","usernameErrorDetail","emailErrorDetail","handleSignUpSubmit","requestPassword1","requestPassword2","first_name","last_name","APISignUp","emailClass","forgotPassword","goSignIn","arePasswordsSame","password1","swapToCode","sendEmailSuccess","successCode","successData","sendEmailFailure","sendEmail","targetEmail","APIForgotEmailSend","checkTokenSuccess","checkTokenFailure","tokenError","tokenErrorDetail","checkToken","passToken","resetToken","submitPasswordSuccess","submitPasswordFailure","submitPasswords","APIForgotEmailChangePassword","tokenFieldChange","pass1FieldChange","passwordsSameError","currentField","currentButton","currentMessage","onClick","verifyEmail","forceLogout","gotoDash","reRouteSuccessTarget","handleVerifyCallback","incomingStatus","incomingData","done","handleVerifyFailure","handleVerifySubmit","activateToken","APIValidateAccount","reSendEmailCallback","resend","reSendEmailFailure","code","reSendEmail","tokenClass","displayBody","Header","testAnother","color","size","testLeft","contact","callbackSuccess","APIBetaSignEmail","companyFieldChange","company","contentFieldChange","content","APIContactUsEmail","navigation","triggerLogout","clearLogin","saveToStorage","key","storageTime","Date","setSeconds","getSeconds","storeData","getTime","Store","set","testSaveStorage","getFromStorage","dataTest","loadData","dateSaved","now","remove","testLoadStorage","something","basePath","iconButton","userDisplay","currentUser","data-toggle","data-target","aria-controls","aria-expanded","aria-label","footer","AuthPages","backButton","goBack","example","styles","editor","border","minHeight","justifyContent","StyleButton","onToggle","e","style","active","BLOCK_TYPES","BlockStyleControls","editorState","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","getType","map","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","keyID","backLayerButtons","currentLayer","companyDataTree","backLayer","selectedDivisionFull","selectedPerms","currentCompanySelections","i","thisClass","children","currentLayerButtons","selectLayer","getButtonClass","errorCheckingClass","lastRequestStatus","RichUtils","toggleBlockType","inlineStyle","toggleInlineStyle","handleKeyCommand","command","newState","spellCheck","saveToServer","inviteType","useState","inviteCode","setInviteCode","currentEmail","newEmail","setNewEmail","newFirstName","setNewFirstName","newLastName","setNewLastName","oldPassword","setOldPassword","newPassword","setNewPassword","newPassword2","setNewPassword2","inviteIDList","setInviteIDList","inviteNamesList","setInviteNamesList","inviteRolesList","setInviteRolesList","delViews","setDelViews","togSends","setTogSends","delGoverns","setDelGoverns","tiggerReload","checkData","APIUserInvitesGet","getInvitesSuccess","getInvitesFailure","getUserInvites","inviteSuccess","successCodes","inviteFailure","errorMessages","IDList","nameList","roleList","spendInviteSuccess","spendInviteFailure","inviteYes","inviteNo","toggleDelete","valueInt","Number","temp","name","slice","indexOf","splice","changeGeneralSuccess","changeGeneralFailure","setSuccess","triggerRefresh","setFailure","useEffect","invitesDisplayList","displayViewSends","viewNameList","sendIDList","viewIDList","displayOwningCompanyList","governedNameList","governedIDList","APIUserInviteCode","currentFirstName","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","testData","dataSet","APIUserSettingsEdit","APIChangeUserEmail","newFirst","newLast","APIChangeUserName","newPass","oldPass","oldPass2","APIChangeUserPassword","parseEmotion","emotionData","joy","anger","sadness","disgust","fear","AIAspect","displayPromptSentance","selectedPrompt","dayData","promptList","tableDisplay","displayStats","selectedAspect","emoValue","document","emotion","dataDocEmo","emoOptions","scale","ticks","beginAtZero","suggestedMin","suggestedMax","options","dataBarStack","score","barStackOptions","scales","yAxes","xAxes","entity","emoVal","emoData","dataEntSent","confidence","relevance","sentiment","dataEntOptions","scope","text","count","colSpan","keyData","dataRadar","dataRadarOptions","dataKeySent","dataKeyOptions","pickDate","currentDate","tileClassName","date","view","checkDate","getFullYear","getMonth","getDate","hasJournal","validJournalDates","find","element","validJournalScanDates","minDetail","maxDetail","displayMessage","ButtonGroup","toggle","radio","idx","ToggleButton","variant","checked","setPrompt","setAI","currentJournal","historyGraphTimings","dayLength","weekLength","GraphTimingButtons","currentDisplay","graphState","currentDayTimeIndex","timeIndexDay","currentWeekTimeIndex","timeIndexWeek","dayLabels","ehiDayLabels","ehiDayData","dayCount","ehiDaysLabels","ehiDaysData","weekLabels","ehiWeekLabels","weekData","ehiWeekData","ehiWeeksLabels","ehiWeeksData","unshift","lineDataDays","lineDataWeeks","lineOptions","onDayToggle","onWeekToggle","viewingPermsCheck","targetUser","setTargetUser","targetRole","setTargetRole","viewPerms","setViewPerms","expiryDate","setExpiryDate","companyFullName","setCompanyFullName","divisionName","setDivisionName","adminsIDs","setAdminsIDs","viewsIDs","setViewsIDs","sendsIDs","setSendsIDs","governsIDs","setGovernsIDs","admins","setAdmins","views","setViews","sends","setSends","governs","setGoverns","delAdmins","setDelAdmins","delSends","setDelSends","numChild","setNumChild","currentDivisionID","APIDivisionSettingsGet","getSuccess","getFailure","getDivisionData","getDivisionsInvites","APIDivisionInvitesGet","triggerDropdown","adminUserList","viewingUserList","sentUserList","governedUserList","showTargetRole","aria-haspopup","APIDivisionInvitesCreate","APIDivisionSettingsEdit","selectedDivision","selectedID","currentSet","getDataRequest","displayData","suggestion","validDays","dataDay","toString","daySet","currentPrompt","currentDay","selectedDay","currentAspect","promptName","purity","ProgressBar","emoMax","max","emoAve","ave","emoMin","min","dataDocumentEmo","radarOptions","emoThresh","threshold","dataBar","barOptions","dataBarNorm","sentimentBarData","thresholdPos","thresholdNeg","barOptionsNorm","relData","scoreData","scoreOptions","arguments","width","error","messageLine1","currentCompany","messageLine2","anchorDate","validSummaryDates","setDay","DefaultView","ContentPages","componentDidMount","checkActiveUser","getValidJournalDates","getUserCompanyAdminViewTree","getUserGovernedPermTree","componentDidUpdate","prevProps","prevState","redoLoad","getUserCompanySendsTree","changeSuggestionContent","incomingState","suggestionEditorState","changeJournalContent","journalEditorState","changeEHIDaydates","dateRangeChoice","EHIDayTimespan","changeEHIWeekdates","EHIWeekTimespan","checkActiveUserCallback","ActiveState","activateRedirect","isActive","APICheckActive","journalPostCallback","incomingStuff","postJournal","inputDate","journalContent","getPlainText","richContent","convertToRaw","postingDate","editorBlock","randomID","Math","random","substr","shorthand","forDate","richText","APISaveJournal","governedPermTreeCallback","incomingCompanyTree","incomingCompanyNames","incomingCompanyIDs","companyGovernedDataTree","companyGovernedDataRawList","companyGovernedDataRawIDList","governedPermTreeFailure","suggestionPostCallback","suggestionPostFailureCallback","postSuggestion","suggestionContent","currentSuggestionDivision","createdDate","APISaveSuggestion","journalDatesCallback","incomingJournalDates","incomingJournalAIDates","tempAIArray","tempJoArray","item","newDate","hasAI","APIGetJournalDates","journalDataCallback","incomingjournalContent","incomingAIData","journalMessage","selectedJournalDate","selectedJournalData","pickJournalCalenderDate","selectedDate","AIData","AIresult","APIGetJournalData","companyListCallback","companyViewableDataTree","companyViewableDataRawList","companyViewableDataRawIDs","companyListFailure","companySendCallback","companySendDataTree","companySendDataRawList","companySendDataRawIDList","companySendFailure","companyDatesCallback","incomingDatesList","validCompanySummaryDates","getCompanyValidDates","divisionID","tempSumArray","setDate","hasMon","hasTue","hasWed","hasThu","hasFri","hasSat","hasSun","APIGetCompanyValidDates","companySuggestionDateCallback","validDivisionSuggestionDates","getCompanyValidSuggestionDates","datesData","APIGetSuggestionDates","companySuggestionDataCallback","givenDate","selectedSuggestDay","selectedSuggestDayData","getCompanySuggestionData","companyDataCallback","incomingDataDict","companyMessage","selectedCompanyDate","selectedSummaryWeekData","currentCompanyDataDate","currentCompanyDataName","currentDivisionName","currentCompanyDataID","getCompanyWeeklySummary","todayWeekday","getDay","copiedDate","selectedCompanyDay","incomingDict","mon","monResult","tue","tueResult","wed","wedResult","thu","thuResult","fri","friResult","sat","satResult","sun","sunResult","allDay","summaryResult","APIGetCompanySummary","companyEHICallback","incomingEHIDaysLabels","incomingEHIDaysData","incomingEHIWeeksLabels","incomingEHIWeeksData","EHIDayLabels","EHIDaySet","EHIWeekLabels","EHIWeekSet","getCompanyEHIData","labelsDays","dataDays","labelsWeeks","dataWeeks","EHIstorage","APIGetServerEHIData","suggestionDataCallback","selectCompanyLayer","values","currentCompanyIndexes","lastCompanyRequestStatus","backCompanyLayer","selectGovernedCompanyLayer","currentCompanyGovernedIndexes","newDivision","lastGovernedCompanyRequestStatus","backGovernedCompanyLayer","getThatData","getCompanyDataRequest","splitUp","permCheck","changeJournalPrompt","selectedJournalPrompt","currentTarget","changeJournalAspect","selectedJournalAspect","changeCompanyPrompt","selectedCompanyPrompt","changeCompanyAspect","selectedCompanyAspect","changeCompanyDay","selectedSuggestionDate","EditorState","createEmpty","journalPlaceholder","match","url","path","exact","component","getGovernedCompanyDataRequest","getJournalDates","setCompany","changeSelectedCompany","loadCompanyList","getValidDates","FreePages","hostName","App","loadFromCookies","lastUserSet","user","sessionToken","session","setToken","rememberMe","refreshCallback","refreshFailure","logout","refresh","APIRefreshToken","tokenRefresh","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7de21b99.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\n// Refresh!\r\nexport const APIRefreshToken = (APIHost, sessionToken, callbackFunction, callbackFailure) => {\r\n\tconst data = {\r\n\t\t\ttoken: sessionToken,\r\n\t\t};\r\n\t\t\r\n\t\taxios.post(APIHost + \"/apiTokenRefresh/\", data)\r\n\t\t.then( \tres => {\r\n\t\t\t//console.log(res)\r\n\t\t\t\r\n\t\t\t// If we get here then we should have a new token\r\n\t\t\tconsole.log(\"Token refreshed\")\r\n\t\t\tcallbackFunction()\r\n\t\t})\r\n\t\t.catch( err => {\r\n\t\t\tconsole.log(err)\r\n\t\t\t// Check for a specific error?\r\n\t\t\t\r\n\t\t\tthis.logout()\r\n\t\t\t\r\n\t\t\treturn false\r\n\t\t});\r\n}\t\r\n\r\n// Sign In!\r\nexport const APISignIn = (APIHost, requestUsername, requestPassword, callbackFunction, callbackFailure) => {\r\n\tconst data = {\r\n\t\tusername: requestUsername,\r\n\t\tpassword: requestPassword,\r\n\t};\r\n\taxios.post(APIHost +\"/apiTokenAuth/\", data )\r\n\t.then( res => {\r\n\t\t//res.data\r\n\t\t//console.log(res.data)\r\n\t\tlet outData = res.data.token\r\n\t\tcallbackFunction(outData)\r\n\t})\r\n\t.catch( err => {\r\n\t\t// Find out what error it was, then change the sign in page accordingly by the by...\r\n\t\t//console.log(err)\r\n\t\tif (!err.response) {\r\n\t\t\t// network Error\r\n\t\t\t//console.log(\"Network Error!\")\r\n\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// proper response\r\n\t\t\t//let errCode = err.response.status\r\n\t\t\tlet errData = err.response.data\r\n\t\t\t\r\n\t\t\t// First version.... Hmmmmmmmmmmm This is still too simple...\r\n\t\t\tlet errCodes = []\r\n\t\t\tlet errDatas = []\r\n\t\t\t\r\n\t\t\tfor (let errorName in errData) {\r\n\t\t\t\t//console.log(errorName)\r\n\t\t\t\t\r\n\t\t\t\tif (errorName === \"username\") {\r\n\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse if (errorName === \"password\") {\r\n\t\t\t\t\terrCodes.push(2)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t} else if (errorName === \"non_field_errors\") {\r\n\t\t\t\t\terrCodes.push(3)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallbackFailure(errCodes, errDatas)\r\n\t\t}\r\n\t})\r\n}\r\n\r\n// Sign Up!\r\nexport const APISignUp = (APIHost, requestUsername, requestPassword1, requestPassword2, email, firstName, lastName, callbackFunction, callbackFailure) => {\r\n\tconst data = {\r\n\t\t\tusername: requestUsername,\r\n\t\t\tpassword: requestPassword1,\r\n\t\t\tpassword2: requestPassword2,\r\n\t\t\temail: email,\r\n\t\t\tfirst_name: firstName,\r\n\t\t\tlast_name: lastName,\r\n\t\t};\r\n\t\t\r\n\t\t// Output of this boi is the error messages and stuff...\r\n\t\t// Because the only data we really need is that it succeeded before we continue...\r\n\t\taxios.post(APIHost +\"/registerUser/\", data )\r\n\t\t.then( res => { \r\n\t\t\t//res.data\r\n\t\t\tlet outData = res.status\r\n\t\t\tcallbackFunction(outData)\r\n\t\t})\r\n\t\t.catch( err => {\r\n\t\t\t//console.log(err)\r\n\t\t\tif (!err.response) {\r\n\t\t\t\tconsole.log(\"Network Error!\")\r\n\t\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//let errCode = err.response.status\r\n\t\t\t\tlet errData = err.response.data\r\n\t\t\t\t\r\n\t\t\t\t// First version.... Hmmmmmmmmmmm This is still too simple...\r\n\t\t\t\tlet errCodes = []\r\n\t\t\t\tlet errDatas = []\r\n\t\t\t\t\r\n\t\t\t\tfor (let errorName in errData) {\r\n\t\t\t\t\t//console.log(errorName)\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (errorName === \"username\") {\r\n\t\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (errorName === \"password\") {\r\n\t\t\t\t\t\terrCodes.push(2)\r\n\t\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t\t} else if (errorName === \"email\") {\r\n\t\t\t\t\t\terrCodes.push(3)\r\n\t\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcallbackFailure(errCodes, errDatas)\r\n\t\t\t}\r\n\t\t})\r\n}\r\n\r\n// Validator Check!\r\nexport const APIValidateAccount = (APIHost, authToken, activateToken, callbackFunction, callbackFailure) => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\taxios.get(APIHost +\"/emailActivate/?token=\"+activateToken, config)\r\n\t.then(res => {\r\n\t\t\tcallbackFunction(res.status, res.data)\r\n\t})\r\n\t.catch( err => {\r\n\t\tif (!(err === undefined)) {\r\n\t\t\tif (!(err.response === undefined)) {\r\n\t\t\t\tcallbackFailure(err.response.status, err.response.data)\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Resend Validation Email!\r\nexport const APIResendValidator = (APIHost, authToken, callbackFunction, callbackFailure) => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\taxios.get(APIHost +\"/emailVerifyResend\", config)\r\n\t.then(res => {\r\n\t\t\t//console.log(\"Got Data!\")\r\n\t\t\t//console.log(res.data)\r\n\t\t\tcallbackFunction()\r\n\t})\r\n\t.catch( err => {\r\n\t\tconsole.log(\"Failure\")\r\n\t\tif (!(err === undefined)) {\r\n\t\t\tif (!(err.response === undefined)) {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tcallbackFailure()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Check if the user is active!\r\nexport const APICheckActive = (APIHost, authToken, callbackFunction, callbackFailure) => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\taxios.get(APIHost +\"/userIsActive\", config)\r\n\t.then(res => {\r\n\t\t\tcallbackFunction(res.data[0].isActive)\r\n\t})\r\n\t.catch( err => {\r\n\t\t//console.log(\"Failure\")\r\n\t\t// I am going to have to redo everything in this style, as there can be several errors...\r\n\t\tif (!(err === undefined)) {\r\n\t\t\tif (!(err.response === undefined)) {\r\n\t\t\t\tcallbackFailure(err.response.status, err.response.data)\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Contact Us Email\r\nexport const APIContactUsEmail = (APIHost, firstName, lastName, email, company, content, callbackFunction, callbackFailure) => {\r\n\tconst data = {\r\n\t\t\t\r\n\t\tfirstName: firstName,\r\n\t\tlastName: lastName,\r\n\t\t\r\n\t\temail: email,\r\n\t\tcompany: company,\r\n\t\t\r\n\t\tcontent: content,\t\t\r\n\t};\r\n\r\n\taxios.post(APIHost +\"/sendContactEmail/\", data )\r\n\t.then( res => { \r\n\t\r\n\t\t// Successfully Sent the email, can trigger something on this side\r\n\t\tif (res.status === 200) {\r\n\r\n\t\t}\r\n\t})\r\n\t.catch( err => {\r\n\t\tconsole.log(err.response.status)\r\n\t\tconsole.log(err.response.data)\r\n\t})\r\n}\r\n\r\n// Beta Sign Up Email\r\nexport const APIBetaSignEmail = (APIHost, email, callbackFunction, callbackFailure) => {\r\n\tconst data = {\r\n\t\temail: email,\r\n\t};\r\n\r\n\taxios.post(APIHost +\"/sendBetaEmail/\", data )\r\n\t.then( res => { \r\n\t\r\n\t\t// Successfully Sent the email, can trigger something on this side\r\n\t\tif (res.status === 200) {\r\n\r\n\t\t}\r\n\t})\r\n\t.catch( err => {\r\n\t\tconsole.log(err.response.status)\r\n\t\tconsole.log(err.response.data)\r\n\t})\r\n}\r\n\r\n\r\n// Forgot Password Email Send!\r\nexport const APIForgotEmailSend = (APIHost, sendEmail, callbackFunction, callbackFailure) => {\r\n\r\n\t// Not logged in, so no token\r\n\tconst data = {\r\n\t\ttargetEmail: sendEmail,\r\n\t};\r\n\t\r\n\taxios.post(APIHost + \"/nonAuthPassword/sendEmail/\", data)\r\n\t.then(res => {\r\n\t\t\t//console.log(res)\r\n\t\t\tcallbackFunction(res.status)\r\n\t\t}\r\n\t)\r\n\t.catch(err => {\r\n\t\tif (!err.response) {\r\n\t\t\tconsole.log(\"Network Error!\")\r\n\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet errData = err.response.data\r\n\t\t\t\r\n\t\t\tlet errCodes = []\r\n\t\t\tlet errDatas = []\r\n\t\t\t\r\n\t\t\tfor (let errorName in errData) {\r\n\t\t\t\t//console.log(errorName)\r\n\t\t\t\t\r\n\t\t\t\tif (errorName === \"email\") {\r\n\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallbackFailure(errCodes, errDatas)\r\n\t\t}\r\n\t});\r\n}\r\n// Forgot Password Validator Token Check!\r\nexport const APIForgotEmailValidate = (APIHost, passToken, callbackFunction, callbackFailure) => {\r\n\r\n\t// Not logged in, so no token\r\n\tconst config = {\r\n\t\t\r\n\t};\r\n\t\r\n\taxios.get(APIHost + \"/nonAuthPassword/validate/?token=\"+passToken, config)\r\n\t.then(res => {\r\n\t\t\tcallbackFunction(res.status)\r\n\t\t}\r\n\t)\r\n\t.catch(err => {\r\n\t\tif (!err.response) {\r\n\t\t\tconsole.log(\"Network Error!\")\r\n\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet errData = err.response.data\r\n\t\t\t\r\n\t\t\tlet errCodes = []\r\n\t\t\tlet errDatas = []\r\n\t\t\t\r\n\t\t\tfor (let errorName in errData) {\r\n\t\t\t\t//console.log(errorName)\r\n\t\t\t\t\r\n\t\t\t\tif (errorName === \"status\") {\r\n\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallbackFailure(errCodes, errDatas)\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Forgot Password Password Changer!\r\nexport const APIForgotEmailChangePassword = (APIHost, passToken, password1, password2, callbackFunction, callbackFailure) => {\r\n\t// Not logged in, so no token\r\n\tconst data = {\r\n\t\tpassword:password1,\r\n\t\tpassword2:password2,\r\n\t\tpassToken:passToken,\r\n\t};\r\n\t\r\n\taxios.put(APIHost + \"/nonAuthPassword/Change/\", data)\r\n\t.then(res => {\r\n\t\t\t// If this triggers, we should be completly fine...\r\n\t\t\tcallbackFunction(res.status)\r\n\t\t}\r\n\t)\r\n\t.catch(err => {\r\n\t\t// If THIS triggers, we are having a bad time...\r\n\t\t//console.log(err)\r\n\t\tif (!err.response) {\r\n\t\t\tconsole.log(\"Network Error!\")\r\n\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet errData = err.response.data\r\n\t\t\t\r\n\t\t\tlet errCodes = []\r\n\t\t\tlet errDatas = []\r\n\t\t\t\r\n\t\t\tfor (let errorName in errData) {\r\n\t\t\t\t//console.log(errorName)\r\n\t\t\t\t\r\n\t\t\t\tif (errorName === \"password\") {\r\n\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallbackFailure(errCodes, errDatas)\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Logged In Password Changer!\r\nexport const APILoggedInPasswordChanger = (APIHost, authToken, callbackFunction, callbackFailure) => {\r\n\r\n}\r\n\r\n// Saving of the suggestion...\r\nexport const APISaveSuggestion = (APIHost, authToken, postingDate, targetDivision, content, editorBlock, callbackFunction, callbackFailure) => {\r\n\t\t\r\n\t//const randomID = Math.random().toString(16).substr(2, 8);\r\n\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\tconst data = {\r\n\t\treqDiv: targetDivision,\r\n\t\t\r\n\t\ttargetDivision: targetDivision,\r\n\t\tcreatedDate: postingDate.toJSON().split(\"T\")[0],\r\n\t\tcontent: content,\r\n\t\t\r\n\t\trichText: editorBlock,\r\n\t};\r\n\t\r\n\t//console.log(data)\r\n\t\r\n\taxios.post(APIHost +\"/saveNewSuggestion/\", data, config )\r\n\t.then( res => { \r\n\t\tcallbackFunction(res.data)\r\n\t})\r\n\t.catch( err => {\r\n\t\t// Change this depending on the error...?\r\n\t\tif (!(err === undefined)) {\r\n\t\t\tif (!(err.response === undefined)) {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tcallbackFailure()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n}\r\n\r\n// Save the journal data...\r\nexport const APISaveJournal = (APIHost, authToken, postingDate, content, editorBlock, callbackFunction, callbackFailure) => {\r\n\t\t\r\n\tconst randomID = Math.random().toString(16).substr(2, 8);\r\n\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\tconst data = {\r\n\t\tshorthand: 'made from the website: '+randomID,\r\n\t\t\r\n\t\t// Author is filled in based on your Token on the server side...\r\n\t\t// The timezone on the server is different.....\r\n\t\tforDate: postingDate.toJSON().split(\"T\")[0],\r\n\r\n\t\tcontent: content,\r\n\t\trichText: editorBlock,\r\n\t};\r\n\t\r\n\t//console.log(data)\r\n\t\r\n\taxios.post(APIHost +\"/saveUserJournal/\", data, config )\r\n\t.then( res => { \r\n\t\tcallbackFunction(res.data)\r\n\t})\r\n\t.catch( err => {\r\n\t\t// Change this depending on the error...?\r\n\t\tif (!(err === undefined)) {\r\n\t\t\tif (!(err.response === undefined)) {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tcallbackFailure()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n}\r\n\r\n// Get the dates for a specific user, defined in the auth token\r\n// I may have to redo this?\r\nexport const APIGetJournalDates = (APIHost, authToken, callbackFunction, callbackFailure) => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\taxios.get(APIHost +\"/getJournalDates\", config)\r\n\t.then( \r\n\t\tres => {\r\n\t\t\tconsole.log(\"Got Data!\")\r\n\t\t\tlet tempAIArray = []\r\n\t\t\tlet tempJoArray = []\r\n\t\t\tvar item = \"\"\r\n\t\t\tfor (item in res.data){\r\n\t\t\t\tconst newDate = new Date(res.data[item].forDate)\r\n\t\t\t\tconst checkDate = newDate.getFullYear()+\"-\"+newDate.getMonth()+\"-\"+(newDate.getDate()+1)\t\t\t\r\n\t\t\t\tif (res.data[item].hasAI) {\r\n\t\t\t\t\ttempAIArray.push( checkDate )\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttempJoArray.push( checkDate )\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcallbackFunction(tempJoArray, tempAIArray)\r\n\t})\r\n\t.catch( err => {\r\n\t\tif (!(err === undefined)) {\r\n\t\t\tif (!(err.response === undefined)) {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tcallbackFailure()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\r\n// Get the data for a speific date, where the user defined is in the token\r\nexport const APIGetJournalData = (APIHost, authToken, selectedDate, callbackFunction, callbackFailure) => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\tconsole.log(\"Requesting Date from Server\")\r\n\tconst dateReq = selectedDate.toJSON().split(\"T\")[0]\r\n\t\r\n\taxios.get(APIHost +\"/getUserJournal/?reqDate=\"+dateReq, config)\r\n\t.then( \r\n\t\tres => {\r\n\t\t\t// What if it is > 1?\r\n\t\t\tif (res.data.length > 0) {\r\n\t\t\t\tconsole.log(\"obtained a journal entry\")\r\n\t\t\t\t\r\n\t\t\t\tlet journalContent = res.data[0].content\r\n\t\t\t\t//let journalBlock = res.data[0].blockData\r\n\t\t\t\t\r\n\t\t\t\tlet AIData = {}\r\n\t\t\t\tif (res.data[0].hasAI) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tAIData = res.data[0].AIresult\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcallbackFunction(journalContent, AIData)\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tconsole.log(\"No entry for that day\")\r\n\t\t\t\t\r\n\t\t\t\tlet journalContent = \"\"\r\n\t\t\t\tlet AIData = {}\r\n\t\t\t\t\r\n\t\t\t\tcallbackFunction(journalContent, AIData)\r\n\t\t\t}\r\n\r\n\t})\r\n\t.catch( err => {\r\n\t\t\tif (!err.response) {\r\n\t\t\t\tconsole.log(\"Network Error!\")\r\n\t\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//let errData = err.response.data\r\n\t\t\t\tlet errCode = err.response.status\r\n\t\t\t\t\r\n\t\t\t\t/*let errCodes = []\r\n\t\t\t\tlet errDatas = []\r\n\t\t\t\t\r\n\t\t\t\tfor (let errorName in errData) {\r\n\t\t\t\t\t//console.log(errorName)\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (errorName === \"password\") {\r\n\t\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t\t\r\n\t\t\t\t// Currently I have this as still being Logout...\r\n\t\t\t\tif (errCode === 401) {\t\r\n\t\t\t\t\tcallbackFailure([401],[\"Unauthorized\"])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t});\r\n};\r\n\r\n// Get the company list under the user, defined in the token\r\nexport const APIGetUsersPermTree = (APIHost, authToken, reqPerms, callbackFunction, callbackFailure) => {\r\n\t\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\r\n\taxios.get(APIHost +\"/getUsersPermissionTree?reqPerms=\"+reqPerms, config)\r\n\t.then( \tres => {\r\n\t\t\t\r\n\t\t\t// Normal behaviour\r\n\t\t\tconsole.log(\"Got the tree of companies\")\r\n\t\t\t//console.log(reqPerms)\r\n\t\t\t\r\n\t\t\t// Now we convert this data into a tree... Tho why not just use it as is?\r\n\t\t\t//console.log(res.data)\r\n\t\t\t\r\n\t\t\tcallbackFunction(res.data[\"tree\"], res.data[\"nameList\"], res.data[\"idList\"])\r\n\t\t})\r\n\t\t.catch( err => {\r\n\t\t\tif (!err.response) {\r\n\t\t\t\tconsole.log(\"Network Error!\")\r\n\t\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//let errData = err.response.data\r\n\t\t\t\tlet errCode = err.response.status\r\n\t\t\t\t\r\n\t\t\t\t/*let errCodes = []\r\n\t\t\t\tlet errDatas = []\r\n\t\t\t\t\r\n\t\t\t\tfor (let errorName in errData) {\r\n\t\t\t\t\t//console.log(errorName)\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (errorName === \"password\") {\r\n\t\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t\t\r\n\t\t\t\t// Currently I have this as still being Logout...\r\n\t\t\t\tif (errCode === 401) {\t\r\n\t\t\t\t\tcallbackFailure([401],[\"Unauthorized\"])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n}\r\n\r\nexport const APIGetCompanyValidDates = (APIHost, authToken, divisionID, callbackFunction, callbackFailure) => {\r\n\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\taxios.get(APIHost + \"/getCompanyWeekDates?reqDiv=\"+divisionID, config)\r\n\t.then( \tres => {\r\n\t\t\tlet tempSumArray = []\r\n\t\t\t\r\n\t\t\tconsole.log(\"Got Valid Dates!\")\r\n\t\t\t//console.log(res.data)\r\n\t\t\tvar item = \"\"\r\n\t\t\tfor (item in res.data){\r\n\t\t\t\t\r\n\t\t\t\t// THESE DATES HAVE THE WRONG TIMEZONE COMING IN, SO THE RESULTING DAY CAN BE WRONG!!!!\r\n\t\t\t\t// CHANGE THIS!!!\r\n\t\t\t\t\r\n\t\t\t\t// This is definetly too much data.... So I will have to seperate these into single day stuff...\r\n\t\t\t\tconst newDate = new Date(res.data[item].forDate)\r\n\t\t\t\t// Move to next dat btw\r\n\t\t\t\tnewDate.setDate(newDate.getDate()+1)\r\n\t\t\t\t// This is the \"Anchor Date\"\r\n\t\t\t\tif (res.data[item].hasMon) {\r\n\t\t\t\t\ttempSumArray.push( newDate.getFullYear()+\"-\"+newDate.getMonth()+\"-\"+(newDate.getDate()) )\r\n\t\t\t\t}\r\n\t\t\t\tnewDate.setDate(newDate.getDate()+1)\r\n\t\t\t\tif (res.data[item].hasTue) {\r\n\t\t\t\t\ttempSumArray.push( newDate.getFullYear()+\"-\"+newDate.getMonth()+\"-\"+(newDate.getDate()) )\r\n\t\t\t\t}\r\n\t\t\t\tnewDate.setDate(newDate.getDate()+1)\r\n\t\t\t\tif (res.data[item].hasWed) {\r\n\t\t\t\t\ttempSumArray.push( newDate.getFullYear()+\"-\"+newDate.getMonth()+\"-\"+(newDate.getDate()) )\r\n\t\t\t\t}\r\n\t\t\t\tnewDate.setDate(newDate.getDate()+1)\r\n\t\t\t\tif (res.data[item].hasThu) {\r\n\t\t\t\t\ttempSumArray.push( newDate.getFullYear()+\"-\"+newDate.getMonth()+\"-\"+(newDate.getDate()) )\r\n\t\t\t\t}\r\n\t\t\t\tnewDate.setDate(newDate.getDate()+1)\r\n\t\t\t\tif (res.data[item].hasFri) {\r\n\t\t\t\t\ttempSumArray.push( newDate.getFullYear()+\"-\"+newDate.getMonth()+\"-\"+(newDate.getDate()) )\r\n\t\t\t\t}\r\n\t\t\t\tnewDate.setDate(newDate.getDate()+1)\r\n\t\t\t\tif (res.data[item].hasSat) {\r\n\t\t\t\t\ttempSumArray.push( newDate.getFullYear()+\"-\"+newDate.getMonth()+\"-\"+(newDate.getDate()) )\r\n\t\t\t\t}\r\n\t\t\t\tnewDate.setDate(newDate.getDate()+1)\r\n\t\t\t\tif (res.data[item].hasSun) {\r\n\t\t\t\t\ttempSumArray.push( newDate.getFullYear()+\"-\"+newDate.getMonth()+\"-\"+(newDate.getDate()) )\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallbackFunction(tempSumArray)\r\n\t})\r\n\t.catch( err => {\r\n\t\tif (!(err === undefined)) {\r\n\t\t\tif (!(err.response === undefined)) {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\t// Force the logout stuff\r\n\t\t\t\t\tcallbackFailure()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Get a specific company's summary for the list...\r\nexport const APIGetCompanySummary = (APIHost, authToken, divisionID, selectedDate, callbackFunction, callbackFailure) => {\r\n\t\r\n\tlet todayWeekday = (selectedDate.getDay()-1)\r\n\tif (todayWeekday < 0) {\r\n\t\ttodayWeekday = 6\r\n\t}\r\n\t\r\n\tlet copiedDate = new Date(selectedDate.getTime());\r\n\r\n\tcopiedDate.setDate(copiedDate.getDate()-(todayWeekday))\r\n\tconst dateReq = copiedDate.toJSON().split(\"T\")[0]\r\n\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\taxios.get(APIHost +\"/getCompanyWeekSummary/?reqDate=\"+dateReq+\"&reqDiv=\"+divisionID, config)\r\n\t.then( \r\n\t\tres => {\r\n\t\t\t// What if it is > 1?\r\n\t\t\tif (res.data.length > 0) {\r\n\t\t\t\tconsole.log(\"obtained a company summary\")\r\n\t\t\t\t\r\n\t\t\t\t// Check for matching stuff on this end?\r\n\t\t\t\t//console.log(res.data[0].summaryResult)\r\n\t\t\t\t\r\n\t\t\t\tlet incomingDict = {\r\n\t\t\t\t\tmon:res.data[0].monResult,\r\n\t\t\t\t\ttue:res.data[0].tueResult,\r\n\t\t\t\t\twed:res.data[0].wedResult,\r\n\t\t\t\t\tthu:res.data[0].thuResult,\r\n\t\t\t\t\tfri:res.data[0].friResult,\r\n\t\t\t\t\tsat:res.data[0].satResult,\r\n\t\t\t\t\tsun:res.data[0].sunResult,\r\n\t\t\t\t\tallDay:res.data[0].summaryResult,\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcallbackFunction(incomingDict, dateReq)\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tcallbackFunction({}, dateReq)\r\n\t\t\t}\r\n\t})\r\n\t.catch( err => {\r\n\t\tif (!(err === undefined)) {\r\n\t\t\tif (!(err.response === undefined)) {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\t// Force the logout stuff\r\n\t\t\t\t\tcallbackFailure()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport const APIGetServerEHIData = (APIHost, authToken, targetCompany, callbackFunction, callbackFailure) => {\r\n\t\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\taxios.get(APIHost +\"/getCompanyEHI?reqDiv=\"+targetCompany, config)\r\n\t.then( \tres => {\r\n\t\t// Should respond with a 1 length thing\r\n\t\t//console.log(res)\r\n\t\tif (res.data.length > 0) {\r\n\t\t\t// Normal behaviour\r\n\t\t\tconsole.log(\"Got the company data!\")\r\n\t\t\t\r\n\t\t\tlet labelsDays = []\r\n\t\t\tlet dataDays = []\r\n\t\t\t\r\n\t\t\tlet labelsWeeks = []\r\n\t\t\tlet dataWeeks = []\r\n\t\t\t\r\n\t\t\tlet index;\r\n\t\t\tfor (index in res.data[0].EHIstorage[\"days\"]) {\r\n\t\t\t\t\r\n\t\t\t\tlabelsDays.push(index)\r\n\t\t\t\tdataDays.push(res.data[0].EHIstorage[\"days\"][index])\r\n\t\t\t}\r\n\t\t\tfor (index in res.data[0].EHIstorage[\"weeks\"]) {\r\n\t\t\t\tlabelsWeeks.push(index)\r\n\t\t\t\tdataWeeks.push(res.data[0].EHIstorage[\"days\"][index])\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallbackFunction(labelsDays, dataDays, labelsWeeks, dataWeeks)\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// This should not trigger\r\n\t\t}\r\n\t})\r\n\t.catch( err => {\r\n\t\tif (!(err === undefined)) {\r\n\t\t\tif (!(err.response === undefined)) {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\t// Force the logout stuff\r\n\t\t\t\t\tcallbackFailure()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport const APIGetSuggestionDates = (APIHost, authToken, targetCompany, callbackFunction, callbackFailure) => {\r\n\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\taxios.get(APIHost +\"/getCompanySuggestionDates?reqDiv=\"+targetCompany, config)\r\n\t.then( \tres => {\r\n\t\t// Should respond with a 1 length thing\r\n\t\t//console.log(res.data)\r\n\t\tif (res.data.length > 0) {\r\n\t\t\t// Normal behaviour\r\n\t\t\t//console.log(\"Got the suggestion dates!\")\r\n\t\t\t//console.log(res.data)\r\n\t\t\tlet datesData = []\r\n\t\t\t\r\n\t\t\tlet item = \"\"\r\n\t\t\tfor (item in res.data) {\r\n\t\t\t\t\r\n\t\t\t\tconst newDate = new Date(res.data[item])\r\n\t\t\t\tconst checkDate = newDate.getFullYear()+\"-\"+newDate.getMonth()+\"-\"+(newDate.getDate()+1)\t\t\r\n\t\t\t\t//console.log( checkDate )\r\n\t\t\t\t\t\r\n\t\t\t\tdatesData.push(checkDate)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//console.log(datesData)\r\n\t\t\tcallbackFunction(datesData)\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// This should not trigger\r\n\t\t}\r\n\t})\r\n\t.catch( err => {\r\n\t\tif (!(err === undefined)) {\r\n\t\t\tif (!(err.response === undefined)) {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\t// Force the logout stuff\r\n\t\t\t\t\tcallbackFailure()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport const APIGetSuggestionData = (APIHost, authToken, targetCompany, targetDate, callbackFunction, callbackFailure) => {\r\n\t\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\tconst dateReq = targetDate.toJSON().split(\"T\")[0]\r\n\t\r\n\taxios.get(APIHost +\"/getCompanySuggestionData?reqDiv=\"+targetCompany+\"&reqDate=\"+dateReq, config)\r\n\t.then( \tres => {\r\n\t\t// Should respond with a 1 length thing\r\n\t\t//console.log(res.data)\r\n\t\t\r\n\t\tconsole.log(\"Got the suggestion data!\")\r\n\t\tcallbackFunction(targetDate, res.data)\r\n\t})\r\n\t.catch( err => {\r\n\t\tif (!(err === undefined)) {\r\n\t\t\tif (!(err.response === undefined)) {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\t// Force the logout stuff\r\n\t\t\t\t\tcallbackFailure()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// CREATING a new invite from the Company Settings Page\r\nexport const APIDivisionInvitesCreate = (APIHost, authToken, targetDivision, targetInvite, targetAction, callbackFunction, callbackFailure) => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\tconst data = {\r\n\t\treqDiv:targetDivision,\r\n\t\ttargetUser:targetInvite,\r\n\t\ttargetAction:targetAction,\r\n\t}\r\n\t\r\n\taxios.post(APIHost +\"/createDivisionInvite/\", data, config)\r\n\t.then( \tres => {\r\n\t\t//console.log(res)\r\n\t\t// I am clearly not thinking these through correctly...\r\n\t\t//let succCode = res.status\r\n\t\tlet succData = res.data\r\n\r\n\t\tcallbackFunction( succData )\r\n\t})\r\n\t.catch( err => {\r\n\t\t// Find out what error it was, then change the sign in page accordingly by the by...\r\n\t\tconsole.log(err)\r\n\t\tif (!err.response) {\r\n\t\t\t// network Error\r\n\t\t\t//console.log(\"Network Error!\")\r\n\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// proper response... Still not liking this....\r\n\t\t\t//let errCode = err.response.status\r\n\t\t\tlet errData = err.response.data\r\n\t\t\t\r\n\t\t\tlet errCodes = []\r\n\t\t\tlet errDatas = []\r\n\t\t\t\r\n\t\t\tfor (let errorName in errData) {\r\n\t\t\t\tif (errorName === \"???\") {\r\n\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallbackFailure( errCodes, errDatas )\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// GETTING a divisions Invites, NOT THE HEAD ONE!\r\nexport const APIDivisionInvitesSet = (APIHost, authToken, targetDivision, targetInvite, targetAction, callbackFunction, callbackFailure) => {\r\n\t\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\tconst data = {\r\n\t\treqDiv:targetDivision,\r\n\t\ttargetInvite:targetInvite,\r\n\t\ttargetAction:targetAction,\r\n\t}\r\n\t\r\n\taxios.put(APIHost +\"/setDivisionInvite/\", data, config)\r\n\t.then( \tres => {\r\n\t\t//console.log(res)\r\n\t\t// I am clearly not thinking these through correctly...\r\n\t\t//let succCode = res.status\r\n\t\tlet succData = res.data\r\n\r\n\t\tcallbackFunction( succData )\r\n\t})\r\n\t.catch( err => {\r\n\t\t// Find out what error it was, then change the sign in page accordingly by the by...\r\n\t\tconsole.log(err)\r\n\t\tif (!err.response) {\r\n\t\t\t// network Error\r\n\t\t\t//console.log(\"Network Error!\")\r\n\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// proper response... Still not liking this....\r\n\t\t\t//let errCode = err.response.status\r\n\t\t\tlet errData = err.response.data\r\n\t\t\t\r\n\t\t\tlet errCodes = []\r\n\t\t\tlet errDatas = []\r\n\t\t\t\r\n\t\t\tfor (let errorName in errData) {\r\n\t\t\t\tif (errorName === \"???\") {\r\n\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallbackFailure( errCodes, errDatas )\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// GETTING a divisions Invites, NOT THE HEAD ONE!\r\nexport const APIDivisionInvitesGet = (APIHost, authToken, targetCompany, callbackFunction, callbackFailure) => {\r\n\t\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\taxios.get(APIHost +\"/getDivisionInvites?reqDiv=\"+targetCompany, config)\r\n\t.then( \tres => {\r\n\t\t//console.log(res)\r\n\t\t// I am clearly not thinking these through correctly...\r\n\t\t//let succCode = res.status\r\n\t\tlet succData = res.data\r\n\r\n\t\tcallbackFunction(succData)\r\n\t})\r\n\t.catch( err => {\r\n\t\t// Find out what error it was, then change the sign in page accordingly by the by...\r\n\t\tconsole.log(err)\r\n\t\tif (!err.response) {\r\n\t\t\t// network Error\r\n\t\t\t//console.log(\"Network Error!\")\r\n\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// proper response... Still not liking this....\r\n\t\t\t//let errCode = err.response.status\r\n\t\t\tlet errData = err.response.data\r\n\t\t\t\r\n\t\t\tlet errCodes = []\r\n\t\t\tlet errDatas = []\r\n\t\t\t\r\n\t\t\tfor (let errorName in errData) {\r\n\t\t\t\tif (errorName === \"???\") {\r\n\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallbackFailure( errCodes, errDatas )\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// GETTING a divisions profile, NOT THE HEAD ONE!\r\nexport const APIDivisionSettingsGet = (APIHost, authToken, targetCompany, callbackFunction, callbackFailure) => {\r\n\t\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\taxios.get(APIHost +\"/getDivisionData?reqDiv=\"+targetCompany, config)\r\n\t.then( \tres => {\r\n\t\t//console.log(res)\r\n\t\t// I am clearly not thinking these through correctly...\r\n\t\t//let succCode = res.status\r\n\t\tlet succData = res.data[0]\r\n\r\n\t\tcallbackFunction(succData)\r\n\t})\r\n\t.catch( err => {\r\n\t\t// Find out what error it was, then change the sign in page accordingly by the by...\r\n\t\tconsole.log(err)\r\n\t\tif (!err.response) {\r\n\t\t\t// network Error\r\n\t\t\t//console.log(\"Network Error!\")\r\n\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// proper response... Still not liking this....\r\n\t\t\t//let errCode = err.response.status\r\n\t\t\tlet errData = err.response.data\r\n\t\t\t\r\n\t\t\tlet errCodes = []\r\n\t\t\tlet errDatas = []\r\n\t\t\t\r\n\t\t\tfor (let errorName in errData) {\r\n\t\t\t\tif (errorName === \"???\") {\r\n\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallbackFailure( errCodes, errDatas )\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// SAVING an edited division's profile, NOT THE HEAD ONE! THAT IS LATER!\r\nexport const APIDivisionSettingsEdit = (APIHost, authToken, dataSet, callbackFunction, callbackFailure) => {\r\n\t\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\t//const data = {\r\n\t\t\r\n\t//};\r\n\t\r\n\tconst data = dataSet\r\n\t\r\n\taxios.put(APIHost +\"/setDivisionData/\", data, config)\r\n\t.then( \tres => {\r\n\t\t\r\n\t\t// I am clearly not thinking these through correctly...\r\n\t\t//let succCode = res.status\r\n\t\tlet succData = res.data\r\n\r\n\t\tcallbackFunction(succData)\r\n\t})\r\n\t.catch( err => {\r\n\t\t// Find out what error it was, then change the sign in page accordingly by the by...\r\n\t\tif (!err.response) {\r\n\t\t\t// network Error\r\n\t\t\t//console.log(\"Network Error!\")\r\n\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// proper response... Still not liking this....\r\n\t\t\t//let errCode = err.response.status\r\n\t\t\tlet errData = err.response.data\r\n\t\t\tconsole.log(errData)\r\n\t\t\t\r\n\t\t\tlet errCodes = []\r\n\t\t\tlet errDatas = []\r\n\t\t\t\r\n\t\t\t/*for (let errorName in errData) {\r\n\t\t\t\tif (errorName === \"???\") {\r\n\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\t\r\n\t\t\tcallbackFailure( errCodes, errDatas )\r\n\t\t}\r\n\t});\r\n\t\r\n}\r\n\r\nexport const APIUserSettingsEdit = (APIHost, authToken, dataSet, callbackFunction, callbackFailure) => {\r\n\t\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\t//const data = {\r\n\t\t\r\n\t//};\r\n\t\r\n\tconst data = dataSet\r\n\t\r\n\taxios.put(APIHost +\"/setUserProfileData/\", data, config)\r\n\t.then( \tres => {\r\n\t\t\r\n\t\t// I am clearly not thinking these through correctly...\r\n\t\t//let succCode = res.status\r\n\t\tlet succData = res.data\r\n\r\n\t\tcallbackFunction(succData)\r\n\t})\r\n\t.catch( err => {\r\n\t\t// Find out what error it was, then change the sign in page accordingly by the by...\r\n\t\tif (!err.response) {\r\n\t\t\t// network Error\r\n\t\t\t//console.log(\"Network Error!\")\r\n\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// proper response... Still not liking this....\r\n\t\t\t//let errCode = err.response.status\r\n\t\t\tlet errData = err.response.data\r\n\t\t\tconsole.log(errData)\r\n\t\t\t\r\n\t\t\tlet errCodes = []\r\n\t\t\tlet errDatas = []\r\n\t\t\t\r\n\t\t\t/*for (let errorName in errData) {\r\n\t\t\t\tif (errorName === \"???\") {\r\n\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\t\r\n\t\t\tcallbackFailure( errCodes, errDatas )\r\n\t\t}\r\n\t});\r\n\t\r\n}\r\n\r\n// Sign up for the company's governed list that matches this code...\r\nexport const APIUserInviteCode = (APIHost, authToken, inviteCode, callbackFunction, callbackFailure) => {\r\n\t\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\t//let data = {\r\n\t//\t\r\n\t//}\r\n\r\n\taxios.get(APIHost +\"/useDivisionInvite?joinCode=\"+inviteCode, config)\r\n\t.then( \tres => {\r\n\t\t// Should respond with a 1 length thing\r\n\t\t//let succCode = res.response.status\r\n\t\tlet succData = res.response.data\r\n\t\t//console.log(res.data)\r\n\r\n\t\tcallbackFunction( succData )\r\n\t})\r\n\t.catch( err => {\r\n\t\t// Find out what error it was, then change the sign in page accordingly by the by...\r\n\t\t//console.log(err)\r\n\t\tif (!err.response) {\r\n\t\t\t// network Error\r\n\t\t\t//console.log(\"Network Error!\")\r\n\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// proper response\r\n\t\t\t//let errCode = err.response.status\r\n\t\t\tlet errData = err.response.data\r\n\t\t\t\r\n\t\t\tlet errCodes = []\r\n\t\t\tlet errDatas = []\r\n\t\t\t\r\n\t\t\tfor (let errorName in errData) {\r\n\t\t\t\t//console.log(errorName)\r\n\t\t\t\t\r\n\t\t\t\tif (errorName === \"dup\") {\r\n\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse if (errorName === \"token\") {\r\n\t\t\t\t\terrCodes.push(2)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse if (errorName === \"invite\") {\r\n\t\t\t\t\terrCodes.push(3)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallbackFailure( errCodes, errDatas )\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Get the invites!\r\nexport const APIUserInvitesGet = (APIHost, authToken, callbackFunction, callbackFailure) => {\r\n\t\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\r\n\taxios.get(APIHost +\"/getUsersInvites\", config)\r\n\t.then( \tres => {\r\n\t\t//console.log(res)\r\n\t\t// I am clearly not thinking these through correctly...\r\n\t\t//let succCode = res.status\r\n\t\tlet succData = res.data\r\n\r\n\t\tcallbackFunction(succData)\r\n\t})\r\n\t.catch( err => {\r\n\t\t// Find out what error it was, then change the sign in page accordingly by the by...\r\n\t\tconsole.log(err)\r\n\t\tif (!err.response) {\r\n\t\t\t// network Error\r\n\t\t\t//console.log(\"Network Error!\")\r\n\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// proper response... Still not liking this....\r\n\t\t\t//let errCode = err.response.status\r\n\t\t\tlet errData = err.response.data\r\n\t\t\t\r\n\t\t\tlet errCodes = []\r\n\t\t\tlet errDatas = []\r\n\t\t\t\r\n\t\t\tfor (let errorName in errData) {\r\n\t\t\t\tif (errorName === \"???\") {\r\n\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallbackFailure( errCodes, errDatas )\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Set the invites!\r\nexport const APIUserInvitesSet = (APIHost, authToken, targetInvite, targetAction, callbackFunction, callbackFailure) => {\r\n\t\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\tconst data = {\r\n\t\ttargetInvite:targetInvite,\r\n\t\ttargetAction:targetAction,\r\n\t}\r\n\t\r\n\taxios.put(APIHost +\"/setUserInvite/\", data, config)\r\n\t.then( \tres => {\r\n\t\t// I am clearly not thinking these through correctly...\r\n\t\t//let succCode = res.status\r\n\t\tlet succData = res.data\r\n\r\n\t\tcallbackFunction( succData )\r\n\t})\r\n\t.catch( err => {\r\n\t\t// Find out what error it was, then change the sign in page accordingly by the by...\r\n\t\tconsole.log(err)\r\n\t\tif (!err.response) {\r\n\t\t\t// network Error\r\n\t\t\t//console.log(\"Network Error!\")\r\n\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// proper response... Still not liking this....\r\n\t\t\t//let errCode = err.response.status\r\n\t\t\tlet errData = err.response.data\r\n\t\t\t\r\n\t\t\tlet errCodes = []\r\n\t\t\tlet errDatas = []\r\n\t\t\t\r\n\t\t\tfor (let errorName in errData) {\r\n\t\t\t\tif (errorName === \"???\") {\r\n\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallbackFailure( errCodes, errDatas )\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport const APIChangeUserEmail = (APIHost, authToken, newEmail, callbackFunction, callbackFailure) => {\r\n\t\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\t// Verify data before we do this?\r\n\tconst data = {\r\n\t\temail:newEmail,\r\n\t}\r\n\t\r\n\taxios.put(APIHost +\"/updateUserEmail/\", data, config)\r\n\t.then( \tres => {\r\n\t\t//let succCode = res.status\r\n\t\tlet succData = res.data\r\n\r\n\t\tcallbackFunction( succData )\r\n\t})\r\n\t.catch( err => {\r\n\t\t// Find out what error it was, then change the sign in page accordingly by the by...\r\n\t\tconsole.log(err)\r\n\t\tif (!err.response) {\r\n\t\t\t// network Error\r\n\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// proper response... Still not liking this....\r\n\t\t\tlet errCode = err.response.status\r\n\t\t\tif (errCode === 500) {\r\n\t\t\t\tcallbackFailure( [10], [\"Server Error\"] )\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet errData = err.response.data\r\n\t\t\t\r\n\t\t\tlet errCodes = []\r\n\t\t\tlet errDatas = []\r\n\t\t\t\r\n\t\t\tfor (let errorName in errData) {\r\n\t\t\t\tif (errorName === \"???\") {\r\n\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallbackFailure( errCodes, errDatas )\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport const APIChangeUserName = (APIHost, authToken, newFirst, newLast, callbackFunction, callbackFailure) => {\r\n\t\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\t// Verify data before we do this?\r\n\tconst data = {\r\n\t\tfirst_name:newFirst,\r\n\t\tlast_name:newLast,\r\n\t}\r\n\t\r\n\taxios.put(APIHost +\"/updateUserName/\", data, config)\r\n\t.then( \tres => {\r\n\t\t//let succCode = res.status\r\n\t\tlet succData = res.data\r\n\r\n\t\tcallbackFunction( succData )\r\n\t})\r\n\t.catch( err => {\r\n\t\t// Find out what error it was, then change the sign in page accordingly by the by...\r\n\t\tconsole.log(err)\r\n\t\tif (!err.response) {\r\n\t\t\t// network Error\r\n\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// proper response... Still not liking this....\r\n\t\t\tlet errCode = err.response.status\r\n\t\t\tif (errCode === 500) {\r\n\t\t\t\tcallbackFailure( [10], [\"Server Error\"] )\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet errData = err.response.data\r\n\t\t\t\r\n\t\t\tlet errCodes = []\r\n\t\t\tlet errDatas = []\r\n\t\t\t\r\n\t\t\tfor (let errorName in errData) {\r\n\t\t\t\tif (errorName === \"???\") {\r\n\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallbackFailure( errCodes, errDatas )\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport const APIChangeUserPassword = (APIHost, authToken, newPass, oldPass, oldPass2, callbackFunction, callbackFailure) => {\r\n\t\t\r\n\tconst config = {\r\n\t\theaders: { Authorization: `JWT ${authToken}` }\r\n\t};\r\n\t\r\n\t// Verify data before we do this?\r\n\tconst data = {\r\n\t\toldPassword:newPass,\r\n\t\tpassword:oldPass,\r\n\t\tpassword2:oldPass2,\r\n\t}\r\n\t\r\n\taxios.put(APIHost +\"/updateUserPassword/\", data, config)\r\n\t.then( \tres => {\r\n\t\t//let succCode = res.status\r\n\t\tlet succData = res.data\r\n\r\n\t\tcallbackFunction( succData )\r\n\t})\r\n\t.catch( err => {\r\n\t\t// Find out what error it was, then change the sign in page accordingly by the by...\r\n\t\tconsole.log(err)\r\n\t\tif (!err.response) {\r\n\t\t\t// network Error\r\n\t\t\tcallbackFailure([0],[\"Network Error\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// proper response... Still not liking this....\r\n\t\t\tlet errCode = err.response.status\r\n\t\t\tif (errCode === 500) {\r\n\t\t\t\tcallbackFailure( [10], [\"Server Error\"] )\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet errData = err.response.data\r\n\t\t\t\r\n\t\t\tlet errCodes = []\r\n\t\t\tlet errDatas = []\r\n\t\t\t\r\n\t\t\tfor (let errorName in errData) {\r\n\t\t\t\tif (errorName === \"???\") {\r\n\t\t\t\t\terrCodes.push(1)\r\n\t\t\t\t\terrDatas.push(errData[errorName])\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terrCodes.push(10)\r\n\t\t\t\t\terrDatas.push(\"Unknown Error\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallbackFailure( errCodes, errDatas )\r\n\t\t}\r\n\t});\r\n}","// First version of a Line graph with Arbitrary everything...\r\nexport const arbitraryLineData = (inputXAxis, inputDataList) => {\r\n\t\r\n\tlet builtData = []\r\n\tlet dataIndex = 0\r\n\tfor (dataIndex in inputDataList) {\r\n\t\tbuiltData.push({\r\n\t\t\tlabel: inputDataList[dataIndex].label,\r\n\t\t\tdata: inputDataList[dataIndex].data,\r\n\t\t\tfill: false,\r\n\t\t\tbackgroundColor: 'rgb(99, 255, 132)',\r\n\t\t\tborderColor: 'rgba(255, 132, 99, 0.2)',\r\n\t\t})\r\n\t}\r\n\t\r\n\tconst data = {\r\n\t\tlabels: inputXAxis,\r\n\t\tdatasets: builtData,\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const arbitraryLineOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\n// Initial tests show good results, So I should merge these into as few functions as I can....\r\n// Right now its too many...\r\nexport const getRadarEmotionData = (inputData) => {\r\n\t\r\n\tconst data = {\r\n\t\tlabels: ['Joy', 'Anger', 'Sadness', 'Disgust', 'Fear'],\r\n\t\t\tdatasets: [ \r\n\t\t\t{\r\n\t\t\t\tlabel: 'Confidence Levels',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tbackgroundColor: 'rgba(99, 255, 132, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(99, 255, 132, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getRadarEmotionOptions = () => {\r\n\tconst options = {\r\n\t  scale: {\r\n\t\tticks: { \r\n\t\t\tbeginAtZero: true,\r\n\t\t\tsuggestedMin: 0,\r\n\t\t\tsuggestedMax: 1,\r\n\t\t},\r\n\t  },\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getSentimentData = (inputData) => {\r\n\tconst data = {\r\n\tlabels: ['Positive', 'Negative'],\r\n\tdatasets: [\r\n\t\t\t{\r\n\t\t\tlabel: ['Sentiment'], \r\n\t\t\tdata: inputData,\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(99, 255, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgba(99, 255, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getSentimentOptions = () => {\r\n\tconst options = {\r\n\t\tcutoutPercentage: 50,\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getConceptsData = (inputData, labels) => {\r\n\tconst data = {\r\n\tlabels: labels,\r\n\tdatasets: [\r\n\t\t\t{\r\n\t\t\tlabel: 'Concepts Relevance',\r\n\t\t\tdata: inputData,\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getConceptsOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tsuggestedMin: 0,\r\n\t\t\t\t\t\tsuggestedMax: 1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\n// This can probobly be merged with the other one... but it is here for perhaps a color shift?\r\nexport const getCategoryData = (inputData, labels) => {\r\n\tconst data = {\r\n\tlabels: labels,\r\n\tdatasets: [\r\n\t\t\t{\r\n\t\t\tlabel: 'Categories Score',\r\n\t\t\tdata: inputData,\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getCategoryOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tsuggestedMin: 0,\r\n\t\t\t\t\t\tsuggestedMax: 1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\n// Now we can test to see how this would actually look.\r\nexport const testMaxMin = (inputMax, inputAve, inputMin) => {\r\n\tconst data = {\r\n\t\tlabels: ['Joy', 'Anger', 'Sadness', 'Disgust', 'Fear'],\r\n\t\t\tdatasets: [ \r\n\t\t\t{\r\n\t\t\t\tlabel: 'Max',\r\n\t\t\t\tdata: inputMax,\r\n\t\t\t\tbackgroundColor: 'rgba(99, 255, 132, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(99, 255, 132, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Ave',\r\n\t\t\t\tdata: inputAve,\r\n\t\t\t\tbackgroundColor: 'rgba(99, 132, 255, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(99, 132, 255, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Min',\r\n\t\t\t\tdata: inputMin,\r\n\t\t\t\tbackgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(255, 99, 132, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\n// How can I make this not terrible back here?\r\nexport const testBarMulti = (inputData) => {\r\n\tconst data = {\r\n\tlabels: ['Joy', 'Anger', 'Sadness', 'Disgust', 'Fear'],\r\n\tdatasets: [\r\n\t\t\t{\r\n\t\t\tlabel: '# Above Threshold',\r\n\t\t\tdata: inputData,\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\nexport const testBarMultiOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tsuggestedMin: 0,\r\n\t\t\t\t\t\tsuggestedMax: 1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const stackedBarData = (inputData1, inputData2, inputData3) => {\r\n\tconst data = {\r\n\t\tlabels: ['Value'],\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Minimum',\r\n\t\t\t\tdata: inputData1,\r\n\t\t\t\tbackgroundColor: 'rgb(255, 99, 132)',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Average',\r\n\t\t\t\tdata: inputData2,\r\n\t\t\t\tbackgroundColor: 'rgb(54, 162, 235)',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Maximum',\r\n\t\t\t\tdata: inputData3,\r\n\t\t\t\tbackgroundColor: 'rgb(75, 192, 192)',\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\nexport const stackedBarOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\t//stacked: true,\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tsuggestedMin: -1,\r\n\t\t\t\t\t\tsuggestedMax: 1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\txAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\t//stacked: true,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const stacked1BarData1Data = (inputData) => {\r\n\tconst data = {\r\n\t\tlabels: ['Value'],\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Value',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tbackgroundColor: 'rgb(54, 162, 235)',\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const stackedBarData2Test = (inputData1, inputData2, inputData3) => {\r\n\tconst data = {\r\n\t\tlabels: ['Relevance', 'Sentiment'],\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Minimum',\r\n\t\t\t\tdata: inputData1,\r\n\t\t\t\tbackgroundColor: 'rgb(255, 99, 132)',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Average',\r\n\t\t\t\tdata: inputData2,\r\n\t\t\t\tbackgroundColor: 'rgb(54, 162, 235)',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Maximum',\r\n\t\t\t\tdata: inputData3,\r\n\t\t\t\tbackgroundColor: 'rgb(75, 192, 192)',\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const stacked2BarData1Data = (inputData) => {\r\n\tconst data = {\r\n\t\tlabels: ['Relevance', 'Sentiment'],\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Value',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tbackgroundColor: 'rgb(54, 162, 235)',\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const stackedBarData3Test = (inputData1, inputData2, inputData3) => {\r\n\tconst data = {\r\n\t\tlabels: ['Confidence', 'Relevance', 'Sentiment'],\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Minimum',\r\n\t\t\t\tdata: inputData1,\r\n\t\t\t\tbackgroundColor: 'rgb(255, 99, 132)',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Average',\r\n\t\t\t\tdata: inputData2,\r\n\t\t\t\tbackgroundColor: 'rgb(54, 162, 235)',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Maximum',\r\n\t\t\t\tdata: inputData3,\r\n\t\t\t\tbackgroundColor: 'rgb(75, 192, 192)',\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const stacked3BarData1Data = (inputData) => {\r\n\tconst data = {\r\n\t\tlabels: ['Confidence', 'Relevance', 'Sentiment'],\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Value',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tbackgroundColor: 'rgb(54, 162, 235)',\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\n\r\nexport const sentimentBarData = (inputData) => {\r\n\tconst data = {\r\n\t\tlabels: ['Positive', 'Negative'],\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\tlabel: '# Above Threshold',\r\n\t\t\tdata: inputData,\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\nexport const sentimentBarOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tsuggestedMin: 0,\r\n\t\t\t\t\t\tsuggestedMax: 1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\n// -------------------------------This is where my template stuff is ---------------------------------------------------------------\r\nexport const getDoughData = (inputData) => {\r\n\tconst data = {\r\n\t\tlabels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\t\tborderColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getDoughOptions = () => {\r\n\tconst options = {\r\n\t\tcutoutPercentage: 50,\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getRadarData = (inputData) => {\r\n\tconst data = {\r\n\t\tlabels: ['Thing 1', 'Thing 2', 'Thing 3', 'Thing 4', 'Thing 5', 'Thing 6'],\r\n\t\t\tdatasets: [ \r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tbackgroundColor: 'rgba(99, 255, 132, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(99, 255, 132, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getRadarOptions = () => {\r\n\tconst options = {\r\n\t  scale: {\r\n\t\tticks: { beginAtZero: true },\r\n\t  },\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getLineData = (inputData, inputData2) => {\r\n\tconst data = {\r\n\t\tlabels: ['Thing 1', 'Thing 2', 'Thing 3', 'Thing 4', 'Thing 5', 'Thing 6'],\r\n\t\t\tdatasets: [ \r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tfill: false,\r\n\t\t\t\tbackgroundColor: 'rgb(99, 255, 132)',\r\n\t\t\t\tborderColor: 'rgba(99, 255, 132, 0.2)',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes2',\r\n\t\t\t\tdata: inputData2,\r\n\t\t\t\tfill: false,\r\n\t\t\t\tbackgroundColor: 'rgb(255, 99, 132)',\r\n\t\t\t\tborderColor: 'rgba(255, 99, 132, 0.2)',\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getLineOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getBarData = (inputData) => {\r\n\tconst data = {\r\n\tlabels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n\tdatasets: [\r\n\t\t\t{\r\n\t\t\tlabel: '# of Votes',\r\n\t\t\tdata: inputData,\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getBarOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getScatterData = (inputData, inputData2) => {\r\n\tconst data = {\r\n\t\tlabels: ['Thing 1', 'Thing 2', 'Thing 3', 'Thing 4', 'Thing 5', 'Thing 6'],\r\n\t\t\tdatasets: [ \r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tbackgroundColor: 'rgba(99, 255, 132, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(99, 255, 132, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes2',\r\n\t\t\t\tdata: inputData2,\r\n\t\t\t\tbackgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(255, 99, 132, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getScatterOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t},\r\n\t\t\t},],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport { APISignIn } from \"../../utils\";\r\n\r\nclass signIn extends React.Component {\r\n\r\n\t// Lets test this out, before we move this over to the App js file\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          \r\n\t\t\t// Lets do a state machine for the sake of it...\r\n\t\t\t// 0 is \"No result given yet\"\r\n\t\t\t// 1+ would be error codes...\r\n\t\t\t// How can I change this screen as per this?\r\n\t\t\t// Eh, thats later...\r\n\t\t\tcurrentState: 0,\r\n\r\n\t\t\t// This can take in the response code?\r\n\t\t\t// Or Data?\r\n\t\t\tlastAttemptCode: -1,\r\n\t\t\tlastAttemptMessage: \"\",\r\n\t\t\t\r\n\t\t\t// Switches to display errors on the front page\r\n\t\t\t// Hm, this seems a little bad.... Can I mesh these together while still being readable?\r\n\t\t\tusernameError: false,\r\n\t\t\tpasswordError: false,\r\n\t\t\tisWrongError: false,\r\n\t\t\t\r\n\t\t\tnetworkError: false,\t\t\t\r\n\t\t\tmiscError: false,\r\n\t\t  \r\n\t\t\tusername: '',\r\n\t\t\t\r\n\t\t\t// This needs to be hashed as fast as possible...\r\n\t\t\t// But I will worry about security...\r\n\t\t\t// Just note that this is probobly a bad idea...\r\n\t\t\tpassword: '',\r\n\t\t\t\r\n\t\t\tremember: false,\r\n\t\t\t\r\n        };\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\t\r\n\t};\r\n\t\r\n\tuserFieldChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tusername: event.target.value,\r\n\t\t\r\n\t\t\t// Reset Errors\r\n\t\t\tusernameError: false,\r\n\t\t\tpasswordError: false,\r\n\t\t\tisWrongError: false,\r\n\t\t\tnetworkError: false,\t\t\t\r\n\t\t\tmiscError: false,\r\n\t\t})\r\n\t}\r\n\t\r\n\tpassFieldChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tpassword: event.target.value,\r\n\t\t\t\r\n\t\t\t// Reset Errors\r\n\t\t\tusernameError: false,\r\n\t\t\tpasswordError: false,\r\n\t\t\tisWrongError: false,\r\n\t\t\tnetworkError: false,\t\t\t\r\n\t\t\tmiscError: false,\r\n\t\t})\r\n\t}\r\n\t\r\n\tremFieldChange = (event) => {\r\n\r\n\t\tthis.setState({\r\n\t\t\tremember: !this.state.remember,\r\n\t\t\t\r\n\t\t\t// Reset Errors\r\n\t\t\tusernameError: false,\r\n\t\t\tpasswordError: false,\r\n\t\t\tisWrongError: false,\r\n\t\t\tnetworkError: false,\t\t\t\r\n\t\t\tmiscError: false,\r\n\t\t})\r\n\t}\r\n\t\r\n\thandleSubmitSuccess = (incomingToken) => {\r\n\t\t//console.log(this.state.remember)\r\n\t\tconst sanityCheck = this.props.loginSave( incomingToken, this.state.username, this.state.remember )\r\n\t\tif (sanityCheck) {\r\n\t\t\tconsole.log(\"Token registered\")\r\n\t\t\t\r\n\t\t\t// Change this to a dashboard lookin thing\r\n\t\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Token Set on OUR END Failed..?\")\r\n\t\t}\r\n\t}\r\n\t// Alrighty, so error code, lets simplify it to simply hardcoding the errors that can come out of the API call\r\n\t// Just in order, so:\r\n\t// 0 = Network Error\r\n\t// 1 = username blank Error\r\n\t// 2 = password blank Error\r\n\t// 3 = Credentials are wrong error\r\n\t// Other = Uncaught\r\n\thandleSubmitFailure = (errorCodes, errorDatas) => {\r\n\t\tconsole.log(\"Connection failed...\")\r\n\t\t\r\n\t\tlet errorSet = [false, false, false, false]\r\n\t\tlet extra = false\r\n\t\t\r\n\t\tfor (let index in errorCodes) {\r\n\t\t\t//console.log(errorCodes)\r\n\t\t\tif (errorCodes[index] > errorSet.length) {\r\n\t\t\t\textra = true\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\terrorSet[ errorCodes[index] ] = true\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({ \r\n\t\t\tnetworkError: errorSet[0],\t\r\n\t\t\tusernameError: errorSet[1],\r\n\t\t\tpasswordError: errorSet[2],\r\n\t\t\tisWrongError: errorSet[3],\r\n\t\t\t\t\t\r\n\t\t\tmiscError: extra,\r\n\t\t})\r\n\t}\r\n\thandleSubmit = event => {\r\n\t\t\r\n\t\tAPISignIn(this.props.APIHost, this.state.username, this.state.password, this.handleSubmitSuccess, this.handleSubmitFailure)\r\n\t\tevent.preventDefault();\t\t\r\n\t}\r\n\t\r\n\trender() {\r\n\t\r\n\t\tlet usernameClass = ''\r\n\t\tif (this.state.usernameError || this.state.isWrongError) {\r\n\t\t\tusernameClass = 'bg-warning'\r\n\t\t}\r\n\t\t\r\n\t\tlet passwordClass = ''\r\n\t\tif (this.state.passwordError || this.state.isWrongError) {\r\n\t\t\tpasswordClass = 'bg-warning'\r\n\t\t}\r\n\t\r\n\t\treturn (\r\n\t\t\t<div className='container text-center'>\r\n\t\t\t\t<div className='row my-5'/>\r\n\t\t\t\r\n\t\t\t\t<form onSubmit={this.handleSubmit} >\r\n\t\t\t\t\t<h3>Sign In</h3>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<p className=\"text-danger\">{this.state.isWrongError ? \"Username and/or Password are incorrect\":\"\"}</p>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Username</label>\r\n\t\t\t\t\t\t<input type='text' className={'form-control '+usernameClass} value={this.state.username} onChange={this.userFieldChange} placeholder='Enter Username' />\r\n\t\t\t\t\t\t<p className=\"text-danger\">{this.state.usernameError ? \"Username cant be blank\":\"\"}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t\t\t<input type='password' className={'form-control '+passwordClass} value={this.state.password} onChange={this.passFieldChange} placeholder='Enter password' />\r\n\t\t\t\t\t\t<p className=\"text-danger\">{this.state.passwordError ? \"Password cannot be blank\":\"\"}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<input type='checkbox' className='form-control-input' id='customCheck1' value={this.state.remember} onChange={this.remFieldChange} />\r\n\t\t\t\t\t\t<label className='form-control-label' htmlFor='customCheck1' >Remember Me</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{this.state.miscError ? <p className=\"text-danger border\">Unknown Error</p>:undefined}\r\n\t\t\t\t\t{this.state.networkError ? <p className=\"bg-warning text-danger border\">Server cannot be reached!</p>:undefined}\r\n\t\t\t\t\t<button type='submit' className='btn btn-dark btn-block'>Submit</button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"col\"/>\r\n\t\t\t\t\t\t<div className=\"col\"/>\r\n\t\t\t\t\t\t<div className=\"col\"/>\r\n\t\t\t\t\t\t<p className='col forgot-password text-dark'>\r\n\t\t\t\t\t\t\t<Link className=\"nav-link border\" to={this.props.forgotPath}>\r\n\t\t\t\t\t\t\t\tForgot password?\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(signIn);","import React from \"react\";\r\n\r\nimport { APISignIn, APISignUp, APIResendValidator } from \"../../utils\";\r\n\r\nimport { withRouter} from \"react-router-dom\";\r\n\r\nclass signup extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t\t\r\n\t\t\tusername: '',\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tpassword2: '',\r\n\t\t\tfirstName: '',\r\n\t\t\tlastName: '',\r\n\t\t\t\r\n\t\t\tnetworkError:false,\r\n\t\t\t\r\n\t\t\t// Well, I can expand this to be better on our end...\r\n\t\t\tusernameError:false,\r\n\t\t\tusernameErrorDetail: 'Username is unavalible',\r\n\t\t\t\r\n\t\t\temailError:false,\r\n\t\t\temailErrorDetail: 'Email is invalid/taken',\r\n\t\t\t\r\n\t\t\tpasswordError:false,\r\n\t\t\tpasswordErrorDetail:'Passwords do not match!',\r\n\t\t\t\r\n\t\t\tuncaughtError:false,\r\n\t\t\t\r\n\t\t\tcheckField: false,\r\n        };\r\n\t}\r\n\t\r\n\t// Wait, are Usernames a good thing for what we are doing? Hmmmm\r\n\tusernameFieldChange = (event) => {\r\n\t\tthis.setState( {username: event.target.value} )\r\n\t}\r\n\t\r\n\temailFieldChange = (event) => {\r\n\t\tthis.setState( {email: event.target.value} )\r\n\t}\r\n\t\r\n\tpassFieldChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tpassword: event.target.value,\r\n\t\t\t\r\n\t\t\tpasswordError: event.target.value !== this.state.password2,\r\n\t\t\tpasswordErrorDetail:'Passwords do not match!'\r\n\t\t})\r\n\t}\r\n\t\r\n\tpass2FieldChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tpassword2: event.target.value,\r\n\t\t\t\r\n\t\t\tpasswordError: event.target.value !== this.state.password,\r\n\t\t\tpasswordErrorDetail:'Passwords do not match!'\r\n\t\t})\r\n\t}\r\n\t\r\n\tfirstNameFieldChange = (event) => {\r\n\t\tthis.setState( {firstName: event.target.value} )\r\n\t}\r\n\t\r\n\tlastnameFieldChange = (event) => {\r\n\t\tthis.setState( {lastName: event.target.value} )\r\n\t}\r\n\t\r\n\tcheckFieldChange = (event) => {\r\n\t\tthis.setState( {checkField: event.target.value} )\r\n\t}\r\n\t\r\n\t// CHAIN STEP 3! \r\n\tnowSendEmailCallback = () => {\r\n\t\t// Change this to the validator view\r\n\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t}\r\n\tnowSendEmailFailure = () => {\r\n\t\t// If we fail here, we are totally boned...\r\n\t\tconsole.log(\"Oh no. We failed\")\r\n\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t}\r\n\tnowSendEmail = (newToken) => {\r\n\t\t// Now sending the validator email...\r\n\t\tAPIResendValidator(this.props.APIHost, newToken, this.nowSendEmailCallback, this.nowSendEmailFailure)\r\n\t}\r\n\t\r\n\t// Chain Step 2!\r\n\t\r\n\t// I can probobly use this as a intemediary to straight get the incoming token instead of tossing it back up to App.js...\r\n\tnowSignInCallback = (incomingToken) => {\r\n\t\tconst sanityCheck = this.props.loginSave( incomingToken, this.state.username, false )\r\n\t\tif (sanityCheck) {\r\n\t\t\tconsole.log(\"Token registered\")\r\n\t\t\tthis.nowSendEmail(incomingToken)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Token Failed..?\")\r\n\t\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t\t}\r\n\t}\r\n\tnowSignInFailure = () => {\r\n\t\t// O h n o\r\n\t\tconsole.log(\"Sign in failed, I dont even know what to do here...\")\r\n\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t}\r\n\tnowSignIn = () => {\r\n\t\tAPISignIn(this.props.APIHost, this.state.username, this.state.password, this.nowSignInCallback, this.nowSignInFailure)\r\n\t}\r\n\t\r\n\thandleSignUpSubmitCallback = (responseStatus) => {\r\n\t\tif (responseStatus === 201) {\r\n\t\t\t//this.props.history.push(this.props.reRouteTarget)\r\n\t\t\tconsole.log(\"Successful Sign up, now signing in...\")\r\n\t\t\tthis.nowSignIn()\r\n\t\t}\r\n\t}\r\n\thandleSignUpSubmitFailure = (errorCodes, errorDatas) => {\r\n\t\t//console.log(errorCodes)\r\n\t\tlet errorSet = [false, false, false, false]\r\n\t\tlet errorSetData = [\"\", \"\", \"\", \"\"]\r\n\t\tlet extra = false\r\n\t\t\r\n\t\tfor (let index in errorCodes) {\r\n\t\t\tif (errorCodes[index] > errorSet.length) {\r\n\t\t\t\textra = true\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\terrorSet[ errorCodes[index] ] = true\r\n\t\t\t\terrorSetData[ errorCodes[index] ] = errorDatas[index]\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tnetworkError:errorSet[0],\r\n\t\t\tusernameError:errorSet[1],\r\n\t\t\tpasswordError:errorSet[2],\r\n\t\t\temailError:errorSet[3],\r\n\t\t\tuncaughtError:extra,\r\n\t\t\t\r\n\t\t\tusernameErrorDetail:errorSetData[1],\r\n\t\t\tpasswordErrorDetail:errorSetData[2],\r\n\t\t\temailErrorDetail:errorSetData[3],\r\n\t\t})\r\n\t}\r\n\thandleSignUpSubmit = (event) => {\r\n\t\t\r\n\t\tif (!this.state.checkField) {\r\n\t\t\tconsole.log(\"Field was not checked\")\r\n\t\t}\r\n\t\telse {\r\n\t\t\tAPISignUp(this.props.APIHost, this.state.username, this.state.password, this.state.password2, this.state.email, this.state.firstName, this.state.lastName, this.handleSignUpSubmitCallback, this.handleSignUpSubmitFailure)\r\n\t\t}\r\n\t\t\r\n\t\tevent.preventDefault();\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tlet usernameClass = 'form-control'\r\n\t\tif (this.state.usernameError) {\r\n\t\t\tusernameClass += ' bg-warning'\r\n\t\t}\r\n\t\t\r\n\t\tlet emailClass = 'form-control'\r\n\t\tif (this.state.emailError) {\r\n\t\t\temailClass += ' bg-warning'\r\n\t\t}\r\n\t\t\r\n\t\tlet passwordClass = 'form-control'\r\n\t\tif (this.state.passwordError) {\r\n\t\t\tpasswordClass += ' bg-warning'\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<div className=\"signUp\">\r\n\t\t\t\t<div className=\"container\">\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<h3>Sign Up</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<form onSubmit={this.handleSignUpSubmit}>\r\n\t\t\t\t\t\t<div id=\"align-left\">\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t\t\t<label id=\"label-left\">Username</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type='text' className={usernameClass} value={this.state.username} onChange={this.usernameFieldChange} placeholder='Enter Username' />\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-danger\">{this.state.usernameError ? this.state.usernameErrorDetail:\"\"}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t\t\t<label id=\"align-left\">Email Address</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type='email' className={emailClass} value={this.state.email} onChange={this.emailFieldChange} placeholder='Enter email' />\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-danger\">{this.state.emailError ? this.state.emailErrorDetail:\"\"}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\t\t\r\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t\t\t<label id=\"align-left\">Password</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type='password' className={passwordClass} value={this.state.password} onChange={this.passFieldChange} placeholder='Enter password' />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\t\t\r\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t\t\t<label id=\"align-left\">Confirm Password</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type='password' className={passwordClass} value={this.state.password2} onChange={this.pass2FieldChange} placeholder='Confirm password' />\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-danger\">{this.state.passwordError ? this.state.passwordErrorDetail:\"\"}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\t\t\r\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t\t\t<label id=\"align-left\">First Name</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.firstName} onChange={this.firstNameFieldChange} placeholder='First Name' />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\t\t\r\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t\t\t<label id=\"align-left\">Last Name</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.lastName} onChange={this.lastnameFieldChange} placeholder='Last Name' />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t\t<input type='checkbox' className='form-control-input' id='customCheck1' value={this.state.checkField} onChange={this.checkFieldChange} />\r\n\t\t\t\t\t\t\t\t\t<label className='form-control-label' htmlFor='customCheck1' >Legal stuff?</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\t\t\r\n\t\t\t\t\t\t\t\t{this.state.networkError ? <p className=\"bg-warning text-danger border\">Server cannot be reached!</p>:undefined}\r\n\t\t\t\t\t\t\t\t<button type='submit' className='btn btn-dark btn-block'>Submit</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"row my-5\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(signup);","import React from \"react\";\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { APIForgotEmailSend, APIForgotEmailValidate, APIForgotEmailChangePassword } from \"../../utils\";\r\n\r\nclass forgotPassword extends React.Component {\r\n\t\t\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n\t\t\t// This page is one that we need to if the user cannot log in..\r\n\t\t\t// We need to send them to their emails, and then back to here...\r\n\t\t\t// However, we CANNOT RELY on them being logged in...\r\n\t\t\t\r\n\t\t\t// So, therefore.... We shall see if doing the email auth when not logged in will do better or worse...\r\n\t\t\t// If it somehow works better, then I should think of changing the auth page....\r\n\t\t\tcurrentState: 0,\r\n\r\n\t\t\temail: '',\r\n\t\t\tresetToken: '',\r\n\r\n\t\t\tpassword1:'',\r\n\t\t\tpassword2:'',\r\n\r\n\t\t\tpasswordsSameError: false,\r\n\t\t\t\r\n\t\t\tnetworkError: false,\r\n\t\t\t\r\n\t\t\temailError: false,\r\n\t\t\temailErrorDetail: '',\r\n\t\t\t\r\n\t\t\ttokenError: false,\r\n\t\t\ttokenErrorDetail: '',\r\n\t\t\t\r\n\t\t\tpasswordError: false,\r\n\t\t\tpasswordErrorDetail: '',\r\n\t\t\t\r\n\t\t\tuncaughtError: false,\r\n\t\t\t\t\t\t\r\n        };\r\n\t\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({\r\n\t\t\temail: '',\r\n\t\t\tresetToken: '',\r\n\t\t\tpassword1: '',\r\n\t\t\tpassword2: ''},\r\n\t\t)\r\n\t}\r\n\r\n\tgoSignIn = () => {\r\n\t\tthis.props.history.push(this.props.reRouteTarget)\r\n\t}\r\n\r\n\tarePasswordsSame = () => {\r\n\t\t// I MAY need something more complicated than this, but it can be this for now....\r\n\t\treturn (this.state.password1 === this.state.password2)\r\n\t}\r\n\r\n\tswapToCode = () => {\r\n\t\tthis.setState( {currentState: 1} )\r\n\t}\r\n\r\n\tsendEmailSuccess = (successCode, successData) => {\r\n\t\tconsole.log(\"Email Send Success\")\r\n\t\tthis.setState({\r\n\t\t\tcurrentState: 1,\r\n\t\t\tnetworkError: false,\r\n\t\t\tuncaughtError: false,\r\n\t\t})\r\n\t}\r\n\tsendEmailFailure = (errorCodes, errorDatas) => {\r\n\t\tconsole.log(\"Email Send Failure\")\r\n\t\tlet errorSet = [false, false]\r\n\t\tlet errorSetData = [\"\", \"\"]\r\n\t\tlet extra = false\r\n\t\t\r\n\t\tfor (let index in errorCodes) {\r\n\t\t\tif (errorCodes[index] > errorSet.length) {\r\n\t\t\t\textra = true\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\terrorSet[ errorCodes[index] ] = true\r\n\t\t\t\terrorSetData[ errorCodes[index] ] = errorDatas[index]\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tnetworkError:errorSet[0],\r\n\t\t\temailError:errorSet[1],\r\n\t\t\tuncaughtError:extra,\r\n\t\t\t\r\n\t\t\temailErrorDetail:errorSetData[1],\r\n\t\t})\r\n\t}\r\n\tsendEmail = () => {\r\n\t\tconsole.log(\"Sending the Email Here...\")\r\n\t\tAPIForgotEmailSend(this.props.APIHost, this.state.email, this.sendEmailSuccess, this.sendEmailFailure)\r\n\t}\r\n\r\n\tcheckTokenSuccess = (successCode) => {\r\n\t\tconsole.log(\"Token Matched!\")\r\n\t\tthis.setState({\r\n\t\t\tcurrentState: 2,\r\n\t\t\tnetworkError: false,\r\n\t\t\tuncaughtError: false,\r\n\t\t})\r\n\t}\r\n\tcheckTokenFailure = (errorCodes, errorDatas) => {\r\n\t\tconsole.log(\"Token Failed!\")\r\n\t\tlet errorSet = [false, false]\r\n\t\tlet errorSetData = [\"\", \"\"]\r\n\t\tlet extra = false\r\n\t\t\r\n\t\tfor (let index in errorCodes) {\r\n\t\t\tif (errorCodes[index] > errorSet.length) {\r\n\t\t\t\textra = true\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\terrorSet[ errorCodes[index] ] = true\r\n\t\t\t\terrorSetData[ errorCodes[index] ] = errorDatas[index]\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tnetworkError:errorSet[0],\r\n\t\t\ttokenError:errorSet[1],\r\n\t\t\tuncaughtError:extra,\r\n\t\t\t\r\n\t\t\ttokenErrorDetail:errorSetData[1],\r\n\t\t})\r\n\t}\r\n\tcheckToken = () => {\r\n\t\tconsole.log(\"Send Token Here...\")\r\n\t\tAPIForgotEmailValidate(this.props.APIHost, this.state.resetToken, this.checkTokenSuccess, this.checkTokenFailure)\r\n\t}\r\n\t\r\n\tsubmitPasswordSuccess = (successCode) => {\r\n\t\tconsole.log(\"Password Reset Success!\")\r\n\t\tthis.setState({\r\n\t\t\tcurrentState: 3,\r\n\t\t\tnetworkError: false,\r\n\t\t\tuncaughtError: false,\r\n\t\t})\r\n\t}\r\n\tsubmitPasswordFailure = (errorCodes, errorDatas) => {\r\n\t\tlet errorSet = [false, false]\r\n\t\tlet errorSetData = [\"\", \"\"]\r\n\t\tlet extra = false\r\n\t\t\r\n\t\tfor (let index in errorCodes) {\r\n\t\t\tif (errorCodes[index] > errorSet.length) {\r\n\t\t\t\textra = true\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\terrorSet[ errorCodes[index] ] = true\r\n\t\t\t\terrorSetData[ errorCodes[index] ] = errorDatas[index]\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tnetworkError:errorSet[0],\r\n\t\t\tpasswordError:errorSet[1],\r\n\t\t\tuncaughtError:extra,\r\n\t\t\t\r\n\t\t\tpasswordErrorDetail:errorSetData[1],\r\n\t\t})\r\n\t}\r\n\tsubmitPasswords = () => {\r\n\t\t// I can use the API for this...\t\r\n\t\tconsole.log(\"Checking Passwords...\")\r\n\t\tif (this.arePasswordsSame()) {\r\n\t\t\tconsole.log(\"Passwords Checked out!\")\r\n\t\t\tAPIForgotEmailChangePassword(this.props.APIHost, this.state.resetToken, this.state.password1, this.state.password2, this.submitPasswordSuccess, this.submitPasswordFailure)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Passwords Failed!\")\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\temailFieldChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\temail: event.target.value\r\n\t\t})\r\n\t}\r\n\r\n\ttokenFieldChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tresetToken: event.target.value\r\n\t\t})\r\n\t}\r\n\t\r\n\tpass1FieldChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tpassword1: event.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tpass2FieldChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tpassword2: event.target.value,\r\n\t\t\tpasswordsSameError: event.target.value !== this.state.password1,\r\n\t\t})\r\n\t}\r\n\t\r\n\trender() {\r\n\r\n\t\tlet currentField = null\r\n\t\tlet currentButton = null\r\n\t\tlet currentMessage = null\r\n\r\n\t\t// Enter Email For Recovery State\r\n\t\tif (this.state.currentState === 0) {\r\n\t\t\t\r\n\t\t\tif (this.state.networkError) {\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tif (this.state.emailError) {\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcurrentMessage = (\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<p> \r\n\t\t\t\t\t\t\tEnter your email address.\r\n\t\t\t\t\t\t\tIf it is in the system, we will send you an email address with a code.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\r\n\t\t\tcurrentField = (\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label>Email Address</label>\r\n\t\t\t\t\t\t\t<input type='email' className='form-control' value={this.state.email} onChange={this.emailFieldChange} placeholder='Enter email' />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\r\n\t\t\tcurrentButton = [\r\n\t\t\t\t(\r\n\t\t\t\t\t<div className=\"row\" key={1}>\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.sendEmail}>\r\n\t\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t),(\r\n\t\t\t\t\t<div className=\"row\" key={2}>\r\n\t\t\t\t\t\t<div className=\"col m-2\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.swapToCode}>\r\n\t\t\t\t\t\t\t\tAlready have the code!\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t]\r\n\t\t\t\t\r\n\t\t}\r\n\t\t// Enter Token From Email State\r\n\t\telse if (this.state.currentState === 1) {\r\n\t\t\t\r\n\t\t\tif (this.state.networkError) {\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tif (this.state.tokenError) {\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tcurrentMessage = (\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<p> \r\n\t\t\t\t\t\tCheck your email.\r\n\t\t\t\t\t\tIf your email is correct, then enter the code it gives you here:\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\r\n\t\t\tcurrentField = (\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Reset token</label>\r\n\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.resetToken} onChange={this.tokenFieldChange} placeholder='Enter Token' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\r\n\t\t\tcurrentButton = (\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.checkToken}>\r\n\t\t\t\t\t\tCheck Code\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\t// Enter New Passwords State\r\n\t\telse if (this.state.currentState === 2) {\r\n\t\r\n\t\t\tif (this.state.networkError) {\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tif (this.state.passwordError) {\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcurrentMessage = [\r\n\t\t\t\t<div className=\"row\" key={1}> \r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<p> Enter your new password! </p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t]\r\n\t\t\tif (this.state.passwordsSameError) {\r\n\t\t\t\tcurrentMessage.push(\r\n\t\t\t\t\t<div className=\"row\" key={2}> \r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<p className=\"text-danger\"> Passwords do not match! </p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\tcurrentField = [\r\n\t\t\t\t( \r\n\t\t\t\t\t<div className=\"row\" key={3}> \r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<input type='password' className='form-control' value={this.state.password1} onChange={this.pass1FieldChange} placeholder='Enter Password' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t),\r\n\t\t\t\t(\r\n\t\t\t\t\t<div className=\"row\" key={4}> \r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<input type='password' className='form-control' value={this.state.password2} onChange={this.pass2FieldChange} placeholder='Re-enter Password' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t)\r\n\t\t\t]\r\n\t\t\tcurrentButton = (\r\n\t\t\t\t<div className=\"row\"> \r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.submitPasswords}>\r\n\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\t// Thank You State\r\n\t\telse if (this.state.currentState === 3) {\r\n\t\t\tcurrentMessage = (\r\n\t\t\t\t<div className=\"row\"> \r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<p> Password has been successfullty reset! </p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t\tcurrentField = null\r\n\r\n\t\t\tcurrentButton = (\r\n\t\t\t\t<div className=\"row\"> \r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.goSignIn}>\r\n\t\t\t\t\t\t\tSign In!\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className='container-sm'>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<h3> Forgot your password? </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/*Change to proper Submit Form...*/}\r\n\t\t\t\t{currentMessage}\r\n\t\t\t\t{currentField}\r\n\t\t\t\t{currentButton}\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(forgotPassword);","import React from \"react\";\r\n\r\nimport { withRouter} from \"react-router-dom\";\r\n\r\nimport { APIValidateAccount, APIResendValidator } from \"../../utils\";\r\n\r\nclass verifyEmail extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t\t\r\n\t\t\t// You need to enter a token from the email address...\r\n\t\t\t// The user will also NEED to be logged in at this point in order for this to work...\r\n\t\t\t// User will be redirected to this page if they are not active...\r\n\t\t\t// And ALL API CALLS WILL FAIL! Unless they enter this code correctly, before it expires\r\n\t\t\ttoken: '',\r\n\t\t\ttokenError:false,\r\n\t\t\ttokenErrorDetail:'???',\r\n\t\t\t\r\n\t\t\tdone:false,\r\n\t\t\t\r\n\t\t\tresend:\"\",\r\n        };\r\n\t}\r\n\t\r\n\tforceLogout = () => {\r\n\t\t// Gonna do this like this, in case we got something else we wana do on logout...\r\n\t\tthis.props.forceLogout()\r\n\t\tthis.props.history.push(this.props.reRouteTarget);\r\n\t}\r\n\t\r\n\t// Wait, are Usernames a good thing for what we are doing? Hmmmm\r\n\ttokenFieldChange = (event) => {\r\n\t\tthis.setState( {token: event.target.value} )\r\n\t}\r\n\tgotoDash = () => {\r\n\t\tthis.props.history.push(this.props.reRouteSuccessTarget)\r\n\t}\r\n\t\r\n\thandleVerifyCallback = (incomingStatus, incomingData) => {\r\n\t\tif (incomingStatus === 200) {\r\n\t\t\t// Successful verification!!\r\n\t\t\tconsole.log(\"Successful Verification!\")\r\n\t\t\tthis.setState({\r\n\t\t\t\tdone:true,\r\n\t\t\t})\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t// Data is mostly used for error displaying here honestly\r\n\thandleVerifyFailure = (incomingStatus, incomingData) => {\r\n\t\tif (incomingStatus === 400) {\r\n\t\t\tfor (let index in incomingData) {\r\n\t\t\t\tif (index === \"status\") {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\ttokenError:true,\r\n\t\t\t\t\t\ttokenErrorDetail:incomingData[index]\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\thandleVerifySubmit = (event) => {\r\n\t\t\r\n\t\tAPIValidateAccount(this.props.APIHost, this.props.authToken, this.state.token, this.handleVerifyCallback, this.handleVerifyFailure)\r\n\t\t\r\n\t\tevent.preventDefault();\r\n\t}\r\n\t\r\n\treSendEmailCallback = () => {\r\n\t\t// Change this to the validator view\r\n\t\tthis.setState({\r\n\t\t\tresend:\"A new code has been sent!\",\r\n\t\t})\r\n\t\t\r\n\t}\r\n\treSendEmailFailure = (code, data) => {\r\n\t\t// If we fail here, we are totally boned...\r\n\t\tconsole.log(\"Oh no. We failed....\")\r\n\t\t// Is it because of a login failure?\r\n\t\tif (code === 401) {\r\n\t\t\tthis.props.forceLogout()\r\n\t\t}\r\n\t}\r\n\treSendEmail = () => {\r\n\t\t// Now sending the validator email...\r\n\t\tAPIResendValidator(this.props.APIHost, this.props.authToken, this.reSendEmailCallback, this.reSendEmailFailure)\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tlet tokenClass = 'form-control'\r\n\t\tif (this.state.tokenError) {\r\n\t\t\ttokenClass += ' bg-warning'\r\n\t\t}\r\n\t\t\r\n\t\tlet displayBody = []\r\n\t\tif (!this.state.done) {\r\n\t\t\tdisplayBody = (\r\n\t\t\t\t<div>\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<h3>Activate your account</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<form onSubmit={this.handleVerifySubmit}>\r\n\t\t\t\t\t\t<div id=\"align-left\">\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t<p> Check your email, you should have received a code, enter it here and your account will be activated!</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t\t\t<label id=\"label-left\">Enter token here:</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type='text' className={tokenClass} value={this.state.username} onChange={this.tokenFieldChange} placeholder='Token' />\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-danger\">{this.state.tokenError ? this.state.tokenErrorDetail:\"\"}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\t\t\r\n\t\t\t\t\t\t\t\t\t<button type='submit' className='btn btn-dark btn-block'>Submit</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<button onClick={this.reSendEmail} className='btn btn-dark btn-block'>Re-send Activation code</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t{this.state.resend}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdisplayBody = (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<h3>Thank you!</h3>\r\n\t\t\t\t\t\t\t<p>Account has been activated! Press here to go to the dashboard:</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-dark\" onClick={this.gotoDash}>To the Dashboard!</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<div className=\"signUp\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t{displayBody}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(verifyEmail);","import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n\t\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<div className='intro'>\r\n\t\t\t\t<div className='overlay'>\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col col-md-offset-2 intro-text\">\r\n\t\t\t\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t\t\t\tProject Scenere\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\tWelcome to the Alpha!\r\n\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n\t\t\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Alarm, Award, Flag, Hexagon } from 'react-bootstrap-icons';\r\n\r\nconst testAnother = (props) => {\r\n\t\r\n\treturn (\r\n\t\t<div className=\"text-center\" id='features'>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row m-3\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<h2 className=\"section-title\">\r\n\t\t\t\t\t\t\tFeatures\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t<p className=\"text-muted section-subtitle\">\r\n\t\t\t\t\t\t\tLorem ipsum\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t<div className=\"col-sm-6 col-md-6 col-lg-3\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\"/>\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<Alarm className=\"iconBG\" color=\"white\" size={72} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\tFeature Title\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<p className=\"col text-muted\">\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet placerat facilisis felis mi in tempus eleifend pellentesque natoque etiam.\t\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-6 col-md-6 col-lg-3\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\"/>\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<Award className=\"iconBG\" color=\"white\" size={72} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\tFeature Title\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<p className=\"col text-muted\">\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet placerat facilisis felis mi in tempus eleifend pellentesque natoque etiam.\t\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-6 col-md-6 col-lg-3\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\"/>\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<Flag className=\"iconBG\" color=\"white\" size={72} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\tFeature Title\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<p className=\"col text-muted\">\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet placerat facilisis felis mi in tempus eleifend pellentesque natoque etiam.\t\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-6 col-md-6 col-lg-3\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\"/>\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<Hexagon className=\"iconBG\" color=\"white\" size={72} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\tFeature Title\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<p className=\"col text-muted\">\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet placerat facilisis felis mi in tempus eleifend pellentesque natoque etiam.\t\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\t\t\r\n}\r\n\r\nexport default testAnother;","import React from \"react\";\r\n\r\nconst testLeft = (props) => {\r\n\t\r\n\treturn (\r\n\t\t<div id='about'>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row m-4\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<h2 className=\"section-title\">\r\n\t\t\t\t\t\t\tAbout Us\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t<p className=\"text-muted section-subtitle\">\r\n\t\t\t\t\t\t\tLorem ipsum\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row m-4\">\r\n\t\t\t\t\t<div className=\"col text-muted\">\r\n\t\t\t\t\t\tLorem ipsum dolor sit amet placerat facilisis felis mi in tempus eleifend pellentesque natoque etiam.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row m-4\">\r\n\t\t\t\t\t<h5 className=\"col about-subsection\">\r\n\t\t\t\t\t\tTitle of Subsection\r\n\t\t\t\t\t</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row my-2 about-text text-muted\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"col list-style\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\t\t\r\n}\r\n\r\nexport default testLeft;","import React from \"react\";\r\nimport {APIBetaSignEmail} from \"../../utils\";\r\n\r\nclass contact extends React.Component {\r\n\t\r\n\t// Load this fromt the rest of it if we are logged in...\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t\temail: '',\r\n        };\r\n\t}\r\n\t\r\n\temailFieldChange = (event) => {\r\n\t\tthis.setState( {email: event.target.value} )\r\n\t}\r\n\t\r\n\tcallbackSuccess = () => {\r\n\t\t\r\n\t}\r\n\tcallbackFailure = () => {\r\n\t\t\r\n\t}\t\r\n\thandleSubmit = (event) => {\r\n\r\n\t\tAPIBetaSignEmail(this.props.APIHost, this.state.email, this.callbackSuccess, this.callbackFailure)\r\n\r\n\t\tevent.preventDefault();\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\r\n\t\t\t<div id=\"contact\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t\tBeta Request\r\n\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tInterested in beta testing? Enter you email below\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t\t<input type='email' className='form-control' value={this.state.email} onChange={this.emailFieldChange} placeholder='Enter email' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/*\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"row\"> */}\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<label></label>\r\n\t\t\t\t\t\t\t\t<button type='submit' className='btn btn-dark btn-block'>Send!</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default contact;","import React from \"react\";\r\nimport {APIContactUsEmail} from \"../../utils\";\r\n\r\nclass contact extends React.Component {\r\n\t\r\n\t// Load this fromt the rest of it if we are logged in...\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t\t\r\n\t\t\tfirstName: '',\r\n\t\t\tlastName: '',\r\n\t\t\t\r\n\t\t\temail: '',\r\n\t\t\tcompany: '',\r\n\t\t\t\r\n\t\t\tcontent : '',\r\n        };\r\n\t}\r\n\t\r\n\t// Wait, are Usernames a good thing for what we are doing? Hmmmm\r\n\tfirstNameFieldChange = (event) => {\r\n\t\tthis.setState( {firstName: event.target.value} )\r\n\t}\r\n\t\r\n\tlastnameFieldChange = (event) => {\r\n\t\tthis.setState( {lastName: event.target.value} )\r\n\t}\r\n\t\r\n\temailFieldChange = (event) => {\r\n\t\tthis.setState( {email: event.target.value} )\r\n\t}\r\n\t\r\n\tcompanyFieldChange = (event) => {\r\n\t\tthis.setState( {company: event.target.value} )\r\n\t}\r\n\t\r\n\tcontentFieldChange = (event) => {\r\n\t\tthis.setState( {content: event.target.value} )\r\n\t}\r\n\t\r\n\tcallbackSuccess = () => {\r\n\t\t\r\n\t}\r\n\tcallbackFailure = () => {\r\n\t\t\r\n\t}\r\n\thandleSubmit = (event) => {\r\n\r\n\t\tAPIContactUsEmail(this.props.APIHost, this.state.firstName, this.state.lastName, this.state.email, this.state.company, this.state.content, this.callbackSuccess, this.callbackFailure)\r\n\r\n\t\tevent.preventDefault();\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\r\n\t\t\t<div id=\"contact\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t\tContact Us\r\n\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet placerat\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t\t<label>First Name</label>\r\n\t\t\t\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.firstName} onChange={this.firstNameFieldChange} placeholder='First Name' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col\">\t\r\n\t\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t\t<label>Last Name</label>\r\n\t\t\t\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.lastName} onChange={this.lastnameFieldChange} placeholder='Last Name' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t\t<label>Email Address</label>\r\n\t\t\t\t\t\t\t\t\t<input type='email' className='form-control' value={this.state.email} onChange={this.emailFieldChange} placeholder='Enter email' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col\">\t\r\n\t\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t\t<label>Company</label>\r\n\t\t\t\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.company} onChange={this.companyFieldChange} placeholder='Company Name' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\t\r\n\t\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t\t<label>Content</label>\r\n\t\t\t\t\t\t\t\t\t<textarea  type='text' className='form-control' value={this.state.content} onChange={this.contentFieldChange} placeholder='Content' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"row my-1\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<button type='submit' className='btn btn-dark btn-block'>Send Message</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default contact;","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport {testSaveStorage, testLoadStorage, clearStorage, checkStorageContents} from \"../utils\";\r\n\r\nclass navigation extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n          \r\n\t\t  something: null,\r\n\r\n        };\r\n\t}\r\n\r\n\ttriggerLogout = () => {\r\n\t\tthis.props.clearLogin()\r\n\t}\r\n\t\r\n\tsaveToStorage = () => {\r\n\t\tconst keyTest = \"asdf\"\r\n\t\t//const valueTest = [\"derp\",\"dorp\",\"yaboi\"]\r\n\t\tconst valueTest = {\"SecondKey\":\"asdf\",\"thirdKey\":\"boop\"}\r\n\t\t\r\n\t\ttestSaveStorage(keyTest, valueTest)\r\n\t};\r\n\t\r\n\tgetFromStorage = () => {\r\n\t\tconst keyTest = \"asdf\"\r\n\t\tlet dataTest = testLoadStorage(keyTest)\t\t\r\n\t\tconsole.log(dataTest)\r\n\t};\r\n\t\r\n\trender() {\r\n\t\tconst basePath = this.props.basePath\r\n\r\n\t\tlet iconButton = null\r\n\t\tlet userDisplay = null\r\n\r\n\t\tif (this.props.currentUser === undefined) {\r\n\t\t\ticonButton = [\r\n\t\t\t\t(<li className={'nav-item'} key='1'>\r\n\t\t\t\t\t<Link className=\"nav-link\" to={basePath+\"/signup\"}>\r\n\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>),\r\n\r\n\t\t\t\t(<li className={'nav-item'}  key='2'>\r\n\t\t\t\t\t<Link className=\"nav-link\" to={basePath+\"/signin\"}>\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>)\r\n\t\t\t]\r\n\r\n\t\t\tuserDisplay = (\r\n\t\t\t\t<li className={'nav-item'}  key='3'>\t\r\n\t\t\t\t\t<Link className=\"nav-link\" to={basePath+\"/dashboard\"}>\r\n\t\t\t\t\t\tNone\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse {\r\n\t\t\ticonButton = [\r\n\t\t\t\t(<li className={'nav-item'}  key='1'>\t\r\n\t\t\t\t\t<Link className=\"nav-link\" to={basePath+\"/dashboard\"}>\r\n\t\t\t\t\t\tDashboard\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>),\r\n\t\t\t\r\n\t\t\t\t(<li className={'nav-item'}  key='2'>\r\n\t\t\t\t\t<Link className=\"nav-link\" to={basePath+\"/\"} onClick={this.triggerLogout}>\r\n\t\t\t\t\t\tSign Out\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>)\r\n\t\t\t]\r\n\r\n\t\t\tuserDisplay = (\r\n\t\t\t\t<li className={'nav-item'}  key='5'>\t\r\n\t\t\t\t\t<Link className=\"nav-link\" to={basePath+\"/dashboard\"}>\r\n\t\t\t\t\t\t{this.props.currentUser}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\t<li className={'nav-item'}  key='10'>\t\r\n\t\t\t<Link className=\"nav-link\" to={basePath+\"/contact\"}>\r\n\t\t\t\tContact Us Test\r\n\t\t\t</Link>\r\n\t\t</li>\r\n\t\t*/\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"navigation\">\r\n\t\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n\t\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t\t<Link className=\"navbar-brand\" to={basePath+\"/\"}>\r\n\t\t\t\t\t\t\tProject Scenere\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/*\r\n\t\t\t\t\t\t<button onClick={this.saveToStorage}>\r\n\t\t\t\t\t\t\tTest Save\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button onClick={this.getFromStorage}>\r\n\t\t\t\t\t\t\tTest Load\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button onClick={clearStorage}>\r\n\t\t\t\t\t\t\tClear\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button onClick={checkStorageContents}>\r\n\t\t\t\t\t\t\tCheck Contents\r\n\t\t\t\t\t\t</button> */}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"navbar-toggler\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tdata-toggle=\"collapse\"\r\n\t\t\t\t\t\t\tdata-target=\"#navbarResponsive\"\r\n\t\t\t\t\t\t\taria-controls=\"navbarResponsive\"\r\n\t\t\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t\t\t\taria-label=\"Toggle navigation\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n\t\t\t\t\t\t\t<ul className=\"navbar-nav ml-auto\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{iconButton}\r\n\t\t\t\t\t\t\t\t<li className={'nav-item'}  key='1'>\t\r\n\t\t\t\t\t\t\t\t\t<div className=\"nav-link\">\r\n\t\t\t\t\t\t\t\t\t\tCurrent User:\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t{userDisplay}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(navigation);","// Lets do some local storage fun time tests!\r\nimport Store from \"store\"\r\n\r\nexport * from \"./axiosAPI\"\r\nexport * from \"./graphs\"\r\n\r\nexport const testLoadStorage = (key) => {\r\n\t\r\n\tlet loadData = Store.get(key)\r\n\r\n\t// Return 0 if there is no key by this name....\r\n\tif (loadData === undefined) {\r\n\t\treturn 0\r\n\t}\r\n\t// Return 1 if the it is to \"old\"\r\n\tlet dateSaved = loadData[\"expiryDate\"]\r\n\tlet now = Date.now()\r\n\r\n\tconsole.log(dateSaved)\r\n\tconsole.log(now)\r\n\t\r\n\tif (now > dateSaved) {\r\n\t\tconsole.log(\"Expired\")\r\n\t\tStore.remove(key)\r\n\t\treturn 1\r\n\t}\r\n\telse {\r\n\t\tconsole.log(\"Allowed\")\r\n\t}\r\n\r\n\treturn loadData[\"data\"]\r\n}\r\nexport const testSaveStorage = (key, value) => {\r\n\r\n\t// Now, How exactly do I determine when the expiry should be?\r\n\r\n\tlet storageTime = new Date()\r\n\tstorageTime.setSeconds(storageTime.getSeconds()+70)\r\n\t\r\n\tlet storeData = {\"expiryDate\":storageTime.getTime(), \"data\":value}\r\n\tStore.set(key, storeData)\r\n\r\n\treturn true\r\n}\r\nexport const clearStorage = () => {\r\n\tconsole.log(\"Clearing Data...\")\r\n\tStore.clearAll()\r\n\tconsole.log(\"Done!\")\r\n\t\r\n\treturn false\r\n}\r\nexport const checkStorageContents = () => {\r\n\tconsole.log(\"Checking Storage contents:\")\r\n\tStore.each(function(value, key) {\r\n\t\tconsole.log(key, '==', value)\r\n\t\t\r\n\t\tlet dateSaved = value[\"expiryDate\"]\r\n\t\tlet now = Date.now()\r\n\t\tif (now > dateSaved) {\r\n\t\t\tconsole.log(\"Expired!\")\r\n\t\t\tStore.remove(key)\r\n\t\t}\r\n\t})\r\n\tconsole.log(\"Done!\")\r\n\t\r\n\treturn false\r\n}\r\n\r\nexport const displayStorageContents = () => {\r\n\tconsole.log(\"Showing Storage contents:\")\r\n\tStore.each(function(value, key) {\r\n\t\tconsole.log(key, '==', value)\r\n\t})\r\n\tconsole.log(\"Done!\")\r\n\t\r\n\treturn false\r\n}\r\n\r\n// THIS IS EXAMPLE COMPANY TEST DATA!!!\r\nconst makeCompanyDaydata = () => {\r\n\t\r\n\tlet dayData = {\r\n\t\t\temotion: { \r\n\t\t\t\tmax:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()}, \r\n\t\t\t\tmin:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()}, \r\n\t\t\t\tave:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\r\n\t\t\t\tthreshold:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t},\r\n\t\t\tsentiment: {\r\n\t\t\t\tmax:2*Math.random()-1, \r\n\t\t\t\tmin:2*Math.random()-1, \r\n\t\t\t\tave:2*Math.random()-1,\r\n\t\t\t\t\r\n\t\t\t\tthresholdPos:Math.random(),\r\n\t\t\t\tthresholdNeg:Math.random(),\r\n\t\t\t},\r\n\t\t\tentities: [\r\n\t\t\t\t{text:\"Example Entity\", \r\n\t\t\t\t\tcount:12,\r\n\t\t\t\t\ttype:\"Whatever\",\r\n\t\t\t\t\tconfidence:{ \r\n\t\t\t\t\t\tmax:Math.random(), \r\n\t\t\t\t\t\tmin:Math.random(), \r\n\t\t\t\t\t\tave:Math.random(),\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstd:Math.random(),\r\n\t\t\t\t\t},\r\n\t\t\t\t\trelevance:{\r\n\t\t\t\t\t\tmax:Math.random(),\r\n\t\t\t\t\t\tmin:Math.random(),\r\n\t\t\t\t\t\tave:Math.random(),\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstd:Math.random(),\r\n\t\t\t\t\t},\r\n\t\t\t\t\temotion:{\r\n\t\t\t\t\t\tmax:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\t\tmin:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\t\tave:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstd:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\t}, \r\n\t\t\t\t\tsentiment:{\r\n\t\t\t\t\t\tmax:2*Math.random()-1, \r\n\t\t\t\t\t\tmin:2*Math.random()-1, \r\n\t\t\t\t\t\tave:2*Math.random()-1,\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstd:Math.random(),\r\n\t\t\t\t\t},\r\n\t\t\t\t}, \r\n\t\t\t],\r\n\t\t\tkeywords: [\r\n\t\t\t\t{text:\"Example Keyword\", \r\n\t\t\t\t\tcount:6, \r\n\t\t\t\t\t\r\n\t\t\t\t\trelevance:{\r\n\t\t\t\t\t\tmax:Math.random(),\r\n\t\t\t\t\t\tmin:Math.random(),\r\n\t\t\t\t\t\tave:Math.random(),\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstd:Math.random(),\r\n\t\t\t\t\t}, \r\n\t\t\t\t\temotion:{\r\n\t\t\t\t\t\tmax:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\t\tmin:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\t\tave:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstd:{joy:Math.random(), anger:Math.random(), sadness:Math.random(), disgust:Math.random(), fear:Math.random()},\r\n\t\t\t\t\t}, \r\n\t\t\t\t\tsentiment:{\r\n\t\t\t\t\t\tmax:2*Math.random()-1, \r\n\t\t\t\t\t\tmin:2*Math.random()-1, \r\n\t\t\t\t\t\tave:2*Math.random()-1,\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstd:Math.random(),\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\trelations: [\r\n\t\t\t\t{type:\"didTo\", \r\n\t\t\t\t\tcount:4, \r\n\t\t\t\t\tscore:{\r\n\t\t\t\t\t\tmax:2*Math.random()-1, \r\n\t\t\t\t\t\tmin:2*Math.random()-1, \r\n\t\t\t\t\t\tave:2*Math.random()-1,\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstd:Math.random(),\r\n\t\t\t\t\t}, \r\n\t\t\t\t\targuments:[{text:\"person1\"},{text:\"person2\"}] \r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t}\r\n\treturn dayData\r\n}\r\n\r\nexport const makeCompanyTestDataOtherFormat = () => {\r\n\t\r\n\tconst testData = {\r\n\t\tmon: {\r\n\t\t\tresponsePurity: 90,\r\n\t\t\tp1: {\r\n\t\t\t\tname:\"Prompt 1 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp2: {\r\n\t\t\t\tname:\"Prompt 2 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp3: {\r\n\t\t\t\tname:\"Prompt 3 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp4: {\r\n\t\t\t\tname:\"Prompt 4 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t},\r\n\t\ttue: {\r\n\t\t\tresponsePurity: 23,\r\n\t\t\tp1: {\r\n\t\t\t\tname:\"Prompt 1 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp2: {\r\n\t\t\t\tname:\"Prompt 2 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp3: {\r\n\t\t\t\tname:\"Prompt 3 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp4: {\r\n\t\t\t\tname:\"Prompt 4 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t},\r\n\t\twed: {\r\n\t\t\tresponsePurity: 55,\r\n\t\t\tp1: {\r\n\t\t\t\tname:\"Prompt 1 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp2: {\r\n\t\t\t\tname:\"Prompt 2 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp3: {\r\n\t\t\t\tname:\"Prompt 3 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp4: {\r\n\t\t\t\tname:\"Prompt 4 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t},\r\n\t\tthu: {\r\n\t\t\tresponsePurity: 78,\r\n\t\t\tp1: {\r\n\t\t\t\tname:\"Prompt 1 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp2: {\r\n\t\t\t\tname:\"Prompt 2 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp3: {\r\n\t\t\t\tname:\"Prompt 3 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp4: {\r\n\t\t\t\tname:\"Prompt 4 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t},\r\n\t\tfri: {\r\n\t\t\tresponsePurity: 34,\r\n\t\t\tp1: {\r\n\t\t\t\tname:\"Prompt 1 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp2: {\r\n\t\t\t\tname:\"Prompt 2 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp3: {\r\n\t\t\t\tname:\"Prompt 3 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp4: {\r\n\t\t\t\tname:\"Prompt 4 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t}\r\n\t\t},\r\n\t\tsat: {\r\n\t\t\tresponsePurity: 90,\r\n\t\t\tp1: {\r\n\t\t\t\tname:\"Prompt 1 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp2: {\r\n\t\t\t\tname:\"Prompt 2 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp3: {\r\n\t\t\t\tname:\"Prompt 3 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp4: {\r\n\t\t\t\tname:\"Prompt 4 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t}\r\n\t\t},\r\n\t\tsun: {\r\n\t\t\tresponsePurity: 90,\r\n\t\t\tp1: {\r\n\t\t\t\tname:\"Prompt 1 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp2: {\r\n\t\t\t\tname:\"Prompt 2 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp3: {\r\n\t\t\t\tname:\"Prompt 3 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp4: {\r\n\t\t\t\tname:\"Prompt 4 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t}\r\n\t\t},\r\n\t\tallDay: {\r\n\t\t\tresponsePurity: 90,\r\n\t\t\tp1: {\r\n\t\t\t\tname:\"Prompt 1 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp2: {\r\n\t\t\t\tname:\"Prompt 2 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp3: {\r\n\t\t\t\tname:\"Prompt 3 Full Name!!2\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t},\r\n\t\t\tp4: {\r\n\t\t\t\tname:\"Prompt 4 Full Name\",\r\n\t\t\t\tdata: makeCompanyDaydata(),\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\t\t\r\n\treturn testData\r\n}","import React from \"react\";\r\n\r\nclass footer extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\t}\r\n\t// fixed-bottom\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"footer\">\r\n\t\t\t\t<footer className=\"py-3 bg-dark fixed-bottom\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<p className=\"m-0 text-center text-white\">\r\n\t\t\t\t\t\t\tCopyright &copy; Nightingale Technologies 2021\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</footer>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default footer;","import React from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n//import { ButtonGroup, ToggleButton } from 'react-bootstrap';\r\n\r\n//import Store from \"store\"\r\n\r\n//import {makeCompanyTestData} from \"../utils\";\r\n\r\n// Then lets start here...With the Signin, and Sign Up pages\r\n\r\nclass AuthPages extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t\t\r\n\t\t\t// hmmmm\r\n\t\t\texample: 0,\r\n        };\r\n\t}\r\n\t\r\n\tbackButton = () => {\r\n\t\tthis.props.history.goBack()\r\n\t}\r\n\t\r\n\t// Rendering this with Bootstrap React.... To see if there is anything really interesting I can do with it\r\n\t// So far it doesnt look all that different \r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"authPages\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\tAuthorization Pages\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(AuthPages);","import React from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n//EditorState, convertToRaw, convertFromRaw\r\nimport {Editor, RichUtils,  } from 'draft-js';\r\n//ContentState\r\n\r\nconst styles = {\r\n  editor: {\r\n    border: '1px solid gray',\r\n    minHeight: '6em',\r\n\tjustifyContent: 'left',\r\n  }\r\n};\r\n\r\n// START OF EXAMPLE CODE FROM THE DRAFT.JS!!!!!\r\nclass StyleButton extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.onToggle = (e) => {\r\n\t\t\t//console.log(this.props.style)\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.props.onToggle(this.props.style);\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet className = 'btn btn-outline-primary';\r\n\t\tif (this.props.active) {\r\n\t\t\tclassName += ' active';\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<button className={className} onClick={this.onToggle}>\r\n\t\t\t\t{this.props.label}\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst BLOCK_TYPES = [\r\n\t{label: 'H1', style: 'header-one'},\r\n\t{label: 'H2', style: 'header-two'},\r\n\t{label: 'H3', style: 'header-three'},\r\n\t{label: 'H4', style: 'header-four'},\r\n\t{label: 'H5', style: 'header-five'},\r\n\t{label: 'H6', style: 'header-six'},\r\n\t//{label: 'Blockquote', style: 'blockquote'},\r\n\t{label: 'UL', style: 'unordered-list-item'},\r\n\t{label: 'OL', style: 'ordered-list-item'},\r\n\t//{label: 'Code Block', style: 'code-block'},\r\n];\r\n\r\nconst BlockStyleControls = (props) => {\r\n\tconst {editorState} = props;\r\n\tconst selection = editorState.getSelection();\r\n\tconst blockType = editorState\r\n\t  .getCurrentContent()\r\n\t  .getBlockForKey(selection.getStartKey())\r\n\t  .getType();\r\n\r\n\treturn (\r\n\t\t<div className=\"RichEditor-controls\">\r\n\t\t\t{BLOCK_TYPES.map((type) =>\r\n\t\t\t\t<StyleButton\r\n\t\t\t\t\tkey={type.label}\r\n\t\t\t\t\tactive={type.style === blockType}\r\n\t\t\t\t\tlabel={type.label}\r\n\t\t\t\t\tonToggle={props.onToggle}\r\n\t\t\t\t\tstyle={type.style}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst INLINE_STYLES = [\r\n\t{label: 'Bold', style: 'BOLD'},\r\n\t{label: 'Italic', style: 'ITALIC'},\r\n\t{label: 'Underline', style: 'UNDERLINE'},\r\n\t//{label: 'Monospace', style: 'CODE'},\r\n];\r\n\r\nconst InlineStyleControls = (props) => {\r\n\tconst currentStyle = props.editorState.getCurrentInlineStyle();\r\n\t\r\n\treturn (\r\n\t\t<div className=\"RichEditor-controls\">\r\n\t\t\t{INLINE_STYLES.map((type) =>\r\n\t\t\t\t<StyleButton\r\n\t\t\t\t\tkey={type.label}\r\n\t\t\t\t\tactive={currentStyle.has(type.style)}\r\n\t\t\t\t\tlabel={type.label}\r\n\t\t\t\t\tonToggle={props.onToggle}\r\n\t\t\t\t\tstyle={type.style}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// This contains the EditorJS code... So lets do it last as I am unsure as of what to do...\r\nconst journalView = (props) => {\r\n\t\r\n\tlet keyID = 0\r\n\tlet backLayerButtons = []\r\n\t\r\n\tlet currentLayer = props.companyDataTree\r\n\t// Dig following each of the currentSelection...\r\n\t\r\n\tbackLayerButtons.push(\r\n\t\t<button key={keyID} onClick={props.backLayer} value={0} className=\"btn btn-outline-dark\"> \r\n\t\t\tRoot \r\n\t\t</button>\r\n\t)\r\n\tkeyID += 1\r\n\t\r\n\tlet selectedDivisionFull = \"\"\r\n\t//let selectedDivision = \"\"\r\n\tlet selectedPerms = 0\r\n\t//let selectedID = -1\r\n\t\r\n\tif (props.currentCompanySelections.length > 0) {\r\n\t\t// Display the currently selected aspects...\r\n\t\t\r\n\t\tfor (let i = 0; i < props.currentCompanySelections.length; i++) {\r\n\t\t\t\r\n\t\t\t// The last iteration of this is the one we are on, before the currentLayer is reset...\r\n\t\t\tselectedDivisionFull += currentLayer[ props.currentCompanySelections[i] ][\"name\"] + \"/\"\r\n\r\n\t\t\t//selectedDivision = currentLayer[ props.currentCompanySelections[i] ][\"name\"]\r\n\t\t\tselectedPerms = currentLayer[ props.currentCompanySelections[i] ][\"perm\"]\r\n\t\t\t//selectedID = props.currentCompanySelections[i]\r\n\t\t\t\r\n\t\t\tlet thisClass = \"btn\"\r\n\t\t\tif ( currentLayer[props.currentCompanySelections[i]][\"perm\"] ) {\r\n\t\t\t\tthisClass += \" btn-secondary\"\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthisClass += \" btn-outline-secondary\"\r\n\t\t\t}\r\n\t\t\tbackLayerButtons.push(\r\n\t\t\t\t<button key={keyID} onClick={props.backLayer} value={i+1} className={thisClass}> \r\n\t\t\t\t\t{ currentLayer[props.currentCompanySelections[i]][\"name\"] } \r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\t\t\tkeyID += 1\r\n\t\t\t\r\n\t\t\t// Enter the currentLayer, one stage at a time...\r\n\t\t\tcurrentLayer = currentLayer[ props.currentCompanySelections[i] ].children\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tselectedDivisionFull = \"No Selection\"\r\n\t}\r\n\r\n\tlet currentLayerButtons = []\r\n\t// Display the current layer we are selecting...\r\n\tfor (let key in currentLayer) {\r\n\r\n\t\tlet thisClass = \"btn\"\r\n\t\tif ( currentLayer[key][\"perm\"] ) {\r\n\t\t\tthisClass += \" btn-primary\"\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthisClass += \" btn-outline-primary\"\r\n\t\t}\r\n\t\t\r\n\t\tcurrentLayerButtons.push(\r\n\t\t\t<button key={keyID} onClick={props.selectLayer} value={key} className={thisClass}>\r\n\t\t\t\t{currentLayer[key][\"name\"]}\r\n\t\t\t</button>\r\n\t\t)\r\n\t\tkeyID += 1\r\n\t}\r\n\t\r\n\t// If we got to this point without putting anything into the array...\r\n\tif (currentLayerButtons.length === 0) {\r\n\t\tcurrentLayerButtons.push(\r\n\t\t\t<div className=\"btn btn-outline-secondary\" key={keyID}> \r\n\t\t\t\tEnd of Data\r\n\t\t\t</div>\r\n\t\t)\r\n\t\tkeyID += 1\r\n\t}\r\n\t\r\n\tlet getButtonClass = \"btn \"\r\n\tif (selectedPerms > 0) {\r\n\t\tgetButtonClass += \"btn-success\"\r\n\t}\r\n\telse {\r\n\t\tgetButtonClass += \"btn-danger\"\r\n\t}\r\n\t\r\n\tlet errorCheckingClass = \"\"\r\n\tif (props.lastRequestStatus === false) {\r\n\t\terrorCheckingClass =' bg-danger'\r\n\t}\t\t\r\n\t\r\n\t// Example code... Can I alter this to be more my style?\r\n\t// It works, so its okay for now...\r\n\tconst toggleBlockType = (blockType) => {\r\n\t\tthis.onChange(\r\n\t\t\tRichUtils.toggleBlockType(\r\n\t\t\t\tthis.state.editorState,\r\n\t\t\t\tblockType\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\t\r\n\tconst toggleInlineStyle = (inlineStyle) => {\r\n\t\tthis.onChange(\r\n            RichUtils.toggleInlineStyle(\r\n\t\t\t\tthis.state.editorState,\r\n\t\t\t\tinlineStyle\r\n            )\r\n        );\r\n\t}\r\n\t\r\n\tconst handleKeyCommand = (command, editorState) => {\r\n\t\tconst newState = RichUtils.handleKeyCommand(editorState, command);\r\n\r\n\t\tif (newState) {\r\n\t\t\tprops.onChange(newState);\r\n\t\t\treturn 'handled';\r\n\t\t}\r\n\r\n\t\treturn 'not-handled';\r\n\t}\r\n\t\r\n\tlet placeholder = \"\"\r\n\r\n\treturn (\r\n\t\t<div className=\"makeView\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\r\n\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col my-2\">\r\n\t\t\t\t\t\t\t\t\t\t<div className={errorCheckingClass}>\r\n\t\t\t\t\t\t\t\t\t\t\tSelect Part of Company:\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col btn-group btn-group-sm\">\r\n\t\t\t\t\t\t\t\t\t\t{backLayerButtons}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col btn-group btn-group-sm\">\r\n\t\t\t\t\t\t\t\t\t\t{currentLayerButtons}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h4>Writing Suggestion for:</h4>\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col my-2\">\r\n\t\t\t\t\t\t\t\t\t\t<div className={errorCheckingClass}>\r\n\t\t\t\t\t\t\t\t\t\t\t{selectedDivisionFull}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t<BlockStyleControls\r\n\t\t\t\t\t\t\t\t\t\t\teditorState={props.editorState}\r\n\t\t\t\t\t\t\t\t\t\t\tonToggle={toggleBlockType}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<InlineStyleControls\r\n\t\t\t\t\t\t\t\t\t\t\teditorState={props.editorState}\r\n\t\t\t\t\t\t\t\t\t\t\tonToggle={toggleInlineStyle}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-1\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t<div id=\"align-left\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={styles.editor} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditorState={props.editorState}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleKeyCommand={handleKeyCommand}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tspellCheck={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-1\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t<button className={getButtonClass} onClick={props.saveToServer}> Save Suggestion </button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default withRouter(journalView);","import React, { useState, useEffect } from \"react\";\r\n//import Store from \"store\"\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { APIUserInviteCode, APIUserInvitesGet, APIUserInvitesSet, APIUserSettingsEdit, APIChangeUserEmail, APIChangeUserName, APIChangeUserPassword } from \"../../utils\";\r\n\r\nconst inviteType = ['Invalid', 'Admin', 'Viewer', 'Governed']\r\n\r\n// Trying this in function form instead of class\r\nconst UserProfile = (props) => {\r\n\r\n\tconst [inviteCode, setInviteCode] = useState(\"\");\r\n\t\r\n\tconst currentEmail = \"Not Yet\"\r\n\tconst currentFirstName = \"Not \"\r\n\tconst currentLastName = \"Implemented\"\r\n\t\r\n\t// Try this...\r\n\tconst [newEmail, setNewEmail] = useState(\"\");\r\n\tconst [newFirstName, setNewFirstName] = useState(\"\");\r\n\tconst [newLastName, setNewLastName] = useState(\"\");\r\n\t\r\n\tconst [oldPassword, setOldPassword] = useState( [] );\r\n\tconst [newPassword, setNewPassword] = useState( [] );\r\n\tconst [newPassword2, setNewPassword2] = useState( [] );\r\n\t\r\n\tconst [inviteIDList, setInviteIDList] = useState( [] );\r\n\tconst [inviteNamesList, setInviteNamesList] = useState( [] );\r\n\tconst [inviteRolesList, setInviteRolesList] = useState( [] );\r\n\t\r\n\tconst [delViews, setDelViews] = useState( [] );\r\n\tconst [togSends, setTogSends] = useState( [] );\r\n\tconst [delGoverns, setDelGoverns] = useState( [] );\r\n\t\r\n\tuseEffect(() => {    \r\n\t\t// Update the document title using the browser API    \r\n\t\tconsole.log(\"Triggered Refresh!\")\r\n\t\ttiggerReload()\r\n\t\t// This should be fine, for dependancies.. as this SHOULD NOT EVER refresh...\r\n\t}, []);\r\n\r\n\tfunction tiggerReload() {\r\n\t\tgetUserInvites()\r\n\t}\r\n\r\n\tfunction inviteSuccess(successCodes, successData) {\r\n\t\tconsole.log(\"Invite Success\")\r\n\t}\r\n\tfunction inviteFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Invite Failure\")\r\n\t\t// Is there an even better way to do this?\r\n\t\t// Like, hmmm... So this is literally one line? Beause the state has to be set here...\r\n\t\tfor (let i in errorCodes) {\r\n\t\t\tif (errorCodes[i] === 0) {\r\n\t\t\t\t// network Error\r\n\t\t\t}\r\n\t\t\telse if (errorCodes[i] === 1) {\r\n\t\t\t\t// Already on the list\r\n\t\t\t}\r\n\t\t\telse if (errorCodes[i] === 2) {\r\n\t\t\t\t// Code doesnt match anything...\r\n\t\t\t}\r\n\t\t\telse if (errorCodes[i] === 3) {\r\n\t\t\t\t// Invite already exists\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// unknown error\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction submitCode() {\r\n\t\tconsole.log(inviteCode)\r\n\t\tconsole.log(\"Submit\")\r\n\t\t\r\n\t\tAPIUserInviteCode( props.APIHost, props.authToken, inviteCode, inviteSuccess, inviteFailure )\r\n\t}\r\n\t\r\n\tfunction getInvitesSuccess(successData) {\r\n\t\tconsole.log(\"Get Invites Success\")\r\n\t\t//Store.set(props.currentUser+\"-Invites\", successData)\r\n\r\n\t\tlet IDList = []\r\n\t\tlet nameList = []\r\n\t\tlet roleList = []\r\n\t\t\r\n\t\tfor (let i in successData) {\r\n\t\t\t// This.... doesnt seem secure enough...\r\n\t\t\tIDList.push( successData[i][\"id\"] )\r\n\t\t\tnameList.push( successData[i][\"getUserFullName\"] )\r\n\t\t\troleList.push( inviteType[successData[i][\"targetRole\"]] )\r\n\t\t}\r\n\t\t\r\n\t\tsetInviteIDList(IDList)\r\n\t\tsetInviteNamesList(nameList)\r\n\t\tsetInviteRolesList(roleList)\r\n\t}\r\n\tfunction getInvitesFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Get Invites Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t}\r\n\tfunction getUserInvites() {\r\n\t\tlet checkData = undefined//Store.get(props.currentUser+\"-Invites\")\r\n\t\tif (checkData === undefined) {\r\n\t\t\tAPIUserInvitesGet( props.APIHost, props.authToken, getInvitesSuccess, getInvitesFailure )\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Data will do here...\")\r\n\t\t\tgetInvitesSuccess(checkData)\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction spendInviteSuccess(successData) {\r\n\t\tconsole.log(\"Spend Invite Success\")\r\n\t\tconsole.log(successData)\r\n\t\t\r\n\t\ttiggerReload()\r\n\t}\r\n\tfunction spendInviteFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Spend Invite Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t\t\r\n\t\ttiggerReload()\r\n\t}\r\n\tfunction inviteYes(event) {\r\n\t\tconsole.log(\"Accept\")\r\n\t\t\r\n\t\t// Lets do... 0 == Cancel\r\n\t\t// 1 == Accept\r\n\t\tlet action = 1\r\n\t\tlet targetInvite = event.target.value\r\n\t\tAPIUserInvitesSet( props.APIHost, props.authToken, targetInvite, action, spendInviteSuccess, spendInviteFailure )\r\n\t}\r\n\tfunction inviteNo(event) {\r\n\t\tconsole.log(\"Deny\")\r\n\r\n\t\t// 0 == Cancel\r\n\t\t// 1 == Accept\r\n\t\tlet action = 0\r\n\t\tlet targetInvite = event.target.value\r\n\t\t\r\n\t\tAPIUserInvitesSet( props.APIHost, props.authToken, targetInvite, action, spendInviteSuccess, spendInviteFailure )\r\n\t}\r\n\t\r\n\tfunction toggleDelete(event) {\r\n\t\tlet valueInt = Number(event.target.value)\r\n\t\t//console.log(\"Leave\")\r\n\t\t//console.log(valueInt)\r\n\t\t\r\n\t\tlet temp = []\r\n\t\tlet index = -1\r\n\t\tswitch(event.target.name) {\r\n\t\t\tcase \"gov\":\r\n\t\t\t\ttemp = delGoverns.slice()\r\n\t\t\t\t// It was NOT found, so add it\r\n\t\t\t\tindex = temp.indexOf( valueInt )\r\n\t\t\t\tif ( index === -1) {\r\n\t\t\t\t\ttemp.push( valueInt )\r\n\t\t\t\t}\r\n\t\t\t\t// It WAS found, so delete it\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemp.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t\tsetDelGoverns(temp)\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sen\":\r\n\t\t\t\ttemp = togSends.slice()\r\n\t\t\t\t// It was NOT found, so add it\r\n\t\t\t\tindex = temp.indexOf( valueInt )\r\n\t\t\t\tif ( index === -1) {\r\n\t\t\t\t\ttemp.push( valueInt )\r\n\t\t\t\t}\r\n\t\t\t\t// It WAS found, so delete it\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemp.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t\tsetTogSends(temp)\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vie\":\r\n\t\t\t\ttemp = delViews.slice()\r\n\t\t\t\t// It was NOT found, so add it\r\n\t\t\t\tindex = temp.indexOf( valueInt )\r\n\t\t\t\tif ( index === -1) {\r\n\t\t\t\t\ttemp.push( valueInt )\r\n\t\t\t\t}\r\n\t\t\t\t// It WAS found, so delete it\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemp.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t\tsetDelViews(temp)\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"Failed to have the correct name\")\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction codeFieldChange(event) {\r\n\t\tsetInviteCode(event.target.value)\r\n\t}\r\n\tfunction oldPasswordChange(event) {\r\n\t\tsetOldPassword(event.target.value)\r\n\t}\r\n\tfunction newPasswordChange(event) {\r\n\t\tsetNewPassword(event.target.value)\r\n\t}\r\n\tfunction newPassword2Change(event) {\r\n\t\tsetNewPassword2(event.target.value)\r\n\t}\r\n\tfunction newEmailChange(event) {\r\n\t\tsetNewEmail(event.target.value)\r\n\t}\r\n\tfunction newNewFirstChange(event) {\r\n\t\tsetNewFirstName(event.target.value)\r\n\t}\r\n\tfunction newLastNameChange(event) {\r\n\t\tsetNewLastName(event.target.value)\r\n\t}\r\n\t\t\r\n\tfunction changeGeneralSuccess(successData) {\r\n\t\tconsole.log(\"Update Success\")\r\n\t\tconsole.log(successData)\r\n\t\t// Set some sort of success!?\r\n\t\t\r\n\t}\r\n\tfunction changeGeneralFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Update Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t\t// Show some error\r\n\t}\r\n\t\r\n\tfunction changeEmail() {\r\n\t\t// Verify first...\r\n\t\tAPIChangeUserEmail( props.APIHost, props.authToken, newEmail, changeGeneralSuccess, changeGeneralFailure )\r\n\t\tsetNewEmail(\"\")\r\n\t}\r\n\t\r\n\tfunction changeName() {\r\n\t\tAPIChangeUserName( props.APIHost, props.authToken, newFirstName, newLastName, changeGeneralSuccess, changeGeneralFailure )\r\n\t\tsetNewFirstName(\"\")\r\n\t\tsetNewLastName(\"\")\r\n\t}\r\n\t\r\n\tfunction changePassword() {\r\n\t\tAPIChangeUserPassword( props.APIHost, props.authToken, oldPassword, newPassword, newPassword2, changeGeneralSuccess, changeGeneralFailure )\r\n\t\tsetOldPassword(\"\")\r\n\t\tsetNewPassword(\"\")\r\n\t\tsetNewPassword2(\"\")\r\n\t}\r\n\t\r\n\tfunction setSuccess(successData) {\r\n\t\tconsole.log(\"Set Data Success\")\r\n\t\tconsole.log(successData)\r\n\t\t\r\n\t\t// This needs to be a props refresh..\r\n\t\tprops.triggerRefresh()\r\n\t}\r\n\tfunction setFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Set Data Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t}\r\n\tfunction saveChanges() {\r\n\t\tlet testData = {\r\n\t\t\t\r\n\t\t\t// Hmm, perhaps the generic way wont work...\r\n\t\t\t//\"delViews\":delViews,\r\n\t\t\t\"togEmails\":togSends,\r\n\t\t\t\"delGovern\":delGoverns,\r\n\t\t}\r\n\t\t\r\n\t\tAPIUserSettingsEdit( props.APIHost, props.authToken, testData, setSuccess, setFailure )\r\n\t}\r\n\t\r\n\tlet invitesDisplayList = []\r\n\tfor (let i in inviteNamesList) {\r\n\t\tlet extra = \"\"\r\n\t\tinvitesDisplayList.push(\r\n\t\t\t<li className={\"list-group-item d-flex justify-content-around\"+extra} key={i}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{inviteNamesList[i]}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{inviteRolesList[i]}\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"badge badge-success badge-pill\" value={inviteIDList[i]} onClick={inviteYes}>/</button>\r\n\t\t\t\t<button className=\"badge badge-danger badge-pill\" value={inviteIDList[i]} onClick={inviteNo}>X</button>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\tif (inviteNamesList.length === 0) {\r\n\t\tinvitesDisplayList.push(\r\n\t\t\t<li className=\"list-group-item\" key={0}>\r\n\t\t\t\tNo Invites!\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\t\r\n\tlet displayViewSends = []\r\n\tif (props.viewNameList.length > 0) {\r\n\t\tfor (let i in props.viewNameList) {\r\n\t\t\tlet extra = \"\"\r\n\t\t\t\r\n\t\t\t// Blank will just be admin/view for now... Highlighted in green means Email...\r\n\t\t\tlet index = props.sendIDList.indexOf(props.viewIDList[i])\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\textra = 'bg-success'\r\n\t\t\t}\r\n\t\t\t// Sends we are toggling....\r\n\t\t\tindex = togSends.indexOf(props.viewIDList[i])\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\textra = 'bg-warning'\r\n\t\t\t}\r\n\t\t\t// Views we are deleting\r\n\t\t\tindex = delViews.indexOf(props.viewIDList[i])\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\textra = 'bg-danger'\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdisplayViewSends.push(\r\n\t\t\t\t<li key={i} className={\"list-group-item d-flex justify-content-around \"+extra}>\r\n\t\t\t\t\t{props.viewNameList[i]}\r\n\t\t\t\t\t<button className=\"badge badge-success badge-pill\" name=\"sen\" value={props.viewIDList[i]} onClick={toggleDelete}>View</button>\r\n\t\t\t\t\t<button className=\"badge badge-danger badge-pill\" name=\"vie\" value={props.viewIDList[i]} onClick={toggleDelete}>X</button>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// There was nothing\r\n\t\tdisplayViewSends.push(\r\n\t\t\t<li key={0} className=\"list-group-item d-flex justify-content-around\">\r\n\t\t\t\tNone!\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\t\r\n\tlet displayOwningCompanyList = []\r\n\tif (props.governedNameList.length > 0) {\r\n\t\tfor (let i in props.governedNameList) {\r\n\t\t\tlet extra = \"\"\r\n\t\t\tlet index = delGoverns.indexOf(props.governedIDList[i])\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\textra = 'bg-danger'\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdisplayOwningCompanyList.push(\r\n\t\t\t\t<li key={i} className={\"list-group-item d-flex justify-content-around \"+extra}>\r\n\t\t\t\t\t{props.governedNameList[i]}\r\n\t\t\t\t\t<button className=\"badge badge-danger badge-pill\" name=\"gov\" value={props.governedIDList[i]} onClick={toggleDelete}>X</button>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// There was nothing\r\n\t\tdisplayOwningCompanyList.push(\r\n\t\t\t<li key={0} className=\"list-group-item d-flex justify-content-around\">\r\n\t\t\t\tNone!\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\r\n\tlet emailClass = 'form-control'\r\n\t//if (this.state.emailError) {\r\n\t//\temailClass += ' bg-warning'\r\n\t//}\r\n\r\n\tlet passwordClass = 'form-control'\r\n\t//if (passwordError) {\r\n\t//\tpasswordClass += ' bg-warning'\r\n\t//}\r\n\r\n\treturn (\r\n\t\t<div className=\"defaultView\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Invite Code</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\t<input type='text' className='form-control' value={inviteCode} onChange={codeFieldChange} placeholder='Enter Code' />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={submitCode}>\r\n\t\t\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Company Invites</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t{invitesDisplayList}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Companies you can View data for</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t{displayViewSends}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#deleteConfirm\">\r\n\t\t\t\t\t\t\t\t\tConfirm\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Companies getting your Journal Info</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t{displayOwningCompanyList}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#deleteConfirm\">\r\n\t\t\t\t\t\t\t\t\tConfirm\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Edit User Security Details</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\tUnder Construction...\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t{currentEmail}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#changeEmailModal\">\r\n\t\t\t\t\t\t\t\t\t\t\tChange Email\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t{currentFirstName + \" \" + currentLastName}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#changeNameModal\">\r\n\t\t\t\t\t\t\t\t\t\t\tChange Name\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#changePasswordModal\">\r\n\t\t\t\t\t\t\t\t\t\t\tChange Password\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t<div className=\"modal fade\" id=\"deleteConfirm\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"deleteConfirmation\" aria-hidden=\"true\">\r\n\t\t\t\t  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t  <div className=\"modal-header\">\r\n\t\t\t\t\t\t<h5 className=\"modal-title\" id=\"deleteTitleConfirm\">Delete Confirmation</h5>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t\t\t\t  <span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-body\">\r\n\t\t\t\t\t\tAre you SURE you want to make these changes? \r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-footer\">\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={saveChanges}>Yes</button>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">No</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"modal fade\" id=\"changeEmailModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"changeEmailModal\" aria-hidden=\"true\">\r\n\t\t\t\t  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t  <div className=\"modal-header\">\r\n\t\t\t\t\t\t<h5 className=\"modal-title\" id=\"deleteTitleConfirm\">Change Password</h5>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t\t\t\t  <span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-body\">\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label id=\"align-left\">{\"Current Email: \" + currentEmail}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label id=\"align-left\">New Email</label>\r\n\t\t\t\t\t\t\t\t<input type='email' className={emailClass} value={newEmail} onChange={newEmailChange} placeholder='Enter Email' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-footer\">\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-outline-secondary\" data-dismiss=\"modal\" onClick={changeEmail}>Change Email</button>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"modal fade\" id=\"changeNameModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"changeNameModal\" aria-hidden=\"true\">\r\n\t\t\t\t  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t  <div className=\"modal-header\">\r\n\t\t\t\t\t\t<h5 className=\"modal-title\" id=\"deleteTitleConfirm\">Change Password</h5>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t\t\t\t  <span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-body\">\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label id=\"align-left\">{\"Current name: \" + currentFirstName + \" \" + currentLastName}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label id=\"align-left\">New First Name</label>\r\n\t\t\t\t\t\t\t\t<input type='text' className={emailClass} value={newFirstName} onChange={newNewFirstChange} placeholder='Enter New First Name' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label id=\"align-left\">New Last Name</label>\r\n\t\t\t\t\t\t\t\t<input type='text' className={emailClass} value={newLastName} onChange={newLastNameChange} placeholder='Enter New Last Name' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-footer\">\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-outline-secondary\" data-dismiss=\"modal\" onClick={changeName}>Change Name</button>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"modal fade\" id=\"changePasswordModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"changePasswordModal\" aria-hidden=\"true\">\r\n\t\t\t\t  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t  <div className=\"modal-header\">\r\n\t\t\t\t\t\t<h5 className=\"modal-title\" id=\"deleteTitleConfirm\">Change Password</h5>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t\t\t\t  <span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-body\">\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label id=\"align-left\">Old Password</label>\r\n\t\t\t\t\t\t\t\t<input type='password' className={passwordClass} value={oldPassword} onChange={oldPasswordChange} placeholder='Enter password' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label id=\"align-left\">New Password</label>\r\n\t\t\t\t\t\t\t\t<input type='password' className={passwordClass} value={newPassword} onChange={newPasswordChange} placeholder='Enter password' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label id=\"align-left\">New Password (again)</label>\r\n\t\t\t\t\t\t\t\t<input type='password' className={passwordClass} value={newPassword2} onChange={newPassword2Change} placeholder='Enter password' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"modal-footer\">\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-outline-secondary\" data-dismiss=\"modal\" onClick={changePassword}>Change Password</button>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default withRouter(UserProfile);","import React from \"react\";\r\n\r\n//import { useEffect } from \"react\"\r\n\r\nimport Calendar from 'react-calendar'\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { Radar, Bar } from 'react-chartjs-2';\r\n\r\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap';\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n//import {isLoggedIn} from '../../utils';\r\nimport {getRadarEmotionData } from '../../utils';\r\nimport {getRadarEmotionOptions, stackedBarOptions} from '../../utils';\r\n\r\nimport { stacked3BarData1Data, stacked2BarData1Data, stacked1BarData1Data } from '../../utils';\r\n\r\n// This is very lean...\r\nconst parseEmotion = (emotionData) => {\r\n\t\r\n\tlet derp = [emotionData.joy, emotionData.anger, emotionData.sadness, emotionData.disgust, emotionData.fear]\r\n\treturn derp;\r\n}\r\n\r\n// Maybe I should move this to getting it from the data...\r\nconst AIAspect = [\r\n    { name: 'Emotion', value: 'emotion' },\r\n    { name: 'Sentiment', value: 'sentiment' },\r\n    { name: 'Entities', value: 'entities' },\r\n\t{ name: 'Keywords', value: 'keywords' },\r\n\t//{ name: 'Relations', value: 'relations' },\r\n];\r\n\r\n// This doesnt look right... Fix this later I guess\r\n/*this.onChange = (editorState) => this.setState({editorState});\r\nthis.setEditor = (editor) => {\r\n\tthis.editor = editor;\r\n};*/\r\n\r\n// Perhaps the journal would be set here instead?\r\n// I CAN use hooks if need be. So I will note that to try once I get this up and running...\r\n// And can check performance...\r\n\r\n// Main Function\r\nconst JournalView = (props) => {\r\n\t\t\r\n\tconst tileClassName = ({ date, view }) => {\r\n\t\r\n\t\t// Add class to tiles in month view only\r\n\t\tif (view === 'month') {\r\n\t\t\t\r\n\t\t\tconst checkDate = date.getFullYear()+\"-\"+date.getMonth()+\"-\"+date.getDate()\r\n\r\n\t\t\t// Check if a date React-Calendar wants to check is on the list of dates to add class to\r\n\t\t\tconst hasJournal = props.validJournalDates.find( element => element === checkDate)\r\n\t\t\tconst hasAI = props.validJournalScanDates.find( element => element === checkDate)\r\n\t\t\t\r\n\t\t\tif (hasAI) {\r\n\t\t\t\treturn 'btn btn-success';\r\n\t\t\t} else if (hasJournal) {\r\n\t\t\t\treturn 'btn btn-warning'\r\n\t\t\t} else {\r\n\t\t\t\t// use the default styling...\r\n\t\t\t\t//return 'btn btn-outline-dark'\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tlet displayPromptSentance = \"Displaying Data for Journal with prompt: \" + props.selectedPrompt\r\n\t\r\n\tlet index;\r\n\t\r\n\tlet dayData = props.dataSet\r\n\tlet promptList = []\r\n\t\r\n\tlet tableDisplay = []\r\n\tlet displayStats = []\r\n\t//let promptName = \"Invalid Prompt\"\r\n\t\r\n\tif (!(dayData === null) && !(dayData === undefined)) {\r\n\t\t\r\n\t\tlet key;\r\n\t\tfor (key in dayData) {\r\n\r\n\t\t\tif ( !(dayData[key].name === undefined) ) {\r\n\t\t\t\tpromptList.push( {name:dayData[key].name, value:key} )\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// At this point if the array is still empty,we have nothing...\r\n\t\tif (promptList.length === 0) {\r\n\t\t\tpromptList = [{name:\"No Prompts\", value:\"None\"}]\r\n\t\t}\r\n\t\t\r\n\t\tlet sanityCheck = props.selectedAspect in dayData\r\n\t\tif (sanityCheck) {\r\n\t\t\t//promptName = dayData[props.selectedPrompt][\"name\"]\r\n\t\t\t//displayPromptSentance = \"Showing Data for prompt: \" + promptName\r\n\t\t\t\r\n\t\t\t//let dataSet = dayData[props.selectedPrompt][\"data\"][props.selectedAspect]\r\n\t\t\tlet dataSet = dayData[props.selectedAspect]\r\n\t\t\t\r\n\t\t\tswitch(props.selectedAspect) {\r\n\t\t\t\tcase 'emotion':\r\n\t\t\t\t\tlet emoValue = parseEmotion( dataSet.document.emotion )\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet dataDocEmo = getRadarEmotionData( emoValue )\r\n\t\t\t\t\tlet emoOptions = getRadarEmotionOptions()\r\n\t\t\t\t\r\n\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t<div className=\"row m-2\" key=\"2\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\tEmotion Values\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t<Radar data={dataDocEmo} options={emoOptions} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'sentiment':\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst dataBarStack = stacked1BarData1Data( [dataSet.document.score] )\r\n\t\t\t\t\tconst barStackOptions = stackedBarOptions()\r\n\t\t\t\t\r\n\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t<div className=\"row m-2\" key=\"2\">\r\n\t\t\t\t\t\t\t<div className=\"col\" />\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\tSentiment Values\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t<Bar data={dataBarStack} options={barStackOptions} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'entities':\r\n\t\t\t\t\t\r\n\t\t\t\t\t//console.log(dataSet)\r\n\t\t\t\t\tfor (index in dataSet) {\r\n\t\t\t\t\t\tlet entity = dataSet[index]\r\n\t\t\t\t\t\t//console.log(entity)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet emoVal = parseEmotion( entity.emotion )\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet emoData = getRadarEmotionData( emoVal)\r\n\t\t\t\t\t\tlet emoOptions = getRadarEmotionOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst dataEntSent = stacked3BarData1Data(\r\n\t\t\t\t\t\t\t[entity.confidence, entity.relevance, entity.sentiment.score],\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tconst dataEntOptions = stackedBarOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttableDisplay.push(\r\n\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t<th scope=\"row\">{entity.text}</th>\r\n\t\t\t\t\t\t\t\t<td>{entity.type}</td>\r\n\t\t\t\t\t\t\t\t<td>{entity.count}</td>\r\n\t\t\t\t\t\t\t\t<td colSpan=\"3\"><Bar data={dataEntSent} options={dataEntOptions} /></td>\r\n\t\t\t\t\t\t\t\t<td><Radar data={emoData} options={emoOptions} /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t<table className=\"table\" key=\"2\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Type</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Confidence</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Relevance</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Sentiment</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Emotion</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{tableDisplay}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t)\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'keywords':\r\n\t\t\t\t\r\n\t\t\t\t\tfor (index in dataSet) {\r\n\t\t\t\t\t\tlet keyData = dataSet[index]\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet emoVal = parseEmotion( keyData.emotion )\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst dataRadar = getRadarEmotionData( emoVal )\r\n\t\t\t\t\t\tconst dataRadarOptions = getRadarEmotionOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconsole.log(keyData)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst dataKeySent = stacked2BarData1Data(\r\n\t\t\t\t\t\t\t[keyData.relevance, keyData.sentiment.score], \r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tconst dataKeyOptions = stackedBarOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttableDisplay.push(\r\n\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t<th scope=\"row\">{keyData.text}</th>\r\n\t\t\t\t\t\t\t\t<td>{keyData.count}</td>\r\n\t\t\t\t\t\t\t\t<td colSpan=\"2\"><Bar data={dataKeySent} options={dataKeyOptions} /></td>\r\n\t\t\t\t\t\t\t\t<td><Radar data={dataRadar} options={dataRadarOptions} /></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t<table className=\"table\" key=\"2\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Relevance Score</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Sentiment</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Emotion</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{tableDisplay}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t)\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.log(\"Invalid AI selection somehow\")\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tpromptList = [{name:\"No Prompts\", value:\"None\"}]\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tpromptList = [{name:\"No Prompts\", value:\"None\"}]\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"mainView\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\r\n\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t<div className=\"col- col-lg-2 m-2\">\t\t\t\t\t\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Calendar \r\n\t\t\t\t\t\t\t\tonChange={props.pickDate}\r\n\t\t\t\t\t\t\t\tvalue={props.currentDate}\r\n\t\t\t\t\t\t\t\ttileClassName={tileClassName}\r\n\r\n\t\t\t\t\t\t\t\tminDetail={'year'}\r\n\t\t\t\t\t\t\t\tmaxDetail={'month'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col m-2\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<div>{props.displayMessage}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t<ButtonGroup toggle>\r\n\t\t\t\t\t\t\t\t\t\t\t{promptList.map((radio, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={props.selectedPrompt === radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.setPrompt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{radio.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t<ButtonGroup toggle>\r\n\t\t\t\t\t\t\t\t\t\t\t{AIAspect.map((radio, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"info\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={props.selectedAspect === radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.setAI}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{radio.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<div>Journal Contents:</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<p>{props.currentJournal}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<div>{displayPromptSentance}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t{displayStats}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"row  my-2\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default withRouter(JournalView);","import React from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n//import Store from \"store\"\r\n// ContentState, EditorState, convertToRaw, convertFromRaw \r\nimport {Editor, RichUtils, } from 'draft-js';\r\n\r\nconst styles = {\r\n  editor: {\r\n    border: '1px solid gray',\r\n    minHeight: '6em',\r\n\tjustifyContent: 'left',\r\n  }\r\n};\r\n\r\n// START OF EXAMPLE CODE FROM THE DRAFT.JS!!!!!\r\nclass StyleButton extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.onToggle = (e) => {\r\n\t\t\t//console.log(this.props.style)\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.props.onToggle(this.props.style);\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet className = 'btn btn-outline-primary';\r\n\t\tif (this.props.active) {\r\n\t\t\tclassName += ' active';\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<button className={className} onClick={this.onToggle}>\r\n\t\t\t\t{this.props.label}\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst BLOCK_TYPES = [\r\n\t{label: 'H1', style: 'header-one'},\r\n\t{label: 'H2', style: 'header-two'},\r\n\t{label: 'H3', style: 'header-three'},\r\n\t{label: 'H4', style: 'header-four'},\r\n\t{label: 'H5', style: 'header-five'},\r\n\t{label: 'H6', style: 'header-six'},\r\n\t//{label: 'Blockquote', style: 'blockquote'},\r\n\t{label: 'UL', style: 'unordered-list-item'},\r\n\t{label: 'OL', style: 'ordered-list-item'},\r\n\t//{label: 'Code Block', style: 'code-block'},\r\n];\r\n\r\nconst BlockStyleControls = (props) => {\r\n\tconst {editorState} = props;\r\n\tconst selection = editorState.getSelection();\r\n\tconst blockType = editorState\r\n\t  .getCurrentContent()\r\n\t  .getBlockForKey(selection.getStartKey())\r\n\t  .getType();\r\n\r\n\treturn (\r\n\t\t<div className=\"RichEditor-controls\">\r\n\t\t\t{BLOCK_TYPES.map((type) =>\r\n\t\t\t\t<StyleButton\r\n\t\t\t\t\tkey={type.label}\r\n\t\t\t\t\tactive={type.style === blockType}\r\n\t\t\t\t\tlabel={type.label}\r\n\t\t\t\t\tonToggle={props.onToggle}\r\n\t\t\t\t\tstyle={type.style}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst INLINE_STYLES = [\r\n\t{label: 'Bold', style: 'BOLD'},\r\n\t{label: 'Italic', style: 'ITALIC'},\r\n\t{label: 'Underline', style: 'UNDERLINE'},\r\n\t//{label: 'Monospace', style: 'CODE'},\r\n];\r\n\r\nconst InlineStyleControls = (props) => {\r\n\tconst currentStyle = props.editorState.getCurrentInlineStyle();\r\n\t\r\n\treturn (\r\n\t\t<div className=\"RichEditor-controls\">\r\n\t\t\t{INLINE_STYLES.map((type) =>\r\n\t\t\t\t<StyleButton\r\n\t\t\t\t\tkey={type.label}\r\n\t\t\t\t\tactive={currentStyle.has(type.style)}\r\n\t\t\t\t\tlabel={type.label}\r\n\t\t\t\t\tonToggle={props.onToggle}\r\n\t\t\t\t\tstyle={type.style}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// END OF THE EXAMPLE CODE!!!\r\n/*const saveEditorData = () => {\r\n\tStore.set( \"TodayTest\", convertToRaw(this.state.editorState.getCurrentContent()) )\r\n}\r\n\r\nconst loadEditorData = () => {\r\n\tlet loadedEditor = convertFromRaw(Store.get(\"TodayTest\"))\r\n\t//console.log(loadedEditor)\r\n\t\r\n\tthis.setState({\r\n\t\teditorState: EditorState.createWithContent(loadedEditor)\r\n\t})\r\n}*/\r\n\r\n// This contains the EditorJS code... So lets do it last as I am unsure as of what to do...\r\nconst journalView = (props) => {\r\n\t\r\n\t// Example code... Can I alter this to be more my style?\r\n\t// It works, so its okay for now...\r\n\tconst toggleBlockType = (blockType) => {\r\n\t\tprops.onChange(\r\n\t\t\tRichUtils.toggleBlockType(\r\n\t\t\t\tprops.editorState,\r\n\t\t\t\tblockType\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\t\r\n\tconst toggleInlineStyle = (inlineStyle) => {\r\n\t\tprops.onChange(\r\n            RichUtils.toggleInlineStyle(\r\n\t\t\t\tprops.editorState,\r\n\t\t\t\tinlineStyle\r\n            )\r\n        );\r\n\t}\r\n\t\r\n\tconst handleKeyCommand = (command, editorState) => {\r\n\t\tconst newState = RichUtils.handleKeyCommand(editorState, command);\r\n\r\n\t\tif (newState) {\r\n\t\t\tprops.onChange(newState);\r\n\t\t\treturn 'handled';\r\n\t\t}\r\n\r\n\t\treturn 'not-handled';\r\n\t}\r\n\t\r\n\tlet placeholder = \"\"\r\n\tlet promptType = \"Open Ended\"\r\n\r\n\treturn (\r\n\t\t<div className=\"makeView\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h4>Writing Today's Journal</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<h5 className=\"card-title\">Today's Prompt is: {promptType}</h5>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t<BlockStyleControls\r\n\t\t\t\t\t\t\t\t\t\t\teditorState={props.editorState}\r\n\t\t\t\t\t\t\t\t\t\t\tonToggle={toggleBlockType}\r\n\t\t\t\t\t\t\t\t\t\t/> \r\n\t\t\t\t\t\t\t\t\t\t<InlineStyleControls\r\n\t\t\t\t\t\t\t\t\t\t\teditorState={props.editorState}\r\n\t\t\t\t\t\t\t\t\t\t\tonToggle={toggleInlineStyle}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-1\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t<div id=\"align-left\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={styles.editor} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditorState={props.editorState}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleKeyCommand={handleKeyCommand}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tspellCheck={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-1\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-outline-primary\" onClick={props.saveToServer}> Save current Journal entry </button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default withRouter(journalView);","import React from \"react\";\r\n//import axios from \"axios\";\r\n\r\nimport { withRouter, } from \"react-router-dom\";\r\n\r\n//import Store from \"store\"\r\n\r\n//import { ProgressBar } from 'react-bootstrap';\r\n\r\nimport { Line } from 'react-chartjs-2';\r\nimport { arbitraryLineData } from '../../utils';\r\nimport { arbitraryLineOptions } from '../../utils';\r\n\r\n// Test Data crap from that utils...\r\n//import { generateTestEHIX, generateTestEHIY } from '../utils';\r\n\r\nclass StyleButton extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.onToggle = (e) => {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.props.onToggle(this.props.value);\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet className = 'btn btn-outline-primary';\r\n\t\tif (this.props.active) {\r\n\t\t\tclassName += ' active';\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<button className={className} onClick={this.onToggle}>\r\n\t\t\t\t{this.props.label}\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// Hm, this may be okay? The value should be its index...?\r\nconst historyGraphTimings = [\r\n\t{label:'Max', value:0, dayLength:0, weekLength:0},\r\n\t{label:'1Year', value:1, dayLength:365, weekLength:52},\r\n\t{label:'6Months', value:2, dayLength:183, weekLength:28},\r\n\t{label:'3Months', value:3, dayLength:63, weekLength:13},\r\n\t{label:'1Months', value:4, dayLength:31,  weekLength:4},\r\n\t{label:'1Week', value:5, dayLength:7, weekLength:1},\r\n];\r\n\r\nconst GraphTimingButtons = (props) => {\r\n\tconst currentDisplay = props.graphState;\r\n\t\r\n\treturn (\r\n\t\t<div className=\"EHIControls\">\r\n\t\t\t{historyGraphTimings.map((type) =>\r\n\t\t\t\t<StyleButton\r\n\t\t\t\t\tkey={type.label}\r\n\t\t\t\t\tactive={currentDisplay === type.value}\r\n\t\t\t\t\tlabel={type.label}\r\n\t\t\t\t\tonToggle={props.onToggle}\r\n\t\t\t\t\tvalue={type.value}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n// This will show the EHI in chart form...\r\nconst EHIDisplay = (props) => {\r\n\t\r\n\tconst currentDayTimeIndex = props.timeIndexDay\r\n\tconst currentWeekTimeIndex = props.timeIndexWeek\r\n\t\r\n\tconst dayLabels = props.ehiDayLabels\r\n\tconst dayData = props.ehiDayData\r\n\t\r\n\tlet dayCount = historyGraphTimings[currentDayTimeIndex].dayLength\r\n\tif (dayCount === 0) {\r\n\t\tdayCount = dayLabels.length\r\n\t}\r\n\t\r\n\tlet ehiDaysLabels = dayLabels.slice(-dayCount)\r\n\tlet ehiDaysData = {\r\n\t\tlabel:\"EHI index\",\r\n\t\t// May not have to slice the second time?\r\n\t\tdata:dayData.slice(-dayCount)\r\n\t}\r\n\t\r\n\tconst weekLabels = props.ehiWeekLabels\r\n\tconst weekData = props.ehiWeekData\r\n\t\r\n\tdayCount = historyGraphTimings[currentWeekTimeIndex].weekLength\r\n\tif (dayCount === 0) {\r\n\t\tdayCount = weekLabels.length\r\n\t}\r\n\t\r\n\tlet ehiWeeksLabels = weekLabels.slice(-dayCount)\r\n\tlet ehiWeeksData = {\r\n\t\tlabel:\"EHI index\",\r\n\t\t// May not have to slice the second time?\r\n\t\tdata:weekData.slice(-dayCount)\r\n\t}\r\n\t\r\n\tif (ehiWeeksLabels.length === 1) {\r\n\t\tehiWeeksLabels.unshift(\"\")\r\n\t\tehiWeeksLabels.push(\"\")\r\n\t\t\r\n\t\tehiWeeksData.data.unshift(ehiWeeksData.data[0])\r\n\t\tehiWeeksData.data.push(ehiWeeksData.data[0])\r\n\t}\r\n\t\r\n\tlet lineDataDays = arbitraryLineData(ehiDaysLabels, [ehiDaysData])\r\n\tlet lineDataWeeks = arbitraryLineData(ehiWeeksLabels, [ehiWeeksData])\r\n\tlet lineOptions = arbitraryLineOptions()\r\n\t\r\n\treturn (\r\n\t\t<div className=\"EHIDisplay\">\r\n\t\t\t<div className=\"row m-1\">\r\n\t\t\t\t<div className=\"col-6\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\tEmployee Health Index Daily Data\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<Line\r\n\t\t\t\t\t\t\t\tdata={lineDataDays} \r\n\t\t\t\t\t\t\t\toptions={lineOptions}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<GraphTimingButtons\r\n\t\t\t\t\t\t\t\tgraphState={currentDayTimeIndex}\r\n\t\t\t\t\t\t\t\tonToggle={props.onDayToggle}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-6\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\tEmployee Health Index Weekly Data\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<Line\r\n\t\t\t\t\t\t\t\tdata={lineDataWeeks} \r\n\t\t\t\t\t\t\t\toptions={lineOptions}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<GraphTimingButtons\r\n\t\t\t\t\t\t\t\tgraphState={currentWeekTimeIndex}\r\n\t\t\t\t\t\t\t\tonToggle={props.onWeekToggle}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default withRouter(EHIDisplay);","import React, { useState, useEffect  } from \"react\";\r\n//import Store from \"store\"\r\n\r\nimport { APIDivisionInvitesCreate, APIDivisionInvitesSet, APIDivisionSettingsEdit, APIDivisionSettingsGet, APIDivisionInvitesGet } from \"../../utils\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst viewingPermsCheck = ['Public', 'Private', 'Governed Users']\r\nconst inviteType = ['Invalid', 'Admin', 'Viewer', 'Governed']\r\n\r\nconst CompanySettings = (props) => {\r\n\t\r\n\t// Because these are in here, these are NOT SAVED!\r\n\tconst [inviteCode, setInviteCode] = useState( \"No Data\" );\r\n\t\r\n\t// These should be fine to keep this way...\r\n\tconst [targetUser, setTargetUser] = useState( \"\" );\r\n\tconst [targetRole, setTargetRole] = useState( \"\" );\r\n\t\r\n\tconst [inviteIDList, setInviteIDList] = useState( [] );\r\n\tconst [inviteNamesList, setInviteNamesList] = useState( [] );\r\n\tconst [inviteRolesList, setInviteRolesList] = useState( [] );\r\n\t\r\n\tconst [viewPerms, setViewPerms] = useState( \"No Data\" );\r\n\tconst [expiryDate, setExpiryDate] = useState( \"No Data\" );\t\r\n\t\r\n\tconst [companyFullName, setCompanyFullName] = useState( \"No Data\" );\r\n\tconst [divisionName, setDivisionName] = useState( \"No Data\" );\r\n\t\r\n\tconst [adminsIDs, setAdminsIDs] = useState( [] );\r\n\tconst [viewsIDs, setViewsIDs] = useState( [] );\r\n\tconst [sendsIDs, setSendsIDs] = useState( [] );\r\n\tconst [governsIDs, setGovernsIDs] = useState( [] );\r\n\t\r\n\tconst [admins, setAdmins] = useState( [] );\r\n\tconst [views, setViews] = useState( [] );\r\n\tconst [sends, setSends] = useState( [] );\r\n\tconst [governs, setGoverns] = useState( [] );\r\n\t\r\n\tconst [delAdmins, setDelAdmins] = useState( [] );\r\n\tconst [delViews, setDelViews] = useState( [] );\r\n\tconst [delSends, setDelSends] = useState( [] );\r\n\tconst [delGoverns, setDelGoverns] = useState( [] );\r\n\t\r\n\tconst [numChild, setNumChild] = useState( 0 );\r\n\t\r\n\tuseEffect(() => {    \r\n\t\t// Update the document title using the browser API    \r\n\t\tconsole.log(\"Triggered Refresh!\")\r\n\t\ttiggerReload()\r\n\t\t// This should be fine, for dependancies.. as this SHOULD NOT EVER refresh other than the base one...\r\n\t}, []);\r\n\t\r\n\tfunction tiggerReload() {\r\n\t\tgetDivisionData()\r\n\t\tgetDivisionsInvites()\r\n\t}\r\n\t\r\n\tfunction getSuccess(successData) {\r\n\t\tconsole.log(\"Get Data Success\")\r\n\t\t//Store.set(props.currentDivisionID+\"-Data\", successData)\r\n\t\t\r\n\t\tsetCompanyFullName( successData[\"fullPathName\"] )\r\n\t\tsetDivisionName( successData[\"divisionName\"] )\r\n\t\tsetNumChild( successData[\"getNumChildUsers\"] )\r\n\t\t\r\n\t\tsetInviteCode( successData[\"inviteCode\"] )\r\n\t\t\r\n\t\tsetExpiryDate( successData[\"getCompanyExpiryDate\"] )\r\n\t\t\r\n\t\tsetAdmins( successData[\"adminAccountNames\"] )\r\n\t\tsetViews( successData[\"privateViewingNames\"] )\r\n\t\tsetSends( successData[\"resultsSendTargetsNames\"] )\r\n\t\tsetGoverns( successData[\"governedUsersNames\"] )\r\n\t\t\r\n\t\tsetAdminsIDs( successData[\"adminAccounts\"] )\r\n\t\tsetViewsIDs( successData[\"privateViewingPerms\"] )\r\n\t\tsetSendsIDs( successData[\"resultsSendTargets\"] )\r\n\t\tsetGovernsIDs( successData[\"governedUsers\"] )\r\n\t\t\r\n\t\tsetDelAdmins( [] )\r\n\t\tsetDelViews( [] )\r\n\t\tsetDelSends( [] )\r\n\t\tsetDelGoverns( [] )\r\n\t\t\r\n\t\tsetViewPerms( viewingPermsCheck[ successData[\"summaryViewAccess\"] ] )\r\n\r\n\t}\r\n\tfunction getFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Get Data Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t}\r\n\tfunction getDivisionData() {\r\n\t\t// Verify that the division is valid?\r\n\t\tif (props.currentDivisionID >= 0) {\r\n\t\t\tlet checkData = undefined//Store.get(props.currentDivisionID+\"-Data\")\r\n\t\t\tif (checkData === undefined) {\r\n\t\t\t\tconsole.log(\"Requesting Division Data From Server...\")\r\n\t\t\t\tAPIDivisionSettingsGet( props.APIHost, props.authToken, props.currentDivisionID, getSuccess, getFailure )\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"Data will do here...\")\r\n\t\t\t\tgetSuccess(checkData)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction getInvitesSuccess(successData) {\r\n\t\tconsole.log(\"Get Invites Success\")\r\n\t\t//Store.set(props.currentDivisionID+\"-Invites\", successData)\r\n\r\n\t\tlet IDList = []\r\n\t\tlet nameList = []\r\n\t\tlet roleList = []\r\n\t\t\r\n\t\tfor (let i in successData) {\r\n\t\t\t// This.... doesnt seem secure enough...\r\n\t\t\tIDList.push( successData[i][\"id\"] )\r\n\t\t\tnameList.push( successData[i][\"getUserFullName\"] )\r\n\t\t\troleList.push( inviteType[successData[i][\"targetRole\"]] )\r\n\t\t}\r\n\t\t\r\n\t\tsetInviteIDList(IDList)\r\n\t\tsetInviteNamesList(nameList)\r\n\t\tsetInviteRolesList(roleList)\r\n\t}\r\n\tfunction getInvitesFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Get Invites Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t}\r\n\tfunction getDivisionsInvites() {\r\n\t\tif (props.currentDivisionID >= 0) {\r\n\t\t\tlet checkData = undefined//Store.get(props.currentDivisionID+\"-Invites\")\r\n\t\t\tif (checkData === undefined) {\r\n\t\t\t\tAPIDivisionInvitesGet( props.APIHost, props.authToken, props.currentDivisionID, getInvitesSuccess, getInvitesFailure )\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"Data will do here...\")\r\n\t\t\t\tgetInvitesSuccess(checkData)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction setSuccess(successData) {\r\n\t\tconsole.log(\"Set Data Success\")\r\n\t\tconsole.log(successData)\r\n\t\t\r\n\t\tprops.triggerRefresh()\r\n\t}\r\n\tfunction setFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Set Data Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t\t\r\n\t\t//triggerLogout?\r\n\t}\r\n\tfunction saveChanges() {\r\n\t\t\r\n\t\t// I will need to put a validator in here... Definetly...\r\n\t\t// For now I will not allow it...\r\n\t\tlet chName = \"\"\r\n\t\t\r\n\t\tlet testData = {\r\n\t\t\t\"reqDiv\":props.currentDivisionID,\r\n\t\t\t\r\n\t\t\t\"chName\": chName,\r\n\t\t\t\r\n\t\t\t\"delAdmins\":delAdmins,\r\n\t\t\t\"delViews\":delViews,\r\n\t\t\t\"delEmails\":delSends,\r\n\t\t\t\"delGovern\":delGoverns,\r\n\t\t}\r\n\t\t\r\n\t\tAPIDivisionSettingsEdit( props.APIHost, props.authToken, testData, setSuccess, setFailure )\r\n\t}\r\n\t\r\n\tfunction inviteSuccess(successData) {\r\n\t\tconsole.log(\"Create Invite Success\")\r\n\t\tconsole.log(successData)\r\n\t}\r\n\tfunction inviteFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Create Invite Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t\t\r\n\t\t//triggerLogout?\r\n\t}\r\n\tfunction inviteUser(event) {\r\n\t\tconsole.log(\"Send Invite\")\r\n\t\t\r\n\t\tAPIDivisionInvitesCreate( props.APIHost, props.authToken, props.currentDivisionID, targetUser, targetRole, inviteSuccess, inviteFailure )\r\n\t}\r\n\t\r\n\tfunction spendInviteSuccess(successData) {\r\n\t\tconsole.log(\"Spend Invite Success\")\r\n\t\tconsole.log(successData)\r\n\t\t\r\n\t\ttiggerReload()\r\n\t}\r\n\tfunction spendInviteFailure(errorCodes, errorMessages) {\r\n\t\tconsole.log(\"Spend Invite Failure\")\r\n\t\tconsole.log(errorCodes)\r\n\t\tconsole.log(errorMessages)\r\n\t\t\r\n\t\tgetDivisionsInvites()\r\n\t}\r\n\tfunction inviteYes(event) {\r\n\t\tconsole.log(\"Accept\")\r\n\t\t\r\n\t\t// Lets do... 0 == Cancel\r\n\t\t// 1 == Accept\r\n\t\tlet action = 1\r\n\t\tlet targetInvite = event.target.value\r\n\t\tAPIDivisionInvitesSet( props.APIHost, props.authToken, props.currentDivisionID, targetInvite, action, spendInviteSuccess, spendInviteFailure )\r\n\t}\r\n\tfunction inviteNo(event) {\r\n\t\tconsole.log(\"Deny\")\r\n\r\n\t\t// 0 == Cancel\r\n\t\t// 1 == Accept\r\n\t\tlet action = 0\r\n\t\tlet targetInvite = event.target.value\r\n\t\t\r\n\t\tAPIDivisionInvitesSet( props.APIHost, props.authToken, props.currentDivisionID, targetInvite, action, spendInviteSuccess, spendInviteFailure )\r\n\t}\r\n\t\r\n\tfunction userFieldChange(event) {\r\n\t\tsetTargetUser(event.target.value)\r\n\t}\r\n\t\r\n\tfunction toggleDelete(event) {\r\n\t\t\r\n\t\tlet valueInt = Number(event.target.value)\r\n\t\t\r\n\t\tlet temp = []\r\n\t\tlet index = -1\r\n\t\tswitch(event.target.name) {\r\n\t\t\tcase \"adm\":\r\n\t\t\t\ttemp = delAdmins.slice()\r\n\t\t\t\t// It was NOT found, so add it\r\n\t\t\t\tindex = temp.indexOf( valueInt )\r\n\t\t\t\tif ( index === -1) {\r\n\t\t\t\t\ttemp.push( valueInt )\r\n\t\t\t\t}\r\n\t\t\t\t// It WAS found, so delete it\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemp.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t\tsetDelAdmins(temp)\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase \"vie\":\r\n\t\t\t\ttemp = delViews.slice()\r\n\t\t\t\t// It was NOT found, so add it\r\n\t\t\t\tindex = temp.indexOf( valueInt )\r\n\t\t\t\tif ( index === -1) {\r\n\t\t\t\t\ttemp.push( valueInt )\r\n\t\t\t\t}\r\n\t\t\t\t// It WAS found, so delete it\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemp.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t\tsetDelViews(temp)\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase \"sen\":\r\n\t\t\t\ttemp = delSends.slice()\r\n\t\t\t\t// It was NOT found, so add it\r\n\t\t\t\tindex = temp.indexOf( valueInt )\r\n\t\t\t\tif ( index === -1) {\r\n\t\t\t\t\ttemp.push( valueInt )\r\n\t\t\t\t}\r\n\t\t\t\t// It WAS found, so delete it\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemp.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t\tsetDelSends(temp)\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase \"gov\":\r\n\t\t\t\ttemp = delGoverns.slice()\r\n\t\t\t\t// It was NOT found, so add it\r\n\t\t\t\tindex = temp.indexOf( valueInt )\r\n\t\t\t\tif ( index === -1) {\r\n\t\t\t\t\ttemp.push( valueInt )\r\n\t\t\t\t}\r\n\t\t\t\t// It WAS found, so delete it\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemp.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t\tsetDelGoverns(temp)\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"Failed to have the correct name\")\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction triggerDropdown(event) {\r\n\t\tsetTargetRole(event.target.value)\r\n\t}\r\n\t\r\n\tlet invitesDisplayList = []\r\n\tfor (let i in inviteNamesList) {\r\n\t\tlet extra = \"\"\r\n\t\tinvitesDisplayList.push(\r\n\t\t\t<li className={\"list-group-item d-flex justify-content-around\"+extra} key={i}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{inviteNamesList[i]}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{inviteRolesList[i]}\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"badge badge-success badge-pill\" value={inviteIDList[i]} onClick={inviteYes}>/</button>\r\n\t\t\t\t<button className=\"badge badge-danger badge-pill\" value={inviteIDList[i]} onClick={inviteNo}>X</button>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\tif (inviteNamesList.length === 0) {\r\n\t\tinvitesDisplayList.push(\r\n\t\t\t<li className=\"list-group-item\" key={0}>\r\n\t\t\t\tNo Invites!\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\t\r\n\tlet adminUserList = []\r\n\tfor (let i in admins) {\r\n\t\tlet extra = \"\"\r\n\t\tlet index = delAdmins.indexOf(adminsIDs[i])\r\n\t\tif (index >= 0) {\r\n\t\t\textra = 'bg-warning'\r\n\t\t}\r\n\t\t\r\n\t\tadminUserList.push(\r\n\t\t\t<li className={\"list-group-item d-flex justify-content-around\"+extra} key={i}>\r\n\t\t\t\t{admins[i]}\r\n\t\t\t\t{/*<button className=\"badge badge-danger badge-pill\" name=\"adm\" value={adminsIDs[i]} onClick={toggleDelete}>\r\n\t\t\t\t\tX\r\n\t\t\t\t</button>*/}\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\tif (admins.length === 0) {\r\n\t\tadminUserList.push(\r\n\t\t\t<li className=\"list-group-item\" key={0}>\r\n\t\t\t\tNo Users!\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\t\r\n\tlet viewingUserList = []\r\n\tfor (let i in views) {\r\n\t\tlet extra = \"\"\r\n\t\tlet index = delViews.indexOf(viewsIDs[i])\r\n\t\tif (index >= 0) {\r\n\t\t\textra = 'bg-warning'\r\n\t\t}\r\n\t\t\r\n\t\tviewingUserList.push(\r\n\t\t\t<li className={\"list-group-item d-flex justify-content-around \"+extra} key={i}>\r\n\t\t\t\t{views[i]}\r\n\t\t\t\t<button className=\"badge badge-danger badge-pill\" name=\"vie\" value={viewsIDs[i]} onClick={toggleDelete}>\r\n\t\t\t\t\tX\r\n\t\t\t\t</button>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\tif (views.length === 0) {\r\n\t\tviewingUserList.push(\r\n\t\t\t<li className=\"list-group-item\" key={0}>\r\n\t\t\t\tNo Users!\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\t\r\n\tlet sentUserList = []\r\n\tfor (let i in sends) {\r\n\t\tlet extra = \"\"\r\n\t\tlet index = delSends.indexOf(sendsIDs[i])\r\n\t\tif (index >= 0) {\r\n\t\t\textra = 'bg-warning'\r\n\t\t}\r\n\t\t\r\n\t\tsentUserList.push(\r\n\t\t<li className={\"list-group-item d-flex justify-content-around \"+extra} key={i}>\r\n\t\t\t\t{sends[i]}\r\n\t\t\t\t<button className=\"badge badge-danger badge-pill\" name=\"sen\" value={sendsIDs[i]} onClick={toggleDelete}>\r\n\t\t\t\t\tX\r\n\t\t\t\t</button>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\tif (sends.length === 0) {\r\n\t\tsentUserList.push(\r\n\t\t\t<li className=\"list-group-item\" key={0}>\r\n\t\t\t\tNo Users!\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\r\n\tlet governedUserList = []\r\n\tfor (let i in governs) {\r\n\t\tlet extra = \"\"\r\n\t\tlet index = delGoverns.indexOf(governsIDs[i])\r\n\t\tif (index >= 0) {\r\n\t\t\textra = 'bg-warning'\r\n\t\t}\r\n\t\t\r\n\t\tgovernedUserList.push(\r\n\t\t\t<li className={\"list-group-item d-flex justify-content-around \"+extra} key={i}>\r\n\t\t\t\t{governs[i]}\r\n\t\t\t\t<button className=\"badge badge-danger badge-pill\" name=\"gov\" value={governsIDs[i]} onClick={toggleDelete}>\r\n\t\t\t\t\tX\r\n\t\t\t\t</button>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\t\r\n\tif (governs.length === 0) {\r\n\t\tgovernedUserList.push(\r\n\t\t\t<li className=\"list-group-item\" key={0}>\r\n\t\t\t\tNo Users!\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\tgovernedUserList.push(\r\n\t\t<li className=\"list-group-item\" key={\"end\"}>\r\n\t\t\tAnd {numChild} others in child nodes\r\n\t\t</li>\r\n\t)\r\n\r\n\tlet showTargetRole = \"Select Role =>\"\r\n\tif (targetRole !== \"\") {\r\n\t\tshowTargetRole = inviteType[targetRole]\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className=\"companySett\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Full Company Path</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t{companyFullName}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Change Division Name</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<input type='text' className='form-control' value={divisionName} onChange={userFieldChange} placeholder='No Name?!' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Invites List</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t{invitesDisplayList}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Invite Code</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t{inviteCode}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Viewing Permissions</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t{viewPerms}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Subscription Expiry</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body d-inline-flex justify-content-around\">\r\n\t\t\t\t\t\t\t\t{expiryDate}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Invite User</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input type='text' className='form-control' value={targetUser} onChange={userFieldChange} placeholder='Enter Username or Email' />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{showTargetRole}\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"dropdown-item\" value=\"1\" onClick={triggerDropdown}>Admin</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"dropdown-item\" value=\"2\" onClick={triggerDropdown}>View Permissions</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"dropdown-item\" value=\"3\" onClick={triggerDropdown}>Governed User</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={inviteUser}>\r\n\t\t\t\t\t\t\t\t\tInvite\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Administrators</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t{adminUserList}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Viewing Privilages:</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t{viewingUserList}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Users Notified:</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t{sentUserList}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h5>Target Users:</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t{governedUserList}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<button className=\"btn btn-primary\" onClick={saveChanges}>\r\n\t\t\t\t\tSave Changes\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default withRouter(CompanySettings);","import React from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst selectCompany =(props) => {\r\n\t\t\r\n\tlet keyID = 0\r\n\tlet backLayerButtons = []\r\n\t\r\n\tlet currentLayer = props.companyDataTree\r\n\t// Dig following each of the currentSelection...\r\n\t\r\n\tbackLayerButtons.push(\r\n\t\t<button key={keyID} onClick={props.backLayer} value={0} className=\"btn btn-outline-dark\"> \r\n\t\t\tRoot \r\n\t\t</button>\r\n\t)\r\n\tkeyID += 1\r\n\t\r\n\tlet selectedDivisionFull = \"\"\r\n\tlet selectedDivision = \"\"\r\n\tlet selectedPerms = 0\r\n\tlet selectedID = -1\r\n\t\r\n\tif (props.currentCompanySelections.length > 0) {\r\n\t\t// Display the currently selected aspects...\r\n\t\t\r\n\t\tfor (let i = 0; i < props.currentCompanySelections.length; i++) {\r\n\t\t\t\r\n\t\t\t// The last iteration of this is the one we are on, before the currentLayer is reset...\r\n\t\t\tselectedDivisionFull += currentLayer[ props.currentCompanySelections[i] ][\"name\"] + \"/\"\r\n\r\n\t\t\tselectedDivision = currentLayer[ props.currentCompanySelections[i] ][\"name\"]\r\n\t\t\tselectedPerms = currentLayer[ props.currentCompanySelections[i] ][\"perm\"]\r\n\t\t\tselectedID = props.currentCompanySelections[i]\r\n\t\t\t\r\n\t\t\tlet thisClass = \"btn\"\r\n\t\t\tif ( currentLayer[props.currentCompanySelections[i]][\"perm\"] ) {\r\n\t\t\t\tthisClass += \" btn-secondary\"\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthisClass += \" btn-outline-secondary\"\r\n\t\t\t}\r\n\t\t\tbackLayerButtons.push(\r\n\t\t\t\t<button key={keyID} onClick={props.backLayer} value={i+1} className={thisClass}> \r\n\t\t\t\t\t{ currentLayer[props.currentCompanySelections[i]][\"name\"] } \r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\t\t\tkeyID += 1\r\n\t\t\t\r\n\t\t\t// Enter the currentLayer, one stage at a time...\r\n\t\t\tcurrentLayer = currentLayer[ props.currentCompanySelections[i] ].children\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tselectedDivisionFull = \"No Selection\"\r\n\t}\r\n\r\n\tlet currentLayerButtons = []\r\n\t// Display the current layer we are selecting...\r\n\tfor (let key in currentLayer) {\r\n\r\n\t\tlet thisClass = \"btn\"\r\n\t\tif ( currentLayer[key][\"perm\"] ) {\r\n\t\t\tthisClass += \" btn-primary\"\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthisClass += \" btn-outline-primary\"\r\n\t\t}\r\n\t\t\r\n\t\tcurrentLayerButtons.push(\r\n\t\t\t<button key={keyID} onClick={props.selectLayer} value={key} className={thisClass}>\r\n\t\t\t\t{currentLayer[key][\"name\"]}\r\n\t\t\t</button>\r\n\t\t)\r\n\t\tkeyID += 1\r\n\t}\r\n\t\r\n\t// If we got to this point without putting anything into the array...\r\n\tif (currentLayerButtons.length === 0) {\r\n\t\tcurrentLayerButtons.push(\r\n\t\t\t<div className=\"btn btn-outline-secondary\" key={keyID}> \r\n\t\t\t\tEnd of Data\r\n\t\t\t</div>\r\n\t\t)\r\n\t\tkeyID += 1\r\n\t}\r\n\t\r\n\tlet getButtonClass = \"btn \"\r\n\tlet errorCheckingClass = \"\"\r\n\tif (selectedPerms > 0) {\r\n\t\tgetButtonClass += \"btn-success\"\r\n\t\terrorCheckingClass =' text-success'\r\n\t}\r\n\telse {\r\n\t\tgetButtonClass += \"btn-danger\"\r\n\t\terrorCheckingClass =' text-danger'\r\n\t}\r\n\t\r\n\t/*let errorCheckingClass = \"\"\r\n\tif (props.lastRequestStatus === false) {\r\n\t\terrorCheckingClass =' text-danger'\r\n\t} else if (props.lastRequestStatus === true) {\r\n\t\terrorCheckingClass =' text-success'\r\n\t}*/\r\n\t\r\n\tlet currentSet = [selectedPerms, selectedDivision, selectedID]\r\n\t\r\n\treturn (\r\n\t\t<div className=\"testPages\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col my-2\">\r\n\t\t\t\t\t\t\t\t\t\tSelect a Company Division you have Viewing Privilege for:\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col my-2\">\r\n\t\t\t\t\t\t\t\t\t\t<div className={errorCheckingClass}>\r\n\t\t\t\t\t\t\t\t\t\t\t{selectedDivisionFull}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col btn-group btn-group-sm\">\r\n\t\t\t\t\t\t\t\t\t\t{backLayerButtons}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col btn-group btn-group-sm\">\r\n\t\t\t\t\t\t\t\t\t\t{currentLayerButtons}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t<button onClick={props.getDataRequest} value={ currentSet } className={getButtonClass}>\r\n\t\t\t\t\t\t\t\t\t\t\tGet Data\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default withRouter(selectCompany);","import React from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Calendar from 'react-calendar'\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nconst suggesstionBox = (props) => {\r\n\t\r\n\tconst tileClassName = ({ date, view }) => {\r\n\t\r\n\t\t// Add class to tiles in month view only\r\n\t\tif (view === 'month') {\r\n\t\t\t\r\n\t\t\tconst checkDate = date.getFullYear()+\"-\"+date.getMonth()+\"-\"+date.getDate()\r\n\r\n\t\t\t// Check if a date React-Calendar wants to check is on the list of dates to add class to\r\n\t\t\tconst hasStuff = props.validDays.find( element => element === checkDate)\r\n\t\t\t\r\n\t\t\tif (hasStuff) {\r\n\t\t\t\treturn 'btn btn-success'\r\n\t\t\t} else {\r\n\t\t\t\t//return 'btn btn-outline-dark'\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tlet keyID = 0\r\n\tlet displayData = []\r\n\t\r\n\t//console.log(props.validDays)\r\n\t//console.log(props.dataSet)\r\n\t\r\n\tfor ( let suggestion in props.dataSet ) {\r\n\t\tdisplayData.push(\r\n\t\t\t<div className=\"row m-2\" key={keyID}>\r\n\t\t\t\t<div className=\"col border\">\r\n\t\t\t\t\t{props.dataSet[suggestion].content}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t\tkeyID += 1\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className=\"testPages\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t<div className=\"col col-lg-3 m-2\">\r\n\t\t\t\t\t\t<Calendar \r\n\t\t\t\t\t\t\tonChange={props.pickDate}\r\n\t\t\t\t\t\t\tvalue={props.currentDate}\r\n\t\t\t\t\t\t\ttileClassName={tileClassName}\r\n\r\n\t\t\t\t\t\t\tminDetail={'year'}\r\n\t\t\t\t\t\t\tmaxDetail={'month'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t<div className=\"col m-2\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t<div>Suggestions for Date: {props.dataDay.toString()}</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t{displayData}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default withRouter(suggesstionBox);","import React from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap';\r\n\r\n//import Store from \"store\"\r\nimport Calendar from 'react-calendar'\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nimport { ProgressBar } from 'react-bootstrap';\r\n\r\nimport { Radar, Bar } from 'react-chartjs-2';\r\nimport { testMaxMin, testBarMulti, stackedBarData3Test, stackedBarData2Test, stackedBarData, sentimentBarData } from '../../utils';\r\nimport { getRadarEmotionOptions, testBarMultiOptions, stackedBarOptions, sentimentBarOptions } from '../../utils';\r\n//import { makeCompanyTestData, makeCompanyTestDataOtherFormat } from \"../../utils\";\r\n\r\n// Move all of the functions here to a seperate file, a repository, so that I can fast make layouts sometime\r\n\r\n// This is garunteed\r\nconst AIAspect = [\r\n    { name: 'Emotion', value: 'emotion' },\r\n    { name: 'Sentiment', value: 'sentiment' },\r\n    { name: 'Entities', value: 'entities' },\r\n\t{ name: 'Keywords', value: 'keywords' },\r\n\t//{ name: 'Relations', value: 'relations' },\r\n];\r\n// This is also garunteed...\r\nconst daySet = [\r\n    { name: 'Monday', value: 'mon' },\r\n    { name: 'Tuesday', value: 'tue' },\r\n    { name: 'Wednesday', value: 'wed' },\r\n\t{ name: 'Thursday', value: 'thu' },\r\n\t{ name: 'Friday', value: 'fri' },\r\n\t{ name: 'Saturday', value: 'sat' },\r\n\t{ name: 'Sunday', value: 'sun' },\r\n\t{ name: 'All', value: 'allDay' },\r\n];\r\n\r\n// This is very lean...\r\nconst parseEmotion = (emotionData) => {\r\n\t\r\n\tlet derp = [emotionData.joy, emotionData.anger, emotionData.sadness, emotionData.disgust, emotionData.fear]\r\n\treturn derp;\r\n}\r\n\r\nconst companyViewSummary = (props) => {\r\n\t\r\n\t//console.log(props.dataSet)\r\n\t\t\r\n\tlet tableDisplay = []\r\n\tlet index;\r\n\t\r\n\t// Read the data from our state machine,\r\n\tconst currentPrompt = props.selectedPrompt\r\n\tconst currentDay = props.selectedDay\r\n\tconst currentAspect = props.selectedAspect\r\n\t\r\n\tlet promptList = []\r\n\t\r\n\t// At least this is garunteed to exist\r\n\tlet dayData = props.dataSet[currentDay]\r\n\t// Check to see if the lower states exist...\r\n\t\r\n\tlet displayStats = [];\r\n\tlet promptName = \"not valid prompt\";\r\n\t\r\n\t// This will trip if we have data\r\n\tif (!(dayData === null) && !(dayData === undefined)) {\r\n\t\t\r\n\t\tlet key;\r\n\t\tfor (key in dayData) {\r\n\r\n\t\t\tif ( !(dayData[key].name === undefined) ) {\r\n\t\t\t\tpromptList.push( {name:dayData[key].name, value:key} )\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// At this point if the array is still empty,we have nothing...\r\n\t\tif (promptList.length === 0) {\r\n\t\t\tpromptList = [{name:\"No Prompts\", value:\"None\"}]\r\n\t\t}\r\n\t\t\r\n\t\t//console.log(currentPrompt)\r\n\t\t//console.log(dayData)\r\n\t\tlet sanityCheck = currentPrompt in dayData\r\n\t\tif (sanityCheck) {\r\n\t\t\t// Switch state this bugger...\r\n\t\t\tpromptName = dayData[currentPrompt][\"name\"]\r\n\t\t\tlet purity = dayData[currentPrompt][\"responsePurity\"]\r\n\t\t\t\r\n\t\t\tdisplayStats.push(\r\n\t\t\t\t<div className=\"row m-2\" key=\"1\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"progressBar\">\r\n\t\t\t\t\t\t\t<ProgressBar now={ purity } label={`${purity}% Response Rate`} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t\t\r\n\t\t\t// Check to see if we actually HAVE any data just before we do this...\r\n\t\t\ttry{\r\n\t\t\t\tlet dataSet = dayData[currentPrompt][\"data\"][currentAspect]\r\n\t\t\t\r\n\t\t\t\tswitch(currentAspect) {\r\n\t\t\t\t\tcase \"emotion\":\r\n\t\t\t\t\t\tlet emoMax = parseEmotion( dataSet.max )\r\n\t\t\t\t\t\tlet emoAve = parseEmotion( dataSet.ave )\r\n\t\t\t\t\t\tlet emoMin = parseEmotion( dataSet.min )\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst dataDocumentEmo = testMaxMin( emoMax, emoAve, emoMin )\r\n\t\t\t\t\t\tconst radarOptions = getRadarEmotionOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet emoThresh = parseEmotion( dataSet.threshold )\r\n\t\t\t\t\t\tconst dataBar = testBarMulti( emoThresh )\r\n\t\t\t\t\t\tconst barOptions = testBarMultiOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t\t<div className=\"row m-2 justify-content-center\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<div className=\"col-sm col-md col-lg-3\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\t\tAverages + Max and min?\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Radar data={dataDocumentEmo} options={radarOptions} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-sm col-md col-lg-3\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\t\t\"How many have hit this threshold\"?\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Bar data={dataBar} options={barOptions} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'sentiment':\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tconst dataBarStack = stackedBarData( [dataSet.min], [dataSet.ave], [dataSet.max] )\r\n\t\t\t\t\t\tconst barStackOptions = stackedBarOptions()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet dataTresh = [dataSet.thresholdPos, dataSet.thresholdNeg]\r\n\t\t\t\t\t\tconst dataBarNorm = sentimentBarData( dataTresh )\r\n\t\t\t\t\t\tconst barOptionsNorm = sentimentBarOptions()\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t\t<div className=\"row m-2 justify-content-center\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<div className=\"col-sm col-md col-lg-3\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\t\tSentiment Values\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Bar data={dataBarStack} options={barStackOptions} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-sm col-md col-lg-3\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\t\t\"How many have hit this threshold\"?\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Bar data={dataBarNorm} options={barOptionsNorm} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'entities':\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t//console.log(dataSet)\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tfor (index in dataSet) {\r\n\t\t\t\t\t\t\tlet entity = dataSet[index]\r\n\t\t\t\t\t\t\t//console.log(entity)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlet emoMax = parseEmotion( entity.emotion.max )\r\n\t\t\t\t\t\t\tlet emoAve = parseEmotion( entity.emotion.ave )\r\n\t\t\t\t\t\t\tlet emoMin = parseEmotion( entity.emotion.min )\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlet emoData = testMaxMin( emoMax, emoAve, emoMin )\r\n\t\t\t\t\t\t\tlet emoOptions = getRadarEmotionOptions()\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconst dataEntSent = stackedBarData3Test( \r\n\t\t\t\t\t\t\t\t[entity.confidence.min, entity.relevance.min, entity.sentiment.min],\r\n\t\t\t\t\t\t\t\t[entity.confidence.ave, entity.relevance.ave, entity.sentiment.ave],\r\n\t\t\t\t\t\t\t\t[entity.confidence.max, entity.relevance.max, entity.sentiment.max],\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\tconst dataEntOptions = stackedBarOptions()\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttableDisplay.push(\r\n\t\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"row\">{entity.text}</th>\r\n\t\t\t\t\t\t\t\t\t<td>{entity.type}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{entity.count}</td>\r\n\t\t\t\t\t\t\t\t\t<td colSpan=\"3\"><Bar data={dataEntSent} options={dataEntOptions} /></td>\r\n\t\t\t\t\t\t\t\t\t<td><Radar data={emoData} options={emoOptions} /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t\t<table className=\"table\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Type</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Confidence</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Relevance</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Sentiment</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Emotion</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{tableDisplay}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'keywords':\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t//console.log(dataSet)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (index in dataSet) {\r\n\t\t\t\t\t\t\tlet keyData = dataSet[index]\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//const dataKeySent = stackedBarData( [keyData.sentiment.min], [keyData.sentiment.ave], [keyData.sentiment.max] )\r\n\t\t\t\t\t\t\t//const dataKeyOptions = stackedBarOptions()\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlet emoMax = parseEmotion( keyData.emotion.max )\r\n\t\t\t\t\t\t\tlet emoAve = parseEmotion( keyData.emotion.ave )\r\n\t\t\t\t\t\t\tlet emoMin = parseEmotion( keyData.emotion.min )\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconst dataRadar = testMaxMin( emoMax, emoAve, emoMin )\r\n\t\t\t\t\t\t\tconst dataRadarOptions = getRadarEmotionOptions()\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconst dataKeySent = stackedBarData2Test(\r\n\t\t\t\t\t\t\t\t[keyData.relevance.min, keyData.sentiment.min], \r\n\t\t\t\t\t\t\t\t[keyData.relevance.ave, keyData.sentiment.ave], \r\n\t\t\t\t\t\t\t\t[keyData.relevance.max, keyData.sentiment.max] \r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\tconst dataKeyOptions = stackedBarOptions()\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttableDisplay.push(\r\n\t\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"row\">{keyData.text}</th>\r\n\t\t\t\t\t\t\t\t\t<td>{keyData.count}</td>\r\n\t\t\t\t\t\t\t\t\t<td colSpan=\"2\"><Bar data={dataKeySent} options={dataKeyOptions} /></td>\r\n\t\t\t\t\t\t\t\t\t<td><Radar data={dataRadar} options={dataRadarOptions} /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t\t<table className=\"table\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Relevance Score</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Sentiment</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Emotion</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{tableDisplay}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'relations':\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t//console.log(dataSet)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (index in dataSet) {\r\n\t\t\t\t\t\t\tlet relData = dataSet[index]\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconst scoreData = stackedBarData( [relData.score.min], [relData.score.ave], [relData.score.max] )\r\n\t\t\t\t\t\t\tconst scoreOptions = sentimentBarOptions()\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttableDisplay.push(\r\n\t\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"row\">{relData.count}</th>\r\n\t\t\t\t\t\t\t\t\t<td>{relData.arguments[0].text}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{relData.type}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{relData.arguments[1].text}</td>\r\n\t\t\t\t\t\t\t\t\t<td style={{width:\"30%\"}}><Bar data={scoreData} options={scoreOptions} /></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t\t\t<table className=\"table\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Actor</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Action</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Target</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Score</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{tableDisplay}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.log(\"Invalid AI selection somehow\")\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\tcatch (error) {\r\n\t\t\t\t\r\n\t\t\t\tdisplayStats.push(\r\n\t\t\t\t\t<div className=\"row m-2 border\" key=\"2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<p>There was no data to read!</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// There was NO DATA in the day here, so we have to display nothing...\r\n\t\tpromptList = [{name:\"No Prompts\", value:\"None\"}]\r\n\t}\r\n\t\r\n\tconst tileClassName = ({ date, view }) => {\r\n\t\r\n\t\t// Add class to tiles in month view only\r\n\t\tif (view === 'month') {\r\n\t\t\t\r\n\t\t\tconst checkDate = date.getFullYear()+\"-\"+date.getMonth()+\"-\"+date.getDate()\r\n\r\n\t\t\t// Check if a date React-Calendar wants to check is on the list of dates to add class to\r\n\t\t\tconst hasSummary = props.validSummaryDates.find( element => element === checkDate)\r\n\t\t\t\r\n\t\t\tif (hasSummary) {\r\n\t\t\t\treturn 'btn btn-success'\r\n\t\t\t} else {\r\n\t\t\t\t//return 'btn btn-outline-dark'\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tlet messageLine1 = \"Showing Company Summary for: \" + props.currentCompany\r\n\tlet messageLine2 = \"For week of: \" + props.anchorDate\r\n\t\r\n\tconsole.log(props.currentDate)\r\n\t\r\n\treturn (\r\n\t\t<div className=\"companyView\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row m-2 justify-content-center\">\r\n\t\t\t\t\t<div className=\"col- col-lg-2 m-2\">\t\t\t\t\t\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Calendar \r\n\t\t\t\t\t\t\t\tonChange={props.pickDate}\r\n\t\t\t\t\t\t\t\tvalue={props.currentDate}\r\n\t\t\t\t\t\t\t\ttileClassName={tileClassName}\r\n\r\n\t\t\t\t\t\t\t\tminDetail={'year'}\r\n\t\t\t\t\t\t\t\tmaxDetail={'month'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col m-2\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<div>{messageLine1}</div>\r\n\t\t\t\t\t\t\t\t<div>{messageLine2}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t<ButtonGroup toggle>\r\n\t\t\t\t\t\t\t\t\t\t\t{daySet.map((radio, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={props.selectedDay === radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.setDay}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{radio.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t<ButtonGroup toggle>\r\n\t\t\t\t\t\t\t\t\t\t\t{promptList.map((radio, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={props.selectedPrompt === radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.setPrompt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{radio.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t<ButtonGroup toggle>\r\n\t\t\t\t\t\t\t\t\t\t\t{AIAspect.map((radio, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"info\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={props.selectedAspect === radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.setAI}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{radio.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row m-2\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<div>Showing Data for prompt: {promptName}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t{displayStats}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row  my-2\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default withRouter(companyViewSummary);","import React from \"react\";\r\n\r\nimport { withRouter, Link, Route, Switch } from \"react-router-dom\";\r\n//import { ButtonGroup, ToggleButton } from 'react-bootstrap';\r\n\r\n//import Store from \"store\"\r\n\r\n//SetCompany\r\nimport {UserProfile, ViewJournals, WriteJournals, WriteSuggestion} from \"./userPages\"\r\nimport {CompanySettings, SelectCompany, ViewCompany, EHIDisplay, SuggestionBox} from \"./companyPages\"\r\nimport {APISaveSuggestion, APIGetJournalDates, APIGetJournalData, APIGetSuggestionDates, APIGetSuggestionData, APIGetUsersPermTree, APIGetCompanyValidDates, APIGetCompanySummary, APIGetServerEHIData, APISaveJournal, APICheckActive} from \"../utils\";\r\n\r\nimport { EditorState, convertToRaw,  } from 'draft-js';\r\n//convertFromRaw\r\n\r\nconst DefaultView = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"defaultView\">\r\n\t\t\t<h3>\r\n\t\t\t\tThis page is empty, Select an Action from the side menu!\r\n\t\t\t</h3>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// This needs to be changed out as this is now in 2 files....\r\nconst daySet = [\r\n    { name: 'Monday', value: 'mon' },\r\n    { name: 'Tuesday', value: 'tue' },\r\n    { name: 'Wednesday', value: 'wed' },\r\n\t{ name: 'Thursday', value: 'thu' },\r\n\t{ name: 'Friday', value: 'fri' },\r\n\t{ name: 'Saturday', value: 'sat' },\r\n\t{ name: 'Sunday', value: 'sun' },\r\n\t{ name: 'All', value: 'allDay' },\r\n];\r\n\r\nclass ContentPages extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t\t\r\n\t\t\tcurrentDate: new Date(),\r\n\t\t\tselectedJournalDate: new Date(),\r\n\t\t\tselectedCompanyDate: new Date(),\r\n\t\t\tselectedSuggestionDate: new Date(),\r\n\t\t\t\r\n\t\t\t// EHI Page State...\r\n\t\t\tEHIDayTimespan: 3,\r\n\t\t\tEHIWeekTimespan: 3,\r\n\t\t\t\r\n\t\t\tEHIDayLabels: [],\r\n\t\t\tEHIDaySet: [],\r\n\t\t\tEHIWeekLabels: [],\r\n\t\t\tEHIWeekSet: [],\r\n\t\t\t\r\n\t\t\t// Journal Read Page State...\r\n\t\t\tselectedJournalPrompt:\"p1\",\r\n\t\t\tselectedJournalAspect:\"emotion\",\r\n\t\t\t\r\n\t\t\t// Where we storing the data from...\r\n\t\t\tselectedJournalData: {},\r\n\t\t\t// If I put the calender in the sidebar, we shall put this here...\r\n\t\t\tvalidJournalDates:[],\r\n\t\t\tvalidJournalScanDates: [],\r\n\t\t\t\r\n\t\t\tjournalMessage: \"Choose a date to view the journal!\",\r\n\t\t\tjournalContent: \"Waiting for content...\",\r\n\t\t\t\r\n\t\t\t// I need to put the content block stuff.......\r\n\t\t\tjournalEditorState: EditorState.createEmpty(),\r\n\t\t\tjournalPlaceholder: \"\",\r\n\t\t\t\r\n\t\t\t// Company Summary View Save State\r\n\t\t\tselectedCompanyDay:\"mon\",\r\n\t\t\tselectedCompanyPrompt:\"p1\",\r\n\t\t\tselectedCompanyAspect:\"emotion\",\r\n\t\t\t\r\n\t\t\tcompanyMessage: \"Choose a date and company to view that summary!\",\r\n\t\t\t\r\n\t\t\t// Version 2 of the Company Data Selection\r\n\t\t\tcurrentDivisionID:-1,\r\n\t\t\tcurrentDivisionName:\"None\",\r\n\t\t\tcurrentCompanyIndexes:[],\r\n\t\t\tcompanyViewableDataTree:{},\r\n\t\t\tcompanyViewableDataRawList:[],\r\n\t\t\tcompanyViewableDataRawIDs:[],\r\n\t\t\t\r\n\t\t\tcompanySendDataTree: {},\r\n\t\t\tcompanySendDataRawList: [],\r\n\t\t\tcompanySendDataRawIDList: [],\r\n\t\t\t// Use a state hook for this? Hmmmm,\r\n\t\t\tlastCompanyRequestStatus:undefined,\r\n\t\t\t\r\n\t\t\t// Last data obtained for company summary\r\n\t\t\tcurrentCompanyDataName:undefined,\r\n\t\t\tcurrentCompanyDataDate:undefined,\r\n\t\t\tselectedSummaryWeekData: {mon:{},tue:{},wed:{},thu:{},fri:{},sat:{},sun:{},allDay:{}},\r\n\t\t\tvalidCompanySummaryDates:[],\r\n\t\t\t\r\n\t\t\t// Suggestions!\r\n\t\t\tselectedSuggestDay: new Date(),\r\n\t\t\tselectedSuggestDayData: [],\r\n\t\t\tvalidDivisionSuggestionDates:[],\r\n\t\t\t\r\n\t\t\tcurrentSuggestionDivision: -1,\r\n\t\t\tcurrentCompanyGovernedIndexes: [],\r\n\t\t\tcompanyGovernedDataTree: {},\r\n\t\t\tcompanyGovernedDataRawList: [],\r\n\t\t\tcompanyGovernedDataRawIDList: [],\r\n\t\t\tlastGovernedCompanyRequestStatus:undefined,\r\n\t\t\tsuggestionEditorState: EditorState.createEmpty()\r\n\t\t\t\r\n\t\t\t\r\n        };\r\n\t}\r\n\t\r\n\t// This will run when this component is loaded...\r\n\tcomponentDidMount = () => {\r\n\t\t\r\n\t\t// On refresh, these will load before App.js has a chance to load in the token...\r\n\t\tif (this.props.authToken === undefined) {\r\n\t\t\tconsole.log(\"No auth token on load!\")\r\n\t\t}\r\n\t\tthis.checkActiveUser()\r\n\t\t\r\n\t\tthis.getValidJournalDates()\r\n\t\tthis.getUserCompanyAdminViewTree()\r\n\t\tthis.getUserGovernedPermTree()\r\n\t\t\r\n\t\t//this.redoLoad()\r\n\t}\r\n\t\r\n\tcomponentDidUpdate = (prevProps, prevState) => {\r\n\t\t// When we SWAP TO the Journal Read menu...\r\n\t}\r\n\t\r\n\t/*\r\n\tresetState = () => {\r\n\t\tthis.setState({\r\n\t\t\t// Clear EHI Data....\r\n\t\t\tEHIDayLabels: [],\r\n\t\t\tEHIDaySet: [],\r\n\t\t\tEHIWeekLabels: [],\r\n\t\t\tEHIWeekSet: [],\r\n\t\t\t\r\n\t\t\t// Clear All Dates...\r\n\t\t\tvalidCompanySummaryDates:[],\r\n\t\t\t\r\n\t\t\t// Clear Tree Data...\r\n\t\t\tcompanyGovernedDataTree: {},\r\n\t\t\tcompanyGovernedDataRawList: [],\r\n\t\t\tcompanyGovernedDataRawIDList: [],\r\n\t\t\t\r\n\t\t\tcompanyViewableDataTree: {},\r\n\t\t\tcompanyViewableDataRawList: {},\r\n\t\t\tcompanyViewableDataRawIDs:[],\r\n\t\t\t\r\n\t\t\tcompanySendDataTree: {},\r\n\t\t\tcompanySendDataRawList: {},\r\n\t\t\tcompanySendDataRawIDList: [],\r\n\t\t\t\r\n\t\t\t// Clear summary data...\r\n\t\t\tvalidDivisionSuggestionDates:[],\r\n\t\t\t\r\n\t\t\t// Clear Journal Data\r\n\t\t\tselectedJournalData: {},\r\n\t\t\tvalidJournalDates:[],\r\n\t\t\tvalidJournalScanDates: [],\r\n\t\t\t\r\n\t\t})\r\n\t}\r\n\t*/\r\n\t\r\n\tredoLoad = () => {\r\n\t\tthis.getValidJournalDates()\r\n\t\tthis.getUserCompanyAdminViewTree()\r\n\t\tthis.getUserCompanySendsTree()\r\n\t\tthis.getUserGovernedPermTree()\r\n\t}\r\n\t\r\n\tchangeSuggestionContent = (incomingState) => {\r\n\t\t//console.log(incomingState)\r\n\t\tthis.setState({\r\n\t\t\tsuggestionEditorState:incomingState,\r\n\t\t})\t\r\n\t}\r\n\tchangeJournalContent = (incomingState) => {\r\n\t\tthis.setState({\r\n\t\t\tjournalEditorState:incomingState,\r\n\t\t})\t\r\n\t}\r\n\t\r\n\t// This has to be here due to Props being non-writable...\r\n\tchangeEHIDaydates = (dateRangeChoice) => {\r\n\t\tthis.setState({\r\n\t\t\tEHIDayTimespan:dateRangeChoice\r\n\t\t})\r\n\t}\r\n\tchangeEHIWeekdates = (dateRangeChoice) => {\r\n\t\tthis.setState({\r\n\t\t\tEHIWeekTimespan:dateRangeChoice\r\n\t\t})\r\n\t}\r\n\t\r\n\tforceLogout = () => {\r\n\t\t// Gonna do this like this, in case we got something else we wana do on logout...\r\n\t\tthis.props.forceLogout()\r\n\t\tthis.props.history.push(this.props.reRouteTarget);\r\n\t}\r\n\t\r\n\t// I should consider rolling this into the other callbacks...\r\n\t// All API calls WILL fail if they are not active...\r\n\t\r\n\t// There IS a *Isactive* in Django, but that will be used to close accounds due to how its coded\r\n\t// But we should check here, and redirect to the Verification page if we fail...\r\n\tcheckActiveUserCallback = (ActiveState) => {\r\n\t\tif (ActiveState === true) {\r\n\t\t\tconsole.log(\"User is considered Active\")\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"User needs to activate account\")\r\n\t\t\tthis.props.history.push(this.props.activateRedirect)\r\n\t\t}\r\n\t}\r\n\tcheckActiveUser = () => {\r\n\t\t//console.log(this.props.authToken)\r\n\t\tAPICheckActive(this.props.APIHost, this.props.authToken, this.checkActiveUserCallback, this.forceLogout)\r\n\t}\r\n\t\r\n\tjournalPostCallback = (incomingStuff) => {\r\n\t\t// Set something to notify user....\r\n\t\tconsole.log(incomingStuff)\r\n\t}\r\n\tpostJournal = () => {\r\n\t\t// This may need to be overridden?\r\n\t\tlet inputDate = this.state.currentDate\r\n\t\tlet journalContent = this.state.journalEditorState.getCurrentContent().getPlainText()\r\n\t\tlet richContent = convertToRaw(this.state.journalEditorState.getCurrentContent())\r\n\t\t\r\n\t\tAPISaveJournal(this.props.APIHost, this.props.authToken, inputDate, journalContent, richContent, this.journalPostCallback, this.forceLogout)\r\n\t}\r\n\t\r\n\t// getting the data for which companies you are allowed to post to...\r\n\tgovernedPermTreeCallback = (incomingCompanyTree, incomingCompanyNames, incomingCompanyIDs) => {\r\n\t\t\r\n\t\t//Store.set(this.props.currentUser+'-companyPermGovernedTree', incomingCompanyTree)\r\n\t\t//Store.set(this.props.currentUser+'-companyPermGovernedNames', incomingCompanyNames)\r\n\t\t//Store.set(this.props.currentUser+'-companyPermGovernedNames', incomingCompanyIDs)\r\n\t\tthis.setState({\r\n\t\t\tcompanyGovernedDataTree: incomingCompanyTree,\r\n\t\t\tcompanyGovernedDataRawList: incomingCompanyNames,\r\n\t\t\tcompanyGovernedDataRawIDList: incomingCompanyIDs,\r\n\t\t})\r\n\t\t//console.log(incomingStuff)\r\n\t}\r\n\tgovernedPermTreeFailure = (errorCodes, errorDatas) => {\r\n\t\t\r\n\t\tfor (let index in errorCodes) {\r\n\t\t\t\t\r\n\t\t\tif (errorCodes[index] === 401) {\r\n\t\t\t\tthis.forceLogout()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tgetUserGovernedPermTree = () => {\r\n\t\tif (!(this.props.currentUser === undefined)) {\t\r\n\t\t\t// We still have to check for date related reworks...\r\n\t\t\t// It may be benificial to merge this into the other perm tree...\r\n\t\t\t// But for now I will keep them seperate....\r\n\t\t\tlet checkData = undefined//Store.get(this.props.currentUser+\"-companyGovernedPermTree\")\r\n\t\t\tlet checkData2 = undefined//Store.get(this.props.currentUser+\"-companyPermGovernedNames\")\r\n\t\t\tlet checkData3 = undefined//Store.get(this.props.currentUser+\"-incomingCompanyIDs\")\r\n\t\t\tif (checkData === undefined || checkData2 === undefined || checkData3 === undefined) {\r\n\t\t\t\tconsole.log(\"Governed list was not in the cookies!\")\r\n\t\t\t\tAPIGetUsersPermTree(this.props.APIHost, this.props.authToken, [\"gov\"], this.governedPermTreeCallback, this.governedPermTreeFailure)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"Company Tree WAS in the cookies!\")\r\n\t\t\t\tthis.governedPermTreeCallback(checkData, checkData2, checkData3)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Posting the journal\r\n\tsuggestionPostCallback = (incomingStuff) => {\r\n\t\t// Set something to notify user....\r\n\t\tconsole.log(incomingStuff)\r\n\t}\r\n\tsuggestionPostFailureCallback = (errorCodes, errorMessages) => {\r\n\t\t\r\n\t\tfor (let index in errorCodes) {\r\n\t\t\tif (errorCodes[index] === 401) {\r\n\t\t\t\tthis.forceLogout()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpostSuggestion = () => {\r\n\t\t// This may need to be overridden?\r\n\t\tlet inputDate = this.state.currentDate\r\n\t\tlet suggestionContent = this.state.suggestionEditorState.getCurrentContent().getPlainText()\r\n\t\tlet richContent = convertToRaw(this.state.suggestionEditorState.getCurrentContent())\r\n\t\tlet targetDivision = this.state.currentSuggestionDivision\r\n\t\t\r\n\t\tif (!(targetDivision === -1)) {\r\n\t\t\tAPISaveSuggestion(this.props.APIHost, this.props.authToken, inputDate, targetDivision, suggestionContent, richContent, this.suggestionPostCallback, this.suggestionPostFailureCallback)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Not allowed!\")\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Journal Date Stuff----------------------------------------------------------------------\r\n\tjournalDatesCallback = (incomingJournalDates, incomingJournalAIDates) => {\r\n\t\t\r\n\t\t//Store.set(this.props.currentUser+\"-ValidDates\", {\"journalDates\":incomingJournalDates ,\"AIDates\":incomingJournalAIDates})\r\n\t\tthis.setState({\r\n\t\t\tvalidJournalDates: incomingJournalDates,\r\n\t\t\tvalidJournalScanDates: incomingJournalAIDates,\r\n\t\t})\r\n\t}\r\n\tgetValidJournalDates = () => {\r\n\t\t// Check the values...\r\n\t\t//this.state.validJournalDates\r\n\t\t//this.state.validJournalScanDates\r\n\t\t\r\n\t\tconsole.log(\"Running a journal dates check\")\r\n\t\t\r\n\t\t// Check if the user is a valid one... As this is loaded in App.js\r\n\t\tif (!(this.props.currentUser === undefined)) {\t\t\r\n\t\t\t// We have to overwrite it if the data is old though...\r\n\t\t\tlet checkData = undefined//Store.get(this.props.currentUser+\"-ValidDates\")\r\n\t\t\tif (checkData === undefined) {\r\n\t\t\t\tconsole.log(\"Valid journal Dates were not in the cookies!\")\r\n\t\t\t\tAPIGetJournalDates(this.props.APIHost, this.props.authToken, this.journalDatesCallback, this.forceLogout)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"Valid Journal dates WERE in the cockies!\")\r\n\t\t\t\tthis.journalDatesCallback(checkData.journalDates, checkData.AIDates)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Invalid User\")\r\n\t\t\t//this.forceLogout()\r\n\t\t}\r\n\t}\r\n\t\r\n\tjournalDataCallback = (incomingjournalContent, incomingAIData) => {\r\n\t\t\r\n\t\t// I will  have to swap over to the bettern form of content...\r\n\t\tthis.setState({\r\n\t\t\tjournalMessage: \"Showing Journal Entry for: \" + this.state.selectedJournalDate.toString(),\r\n\t\t\tjournalContent: incomingjournalContent,\r\n\t\t\tselectedJournalData: incomingAIData,\r\n\t\t})\r\n\t}\r\n\tpickJournalCalenderDate = (selectedDate) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedJournalDate:selectedDate\r\n\t\t})\r\n\t\t\r\n\t\t// THIS data should not be old\r\n\t\t// But if I DO save the block data, this may get real hairy storage wise...\r\n\t\tlet checkData = undefined//Store.get(this.props.currentUser+\"-Journal-\"+selectedDate)\r\n\t\tif (checkData === undefined) {\r\n\t\t\tconsole.log(\"Not in the cookies!\")\r\n\t\t\tAPIGetJournalData(this.props.APIHost, this.props.authToken, selectedDate, this.journalDataCallback, this.forceLogout)\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//this.journalDataCallback(checkData.journalContent, checkData.AIData)\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Company Axios/State stuff---------------------------------------------------------------------\r\n\tcompanyListCallback = (incomingCompanyTree, incomingCompanyNames, incomingCompanyIDs) => {\r\n\r\n\t\t//Store.set(this.props.currentUser+'-companyPermViewTree', incomingCompanyTree)\r\n\t\t//Store.set(this.props.currentUser+'-companyPermViewNames', incomingCompanyNames)\r\n\t\t//Store.set(this.props.currentUser+'-companyPermViewIDs', incomingCompanyIDs)\r\n\t\tthis.setState({\r\n\t\t\tcompanyViewableDataTree: incomingCompanyTree,\r\n\t\t\tcompanyViewableDataRawList: incomingCompanyNames,\r\n\t\t\tcompanyViewableDataRawIDs: incomingCompanyIDs,\r\n\t\t})\r\n\t}\r\n\tcompanyListFailure = (errorCodes, errorDatas) => {\r\n\t\t\r\n\t\tfor (let index in errorCodes) {\r\n\t\t\t\t\r\n\t\t\tif (errorCodes[index] === 401) {\r\n\t\t\t\tthis.forceLogout()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tgetUserCompanyAdminViewTree = () => {\r\n\t\tif (!(this.props.currentUser === undefined)) {\t\r\n\t\t\t// We still have to check for date related reworks...\r\n\t\t\tlet checkData = undefined//Store.get(this.props.currentUser+\"-companyPermViewTree\")\r\n\t\t\tlet checkData2 = undefined//Store.get(this.props.currentUser+\"-companyPermViewNames\")\r\n\t\t\tif (checkData === undefined || checkData2 === undefined) {\r\n\t\t\t\tconsole.log(\"Company list was not in the cookies!\")\r\n\t\t\t\tAPIGetUsersPermTree(this.props.APIHost, this.props.authToken, [\"admin\", \"view\"], this.companyListCallback, this.companyListFailure)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"Company Tree WAS in the cookies!\")\r\n\t\t\t\tthis.companyListCallback(checkData, checkData2)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tcompanySendCallback = (incomingCompanyTree, incomingCompanyNames, incomingCompanyIDs) => {\r\n\r\n\t\t//Store.set(this.props.currentUser+'-companyPermSendTree', incomingCompanyTree)\r\n\t\t//Store.set(this.props.currentUser+'-companyPermSendNames', incomingCompanyNames)\r\n\t\t//Store.set(this.props.currentUser+'-companyPermSendIDs', incomingCompanyIDs)\r\n\t\tthis.setState({\r\n\t\t\tcompanySendDataTree: incomingCompanyTree,\r\n\t\t\tcompanySendDataRawList: incomingCompanyNames,\r\n\t\t\tcompanySendDataRawIDList: incomingCompanyIDs,\r\n\t\t})\r\n\t}\r\n\tcompanySendFailure = (errorCodes, errorDatas) => {\r\n\t\t\r\n\t\tfor (let index in errorCodes) {\r\n\t\t\t\t\r\n\t\t\tif (errorCodes[index] === 401) {\r\n\t\t\t\tthis.forceLogout()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tgetUserCompanySendsTree = () => {\r\n\t\tif (!(this.props.currentUser === undefined)) {\t\r\n\t\t\t// We still have to check for date related reworks...\r\n\t\t\tlet checkData = undefined//Store.get(this.props.currentUser+\"-companyPermSendTree\")\r\n\t\t\tlet checkData2 = undefined//Store.get(this.props.currentUser+\"-companyPermSendNames\")\r\n\t\t\tlet checkData3 = undefined//Store.get(this.props.currentUser+\"-companyPermSendIDs\")\r\n\t\t\tif (checkData === undefined || checkData2 === undefined || checkData3 === undefined) {\r\n\t\t\t\tconsole.log(\"Company list was not in the cookies!\")\r\n\t\t\t\tAPIGetUsersPermTree(this.props.APIHost, this.props.authToken, [\"send\"], this.companySendCallback, this.companySendFailure)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"Company Tree WAS in the cookies!\")\r\n\t\t\t\tthis.companyListCallback(checkData, checkData2)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tcompanyDatesCallback = (incomingDatesList) => {\r\n\t\t//console.log(this.state.validCompanySummaryDates)\r\n\t\t//Store.set(this.props.currentUser+\"-\"+this.state.currentDivisionID+\"-ValidDates\", {'dates':incomingDatesList})\r\n\t\tthis.setState({\r\n\t\t\tvalidCompanySummaryDates: incomingDatesList\r\n\t\t})\r\n\t}\r\n\tgetCompanyValidDates = () => {\r\n\t\tif (!(this.state.currentDivisionID === -1)) {\r\n\t\t\tlet checkData = undefined//Store.get(this.props.currentUser+\"-\"+this.state.currentDivisionID+\"-ValidDates\")\r\n\t\t\tif (checkData === undefined) {\r\n\t\t\t\tconsole.log(\"Company dates were not in the cookies\")\r\n\t\t\t\tAPIGetCompanyValidDates(this.props.APIHost, this.props.authToken, this.state.currentDivisionID, this.companyDatesCallback, this.forceLogout)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"Company Dates WERE in the coockies!\")\r\n\t\t\t\tthis.companyDatesCallback(checkData[\"dates\"])\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Invalid company!\")\r\n\t\t}\r\n\t}\r\n\t\r\n\tcompanySuggestionDateCallback = (incomingDatesList) => {\r\n\t\t//Store.set(this.props.currentUser+\"-\"+this.state.currentDivisionID+\"-ValidSuggestionDates\", {'dates':incomingDatesList})\r\n\t\t\r\n\t\t//console.log(incomingDatesList)\r\n\t\tthis.setState({\r\n\t\t\tvalidDivisionSuggestionDates: incomingDatesList\r\n\t\t})\r\n\t}\r\n\tgetCompanyValidSuggestionDates = () => {\r\n\t\tif (!(this.state.currentDivisionID === -1)) {\r\n\t\t\tlet checkData = undefined//Store.get(this.props.currentUser+\"-\"+this.state.currentDivisionID+\"-ValidSuggestionDates\")\r\n\t\t\tif (checkData === undefined) {\r\n\t\t\t\tconsole.log(\"Division suggestion dates were not in the cookies...\")\r\n\t\t\t\tAPIGetSuggestionDates(this.props.APIHost, this.props.authToken, this.state.currentDivisionID, this.companySuggestionDateCallback, this.forceLogout)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"Division suggestion dates WERE in the coockies!\")\r\n\t\t\t\tthis.companySuggestionDateCallback(checkData[\"dates\"])\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Invalid company!\")\r\n\t\t}\r\n\t}\r\n\t\r\n\tcompanySuggestionDataCallback = (targetDate, incomingData) => {\r\n\t\t//Store.set(this.props.currentUser+\"-\"+this.state.currentDivisionID+\"-\"+targetDate+\"-suggestions\", {'data':incomingData})\r\n\t\t\r\n\t\tlet givenDate = new Date(targetDate)\r\n\t\tthis.setState({\r\n\t\t\tselectedSuggestDay: givenDate,\r\n\t\t\tselectedSuggestDayData: incomingData,\r\n\t\t})\r\n\t}\r\n\tgetCompanySuggestionData = (selectedDate) => {\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tgetCompanySuggestionData:selectedDate,\r\n\t\t})\r\n\t\t\r\n\t\tif (!(this.state.currentDivisionID === -1)) {\r\n\t\t\tlet checkData = undefined//Store.get(this.props.currentUser+\"-\"+this.state.currentDivisionID+\"-\"+selectedDate+\"-suggestions\")\r\n\t\t\tif (checkData === undefined) {\r\n\t\t\t\tconsole.log(\"Division suggestion dates were not in the cookies\")\r\n\t\t\t\tAPIGetSuggestionData(this.props.APIHost, this.props.authToken, this.state.currentDivisionID, this.companySuggestionDataCallback, this.forceLogout)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"Division suggestion dates WERE in the coockies!\")\r\n\t\t\t\tthis.companySuggestionDataCallback()\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Invalid company!\")\r\n\t\t}\r\n\t}\r\n\t\r\n\tcompanyDataCallback = (incomingDataDict, anchorDate) => {\r\n\t\t//Store.set(this.props.currentUser+\"-\"+this.state.currentDivisionID+\"-\"+anchorDate+\"Data\", {'data':incomingDataDict})\r\n\t\tthis.setState({\r\n\t\t\tcompanyMessage: \"Showing Summary for: \" + this.state.currentDivisionID + \" On: \" + this.state.selectedCompanyDate.toString(),\r\n\t\t\tselectedSummaryWeekData: incomingDataDict,\r\n\t\t\tcurrentCompanyDataDate: anchorDate,\r\n\t\t\tcurrentCompanyDataName: this.state.currentDivisionName,\r\n\t\t\tcurrentCompanyDataID: this.state.currentDivisionID,\r\n\t\t})\r\n\t}\r\n\tgetCompanyWeeklySummary = (selectedDate) => {\r\n\t\t// First, we need to check if we clicked in the same week as our currently loaded data...\r\n\t\tlet todayWeekday = (selectedDate.getDay()-1)\r\n\t\tif (todayWeekday < 0) {\r\n\t\t\ttodayWeekday = 6\r\n\t\t}\r\n\t\t\r\n\t\tlet copiedDate = new Date(selectedDate.getTime());\r\n\r\n\t\tcopiedDate.setDate(copiedDate.getDate()-(todayWeekday))\r\n\t\tconst anchorDate = copiedDate.toJSON().split(\"T\")[0]\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tselectedCompanyDate:selectedDate,\r\n\t\t})\r\n\t\t\r\n\t\t// if we DID, all we need to do is swap the day we are doing...\r\n\t\tif (this.state.currentCompanyDataID === this.state.currentDivisionID && this.state.currentCompanyDataDate === anchorDate) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tselectedCompanyDay: daySet[todayWeekday].value,\r\n\t\t\t})\r\n\t\t}\r\n\t\t// if NOT, then we go get the data, as it is NOT loaded...\r\n\t\telse {\r\n\t\t\tif (!(this.state.currentDivisionID === -1)) {\r\n\t\t\t\tlet checkData = undefined//Store.get(this.props.currentUser+\"-\"+this.state.currentDivisionID+\"-\"+anchorDate+\"Data\")\r\n\t\t\t\tif (checkData === undefined) {\r\n\t\t\t\t\tconsole.log(\"Company Summary Data was not in the coockies\")\r\n\t\t\t\t\tAPIGetCompanySummary(this.props.APIHost, this.props.authToken, this.state.currentDivisionID, selectedDate, this.companyDataCallback, this.forceLogout)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.companyDataCallback(checkData[\"data\"], anchorDate)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"Invalid company!\")\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tcompanyEHICallback = (incomingEHIDaysLabels, incomingEHIDaysData, incomingEHIWeeksLabels, incomingEHIWeeksData) => {\r\n\t\t//Store.set(this.props.currentUser+'-'+this.state.currentDivisionID+'-EHI', {'labelsDays':incomingEHIDaysLabels, 'dataDays':incomingEHIDaysData, 'labelsWeeks':incomingEHIWeeksLabels, 'dataWeeks':incomingEHIWeeksData})\r\n\t\tthis.setState({\r\n\t\t\tEHIDayLabels: incomingEHIDaysLabels,\r\n\t\t\tEHIDaySet: incomingEHIDaysData,\r\n\t\t\tEHIWeekLabels: incomingEHIWeeksLabels,\r\n\t\t\tEHIWeekSet: incomingEHIWeeksData,\r\n\t\t})\r\n\t}\r\n\t// EHI Stuff\r\n\tgetCompanyEHIData = () => {\r\n\t\tif (!(this.state.currentDivisionID === -1)) {\r\n\t\t\tlet checkData = undefined//Store.get(this.props.currentUser+'-'+this.state.currentDivisionID+'-EHI')\r\n\t\t\t// How am I going to check for redos?\r\n\t\t\tif (checkData === undefined) {\r\n\t\t\t\tconsole.log(\"Company EHI Data was not in the coockies\")\r\n\t\t\t\tAPIGetServerEHIData(this.props.APIHost, this.props.authToken, this.state.currentDivisionID, this.companyEHICallback, this.forceLogout)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.companyEHICallback(checkData[\"labelsDays\"], checkData[\"dataDays\"], checkData[\"labelsWeeks\"], checkData[\"dataWeeks\"])\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Invalid company!\")\r\n\t\t}\r\n\t}\r\n\t\r\n\tsuggestionDataCallback = (selectedDay, incomingDataDict) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedSuggestDay: selectedDay,\r\n\t\t\tselectedSuggestDayData: incomingDataDict,\r\n\t\t})\r\n\t}\r\n\tgetCompanySuggestionData = (selectedDate) => {\r\n\t\tif (!(this.state.currentDivisionID === -1)) {\r\n\t\t\tAPIGetSuggestionData(this.props.APIHost, this.props.authToken, this.state.currentDivisionID, selectedDate, this.suggestionDataCallback, this.forceLogout)\r\n\t\t}\r\n\t}\r\n\t\r\n\t// For V2 of the Company Choosing...\r\n\tselectCompanyLayer = (event) => {\r\n\t\tlet values = this.state.currentCompanyIndexes\r\n\t\tvalues.push(event.target.value)\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tcurrentCompanyIndexes:values,\r\n\t\t\tlastCompanyRequestStatus:undefined,\r\n\t\t})\r\n\t}\r\n\tbackCompanyLayer = (event) => {\r\n\t\tlet values = this.state.currentCompanyIndexes\r\n\t\tvalues.splice(event.target.value)\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tcurrentCompanyIndexes:values,\r\n\t\t\tlastCompanyRequestStatus:undefined,\r\n\t\t})\r\n\t}\r\n\t\r\n\t// Meanwhile, over in the suggestion selector...\r\n\tselectGovernedCompanyLayer = (event) => {\r\n\t\tlet values = this.state.currentCompanyGovernedIndexes\r\n\t\tvalues.push(event.target.value)\r\n\t\t\r\n\t\tlet newDivision = values[ values.length-1 ]\r\n\t\t//console.log(newDivision)\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tcurrentSuggestionDivision: newDivision,\r\n\t\t\tcurrentCompanyGovernedIndexes:values,\r\n\t\t\tlastGovernedCompanyRequestStatus:undefined,\r\n\t\t})\r\n\t}\r\n\tbackGovernedCompanyLayer = (event) => {\r\n\t\tlet values = this.state.currentCompanyGovernedIndexes\r\n\t\tvalues.splice(event.target.value)\r\n\t\t\r\n\t\tlet newDivision = values[ values.length-1 ]\r\n\t\t//console.log(newDivision)\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tcurrentSuggestionDivision: newDivision,\r\n\t\t\tcurrentCompanyGovernedIndexes:values,\r\n\t\t\tlastGovernedCompanyRequestStatus:undefined,\r\n\t\t})\r\n\t}\r\n\t\r\n\tgetThatData = () => {\r\n\t\t//console.log(this.state.currentDivisionID)\r\n\t\tthis.getCompanyEHIData()\r\n\t\tthis.getCompanyValidDates()\r\n\t\tthis.getCompanyValidSuggestionDates()\r\n\t}\r\n\tgetCompanyDataRequest = (event) => {\r\n\t\t// Going to have to define permission styles...\r\n\t\tlet splitUp = event.target.value.split(\",\")\r\n\t\tlet permCheck = ( Number(splitUp[0]) > 0)\r\n\t\tif (permCheck) {\r\n\t\t\t// Hm, combine this with the one down there perhaps....\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentDivisionName: splitUp[1],\r\n\t\t\t\tcurrentDivisionID: splitUp[2],\r\n\t\t\t\tlastCompanyRequestStatus:permCheck,\r\n\t\t\t}, this.getThatData )\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Not allowed!\")\r\n\t\t\tthis.setState({\r\n\t\t\t\tlastCompanyRequestStatus:permCheck\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Viewing the Journal's Prompt and Data...\r\n\tchangeJournalPrompt = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedJournalPrompt:event.currentTarget.value\r\n\t\t})\r\n\t}\r\n\tchangeJournalAspect = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedJournalAspect:event.currentTarget.value\r\n\t\t})\r\n\t}\r\n\t\r\n\t// Viewing a Company's journal Prompt and Data\r\n\tchangeCompanyPrompt = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedCompanyPrompt:event.currentTarget.value\r\n\t\t})\r\n\t}\r\n\tchangeCompanyAspect = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedCompanyAspect:event.currentTarget.value\r\n\t\t})\r\n\t}\r\n\tchangeCompanyDay = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedCompanyDay:event.currentTarget.value\r\n\t\t});\r\n\t}\r\n\t\r\n\t// Rendering this with Bootstrap React.... To see if there is anything really interesting I can do with it\r\n\t// So far it doesnt look all that different \r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"contentPages\">\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t{/*Entire thing...*/}\r\n\t\t\t\t\t<div className=\"row my-5\"/>\r\n\t\t\t\t\t<div className=\"row m-1 my-5\">\r\n\t\t\t\t\t\t{/*Sidebar for selecting everything...*/}\r\n\t\t\t\t\t\t{/*First, lets list absolutly everything I would want to be selecting in this mode...*/}\r\n\t\t\t\t\t\t<div className=\"col- m-1\">\r\n\t\t\t\t\t\t\t{/* A thing for the top of the sidebar*/}\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h5>Today's Date</h5>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.currentDate.toString().split(\"(\")[0]}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{/*Start of the Journal Mode Stuff...*/}\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h5>Journal View</h5>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/*Going to need to alter this to show which is active?*/}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/*<Link className=\"list-group-item\" to={this.props.match.url+\"/EditProfile\"}>Edit Profile</Link>*/}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"list-group-item\" to={this.props.match.url+\"/journalWrite\"}>Write Todays Journal</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"list-group-item\" to={this.props.match.url+\"/journalRead\"}>Review Previous Journals</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"list-group-item\" to={this.props.match.url+\"/writeSuggestion\"}>Write Suggestion</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"list-group-item\" to={this.props.match.url+\"/userProfile\"}>User Profile</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/*Start of the Company Mode Stuff...*/}\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h5>Company View</h5>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"list-group-item\">{this.state.currentDivisionName}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"list-group-item\" to={this.props.match.url+\"/companySelect\"}>Select Company</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/*Going to need to alter this to show which is active?*/}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"list-group-item\" to={this.props.match.url+\"/companyProfile\"}>View/Edit Company Settings</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"list-group-item\" to={this.props.match.url+\"/companyEHI\"}>Review Company EHI</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"list-group-item\" to={this.props.match.url+\"/companySummary\"}>Review Company Summaries</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"list-group-item\" to={this.props.match.url+\"/companySuggestions\"}>View Suggestions</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{/*<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t<button className=\"btn btn-outline-danger\" onClick={this.redoLoad}>\r\n\t\t\t\t\t\t\t\t\t\tRefresh Global Data\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>*/}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/*Content for the everything....*/}\r\n\t\t\t\t\t\t<div className=\"col border m-1\">\r\n\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t<Route path={this.props.match.url+\"/\"} exact component={() => <DefaultView\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t/>} \r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<Route path={this.props.match.url+\"/userProfile\"} component={() => <UserProfile\r\n\t\t\t\t\t\t\t\t\t\tAPIHost={this.props.APIHost}\r\n\t\t\t\t\t\t\t\t\t\tauthToken={this.props.authToken}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcurrentUser={this.props.currentUser}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tviewNameList={this.state.companyViewableDataRawList}\r\n\t\t\t\t\t\t\t\t\t\tviewIDList={this.state.companyViewableDataRawIDs}\r\n\t\t\t\t\t\t\t\t\t\tsendIDList={this.state.companySendDataRawIDList}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tgovernedNameList={this.state.companyGovernedDataRawList}\r\n\t\t\t\t\t\t\t\t\t\tgovernedIDList={this.state.companyGovernedDataRawIDList}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\ttriggerRefresh={this.redoLoad}\r\n\t\t\t\t\t\t\t\t\t\ttriggerLogout={this.forceLogout}\r\n\t\t\t\t\t\t\t\t\t/>} \r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route path={this.props.match.url+\"/writeSuggestion\"} component={() => <WriteSuggestion\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcurrentCompanySelections={this.state.currentCompanyGovernedIndexes}\r\n\t\t\t\t\t\t\t\t\t\tcompanyDataTree={this.state.companyGovernedDataTree}\r\n\t\t\t\t\t\t\t\t\t\tlastRequestStatus={this.state.lastGovernedCompanyRequestStatus}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tselectLayer={this.selectGovernedCompanyLayer}\r\n\t\t\t\t\t\t\t\t\t\tbackLayer={this.backGovernedCompanyLayer}\r\n\t\t\t\t\t\t\t\t\t\tgetDataRequest={this.getGovernedCompanyDataRequest}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.changeSuggestionContent}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\teditorState={this.state.suggestionEditorState}\r\n\t\t\t\t\t\t\t\t\t\tsaveToServer={this.postSuggestion}\r\n\t\t\t\t\t\t\t\t\t/>} \r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route path={this.props.match.url+\"/journalWrite\"} component={() => <WriteJournals\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.changeJournalContent}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder={this.state.journalPlaceholder}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\teditorState={this.state.journalEditorState}\r\n\t\t\t\t\t\t\t\t\t\tsaveToServer={this.postJournal}\r\n\t\t\t\t\t\t\t\t\t/>} \r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route path={this.props.match.url+\"/journalRead\"} component={() => <ViewJournals\r\n\t\t\t\t\t\t\t\t\t\tcurrentDate={this.state.selectedJournalDate}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tdataSet={this.state.selectedJournalData}\r\n\t\t\t\t\t\t\t\t\t\tselectedPrompt={this.state.selectedJournalPrompt}\r\n\t\t\t\t\t\t\t\t\t\tselectedAspect={this.state.selectedJournalAspect}\r\n\t\t\t\t\t\t\t\t\t\tvalidJournalDates={this.state.validJournalDates}\r\n\t\t\t\t\t\t\t\t\t\tvalidJournalScanDates={this.state.validJournalScanDates}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tgetJournalDates={this.getValidJournalDates}\r\n\t\t\t\t\t\t\t\t\t\tpickDate={this.pickJournalCalenderDate}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tdisplayMessage={this.state.journalMessage}\r\n\t\t\t\t\t\t\t\t\t\tcurrentJournal={this.state.journalContent}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tsetPrompt={this.changeJournalPrompt}\r\n\t\t\t\t\t\t\t\t\t\tsetAI={this.changeJournalAspect}\r\n\t\t\t\t\t\t\t\t\t/>} \r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route path={this.props.match.url+\"/companySelect\"} component={() => <SelectCompany\r\n\t\t\t\t\t\t\t\t\t\tcurrentCompanySelections={this.state.currentCompanyIndexes}\r\n\t\t\t\t\t\t\t\t\t\tcompanyDataTree={this.state.companyViewableDataTree}\r\n\t\t\t\t\t\t\t\t\t\tlastRequestStatus={this.state.lastCompanyRequestStatus}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tselectLayer={this.selectCompanyLayer}\r\n\t\t\t\t\t\t\t\t\t\tbackLayer={this.backCompanyLayer}\r\n\t\t\t\t\t\t\t\t\t\tgetDataRequest={this.getCompanyDataRequest}\r\n\t\t\t\t\t\t\t\t\t/>} \r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route path={this.props.match.url+\"/companyProfile\"} component={() => <CompanySettings\r\n\t\t\t\t\t\t\t\t\t\tAPIHost={this.props.APIHost}\r\n\t\t\t\t\t\t\t\t\t\tauthToken={this.props.authToken}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcurrentDivisionID={this.state.currentDivisionID}\r\n\t\t\t\t\t\t\t\t\t/>} \r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route path={this.props.match.url+\"/companySuggestions\"} component={() => <SuggestionBox\r\n\t\t\t\t\t\t\t\t\t\tcurrentDate={this.state.selectedCompanyDate}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tvalidDays={this.state.validDivisionSuggestionDates}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tdataDay={this.state.selectedSuggestDay}\r\n\t\t\t\t\t\t\t\t\t\tdataSet={this.state.selectedSuggestDayData}\r\n\t\t\t\t\t\t\t\t\t\tpickDate={this.getCompanySuggestionData}\r\n\t\t\t\t\t\t\t\t\t/>} \r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route path={this.props.match.url+\"/companyEHI\"} component={() => <EHIDisplay\r\n\t\t\t\t\t\t\t\t\t\ttimeIndexDay={this.state.EHIDayTimespan}\r\n\t\t\t\t\t\t\t\t\t\ttimeIndexWeek={this.state.EHIWeekTimespan}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tehiDayLabels={this.state.EHIDayLabels}\r\n\t\t\t\t\t\t\t\t\t\tehiDayData={this.state.EHIDaySet}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tehiWeekLabels={this.state.EHIWeekLabels}\r\n\t\t\t\t\t\t\t\t\t\tehiWeekData={this.state.EHIWeekSet}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tonDayToggle={this.changeEHIDaydates}\r\n\t\t\t\t\t\t\t\t\t\tonWeekToggle={this.changeEHIWeekdates}\r\n\t\t\t\t\t\t\t\t\t/>} \r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route path={this.props.match.url+\"/companySummary\"} component={() => <ViewCompany\r\n\t\t\t\t\t\t\t\t\t\tcurrentDate={this.state.selectedCompanyDate}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcurrentCompany={this.state.currentCompanyDataName}\r\n\t\t\t\t\t\t\t\t\t\tanchorDate={this.state.currentCompanyDataDate}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tvalidSummaryDates={this.state.validCompanySummaryDates}\r\n\r\n\t\t\t\t\t\t\t\t\t\tdisplayMessage={this.state.companyMessage}\r\n\t\t\t\t\t\t\t\t\t\tdataSet={this.state.selectedSummaryWeekData}\r\n\t\t\t\t\t\t\t\t\t\tselectedDay={this.state.selectedCompanyDay}\r\n\t\t\t\t\t\t\t\t\t\tselectedPrompt={this.state.selectedCompanyPrompt}\r\n\t\t\t\t\t\t\t\t\t\tselectedAspect={this.state.selectedCompanyAspect}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tsetPrompt={this.changeCompanyPrompt}\r\n\t\t\t\t\t\t\t\t\t\tsetAI={this.changeCompanyAspect}\r\n\t\t\t\t\t\t\t\t\t\tsetDay={this.changeCompanyDay}\r\n\t\t\t\t\t\t\t\t\t\tsetCompany={this.changeSelectedCompany}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tloadCompanyList={this.getUserCompanyAdminViewTree}\r\n\t\t\t\t\t\t\t\t\t\tgetValidDates={this.getCompanyValidDates}\r\n\t\t\t\t\t\t\t\t\t\tpickDate={this.getCompanyWeeklySummary}\r\n\t\t\t\t\t\t\t\t\t/>} \r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(ContentPages);","import React from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Header, Features, About, ContactUs, BetaContact} from \"./landingPages\";\r\n// Services, Testimonials, ContactInfo,\r\n\r\n// I honestly dont know what to put in the Free pages yet...\r\n\r\nclass FreePages extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t\t\r\n\t\t\t// hmmmm\r\n\t\t\texample: 0,\r\n        };\r\n\t}\r\n\t\r\n\tbackButton = () => {\r\n\t\tthis.props.history.goBack()\r\n\t}\r\n\t\r\n\t// Rendering this with Bootstrap React.... To see if there is anything really interesting I can do with it\r\n\t// So far it doesnt look all that different \r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"freePages\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<BetaContact \r\n\t\t\t\t\t\tAPIHost={this.props.APIHost}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Features />\r\n\t\t\t\t\t<About />\r\n\t\t\t\t\t{/* <Services /> */}\r\n\t\t\t\t\t{/* <Testimonials /> */}\r\n\t\t\t\t\t<ContactUs \r\n\t\t\t\t\t\tAPIHost={this.props.APIHost}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* <ContactInfo /> */}\r\n\t\t\t\t\t{/*Would this be better as an empty set?*/}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(FreePages);","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { SignIn, SignUp, Forgot, VerifyEmail } from \"./components/authPages\";\nimport { ContactUs } from \"./components/landingPages\";\n\nimport { Navigation, Footer } from \"./components\";\nimport { LandingPages, ContentPages } from \"./components\";\n//AuthPages\n\nimport { APIRefreshToken } from \"./utils\";\n\nimport Store from \"store\"\n\n//import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport './style.css'\n\n// Is THIS a patch for Github Pages react stuff?\n// Maybe...\n// Ill have to test this...\nconst basePath = \"/scenere\"\n\nconst hostName = \"https://cmaster.pythonanywhere.com\"\n//const hostName = \"http://10.0.0.60:8000\"\n\nclass App extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n          \n\t\t  currentUser: undefined,\n\t\t  sessionToken: undefined,\n\t\t  remember: false,\n\n        };\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis.loadFromCookies();\n\t};\n\t\n\tloadFromCookies = () => {\n\t\tconst lastUserSet = Store.get('lastUser');\n\t\t\t\n\t\ttry{ \n\t\t\t// IF we are successful, then we also want to set remember to true... As it must have been in that state to get this\n\t\t\tthis.setState({ \n\t\t\t\tcurrentUser: lastUserSet.user, \n\t\t\t\tsessionToken: lastUserSet.session,\n\t\t\t\tremember: true,\n\t\t\t}) \n\t\t}\n\t\tcatch{\n\t\t\tconsole.log(\"User was NOT found in the storage\")\n\t\t};\n\t}\n\t\n\tsetToken = ( token, username, remember ) => {\n\t\t// Verify this before we sent it in I guess?\n\t\tthis.setState({ \n\t\t\tsessionToken: token, \n\t\t\tcurrentUser: username, \n\t\t\trememberMe: remember,\n\t\t})\n\t\t\n\t\tif (remember === true) {\n\t\t\tStore.set('lastUser', { user:username, session:token })\n\t\t\t//console.log(\"Remembered User\")\n\t\t}\n\t\t\n\t\t// Return if we succeeded or not\n\t\treturn true\n\t}\n\t\n\t\n\trefreshCallback = (incomingToken) => {\n\t\tthis.setToken(incomingToken, this.state.currentUser, this.status.rememberMe)\n\t}\n\trefreshFailure = () => {\n\t\tthis.logout()\n\t}\n\t// Test out refreshing the token...\n\t// Should do this every page reload...\n\trefresh = () => {\n\t\tAPIRefreshToken(hostName, this.state.sessionToken, this.refreshCallback, this.refreshFailure)\n\t}\n\n\t// Should move this over to the UTIL...\n\tlogout = () => {\n\t\tthis.setState({ \n\t\t\tsessionToken: undefined, \n\t\t\tcurrentUser: undefined \n\t\t})\n\n\t\t// Store this as a cookie instead?\n\t\tStore.remove('lastUser')\n\t}\n\t\n\trender() {\n\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\">\n\t\t\t\n\t\t\t\t\t<Navigation \n\t\t\t\t\t\tcurrentUser={this.state.currentUser}\n\t\t\t\t\t\tbasePath={basePath}\n\n\t\t\t\t\t\tclearLogin={this.logout}\n\t\t\t\t\t/>\n\t\t\t\t\t\t\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\n\t\t\t\t\t\t{/*To catch ONLY the landing page, this one has to be exact...*/}\n\t\t\t\t\t\t{/*Unless I am also missing something*/}\n\t\t\t\t\t\t<Route path={basePath+\"/\"} exact component={() => <LandingPages \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/>} \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/*This can actually be replaced by a Modal in the navigational menu....\n\t\t\t\t\t\t<Route path={basePath+\"/auth\"} component={() => <AuthPages \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/>} \n\t\t\t\t\t\t/>*/}\n\t\t\t\t\t\t<Route path={basePath+\"/signin\"} exact component={() => <SignIn \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\tloginSave={this.setToken}\n\n\t\t\t\t\t\t\t\treRouteTarget={basePath+\"/dashboard\"}\n\t\t\t\t\t\t\t\tforgotPath={basePath+\"/forgot\"}\n\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t/>\t\n\t\t\t\t\t\t<Route path={basePath+\"/signup\"} exact component={() => <SignUp \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\treRouteTarget={basePath+\"/verify\"}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tloginSave={this.setToken}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//currentUser={this.state.currentUser}\n\t\t\t\t\t\t\t\tauthToken={this.state.sessionToken}\n\t\t\t\t\t\t\t/>} \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route path={basePath+\"/verify\"} exact component={() => <VerifyEmail \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\tauthToken={this.state.sessionToken}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tforceLogout={this.logout}\n\t\t\t\t\t\t\t\treRouteTarget={basePath+\"/signin\"}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treRouteSuccessTarget={basePath+\"/dashboard\"}\n\t\t\t\t\t\t\t/>} \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route path={basePath+\"/forgot\"} exact component={() => <Forgot \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treRouteTarget={basePath+\"/signin\"}\n\t\t\t\t\t\t\t/>} \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Route path={basePath+\"/contact\"} exact component={() => <ContactUs \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t/>} \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/*And depending on how complicated this gets, I may need to split this*/}\n\t\t\t\t\t\t<Route path={basePath+\"/dashboard\"} component={() => <ContentPages \n\t\t\t\t\t\t\t\tAPIHost={hostName}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttokenRefresh={this.refresh}\n\t\t\t\t\t\t\t\treRouteTarget={basePath+\"/signin\"}\n\t\t\t\t\t\t\t\tactivateRedirect={basePath+\"/verify\"}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tforceLogout={this.logout}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcurrentUser={this.state.currentUser}\n\t\t\t\t\t\t\t\tauthToken={this.state.sessionToken}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/>} \n\t\t\t\t\t\t/>\n\n\t\t\t\t\t</Switch>\n\n\t\t\t\t\t<Footer \n\t\t\t\t\t\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport'bootstrap/dist/css/bootstrap.min.css';\n//import $ from'jquery';\n//import Popper from 'popper.js';\nimport'bootstrap/dist/js/bootstrap.bundle.min';\n\n//import '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\n//<React.StrictMode>\n//</React.StrictMode>,\n\nReactDOM.render(\n  \n\t<App />,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}