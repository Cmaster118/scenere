{"version":3,"sources":["components/navigation.jsx","components/footer.jsx","components/landing.jsx","components/signIn.jsx","components/signUp.jsx","utils/index.js","components/journalView.jsx","components/journalMake.js","components/companyView.js","App.js","reportWebVitals.js","index.js"],"names":["navigation","props","state","something","className","to","this","currentUser","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","location","pathname","React","Component","withRouter","footer","landing","getFromCookies","Store","get","chartReference","createRef","userToken","class","src","alt","signIn","loadFromCookies","data","setState","username","user","password","pass","userFieldChange","event","target","value","passFieldChange","remFieldChange","remember","handleSubmit","set","console","log","axios","post","then","res","latestAttept","result","tokenSetter","token","history","push","catch","err","preventDefault","currentState","latestAttepmt","onSubmit","onChange","placeholder","htmlFor","href","signup","usernameFieldChange","emailFieldChange","email","pass2FieldChange","password2","firstNameFieldChange","firstName","lastnameFieldChange","lastName","checkFieldChange","checkField","getRadarEmotionData","inputData","labels","datasets","label","backgroundColor","borderColor","borderWidth","getSentimentData","getConceptsData","getCategoryData","journalView","journalDates","validJournalScanDates","AIDates","validJournalDates","loadTestData","index","AIdata","catData","categories","catLabels","catScores","cat","score","conData","concepts","conLabels","conRelevance","conDatabase","con","text","relevance","dbpedia_resource","emDataObj","emotion","document","emData","anger","disgust","fear","joy","sadness","entData","entities","entity","ent","entEmotion","senDataScore","sentiment","oppData","Math","abs","arrangedDataScore","entStore","count","keyData","keywords","keyword","key","keyEmotion","keyStore","relation","relDat","relations","rel","relStore","init","arguments","action","dataCategories","dataConcepts","dataEmotion","dataEntities","dataKeywords","dataRelations","dataSentiment","saveToCookies","getJournalDates","authToken","config","headers","Authorization","tempAIArray","tempJoArray","remove","item","newDate","Date","createdDate","checkDate","getFullYear","getMonth","getDate","hasAI","pickDate","selectedDate","journal","content","currentDate","dateReq","toJSON","split","length","AIresult","messages","toString","journalDisp","tileClassName","date","view","hasJournal","find","element","journalData","optionsCategories","scales","yAxes","ticks","beginAtZero","suggestedMin","suggestedMax","optionsConcepts","optionsEmotions","scale","optionsSentiment","cutoutPercentage","editorState","setEditor","editor","entitiesDisplay","emotionData","sentimentData","scope","ref","options","keywordsDisplay","relationsDisplay","minDetail","maxDetail","onClick","styles","border","minHeight","saveJournal","shorthand","author","getCurrentContent","getPlainText","changeJournal","newContent","ContentState","createFromText","newState","EditorState","createWithContent","onBoldClick","RichUtils","toggleInlineStyle","handleKeyCommand","command","today","createEmpty","journalPlaceolder","bind","style","companyView","batchIndex","maxVal","relSum","batchData","i","conSum","emSum","emSet","totalData","unshift","keyEmSum","keyRelSum","keySenSum","keySenScore","totalCount","senSum","getCookiesValidDates","getDates","currentCompany","validSummaryDates","getValidDates","tempSumArray","forDate","getCompanyList","adding","companyOwner","name","includes","companyAllowsView","companySendsTo","companyList","summaryData","summaryResult","companyDisp","setCurrentCompany","dropMessage","dropDownInternal","comp","aria-haspopup","aria-labelledby","App","lastUserSet","sessionToken","session","setToken","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.18cc7ace.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nclass navigation extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n          \r\n\t\t  something: null,\r\n\r\n        };\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"navigation\">\r\n\t\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">\r\n\t\t\t\t\t\t\tUnnamed Journaling Site\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<p className=\"text-light\">\r\n\t\t\t\t\t\t\tCurrent User: {this.props.currentUser}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"navbar-toggler\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tdata-toggle=\"collapse\"\r\n\t\t\t\t\t\t\tdata-target=\"#navbarResponsive\"\r\n\t\t\t\t\t\t\taria-controls=\"navbarResponsive\"\r\n\t\t\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t\t\t\taria-label=\"Toggle navigation\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n\t\t\t\t\t\t\t<ul className=\"navbar-nav ml-auto\">\r\n\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\tclassName={`nav-item  ${\r\n\t\t\t\t\t\t\t\t\tthis.props.location.pathname === \"/\" ? \"active\" : \"\"\r\n\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/\">\r\n\t\t\t\t\t\t\t\t\t\tLanding\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"sr-only\">(current)</span>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\tclassName={`nav-item  ${\r\n\t\t\t\t\t\t\t\t\tthis.props.location.pathname === \"/signup\" ? \"active\" : \"\"\r\n\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/signup\">\r\n\t\t\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\tclassName={`nav-item  ${\r\n\t\t\t\t\t\t\t\t\tthis.props.location.pathname === \"/signin\" ? \"active\" : \"\"\r\n\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/signin\">\r\n\t\t\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\tclassName={`nav-item  ${\r\n\t\t\t\t\t\t\t\t\tthis.props.location.pathname === \"/read\" ? \"active\" : \"\"\r\n\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/read\">\r\n\t\t\t\t\t\t\t\t\t\tJournalScan\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\tclassName={`nav-item  ${\r\n\t\t\t\t\t\t\t\t\tthis.props.location.pathname === \"/write\" ? \"active\" : \"\"\r\n\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/write\">\r\n\t\t\t\t\t\t\t\t\t\tJournalWrite\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\tclassName={`nav-item  ${\r\n\t\t\t\t\t\t\t\t\tthis.props.location.pathname === \"/company\" ? \"active\" : \"\"\r\n\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/company\">\r\n\t\t\t\t\t\t\t\t\t\tCompany\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(navigation);","import React from \"react\";\r\n\r\nclass footer extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"footer\">\r\n\t\t\t\t<footer className=\"py-3 bg-dark fixed-bottom\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<p className=\"m-0 text-center text-white\">\r\n\t\t\t\t\t\t\tCopyright &copy; Nightingale Technologies 2020\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</footer>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default footer;","import React from \"react\";\r\n// import axios from \"axios\";\r\n\r\nimport Store from \"store\"\r\n\r\nclass landing extends React.Component {\r\n\r\n\t// Lets test this out, before we move this over to the App js file\r\n\tconstructor(props) {\r\n        super(props);\r\n\t\tthis.chartReference = React.createRef();\r\n\t\t\r\n        this.state = {\r\n\t\t\tuserToken: null,\r\n        };\r\n\t}\r\n\t\r\n\tgetFromCookies = () => {\r\n\t\tStore.get('rememberSomething')\r\n\t};\r\n\t\r\n\trender() {\r\n\t\r\n\t\treturn (\r\n\t\t\t<div className=\"landing\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row align-items-center my-5\">\r\n\t\t\t\t\t\t<div className=\"col-lg-12\">\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tSample Title\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row align-items-center my-2\">\r\n\t\t\t\t\t\t<div class=\"col-lg-7\">\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclass=\"img-fluid rounded mb-4 mb-lg-0\"\r\n\t\t\t\t\t\t\tsrc=\"http://placehold.it/900x400\"\r\n\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col m-5 \">\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tExplainations ahoy!\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default landing;","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n//import { withRouter } from 'react-router-dom'\r\n\r\nimport Store from \"store\"\r\n\r\nclass signIn extends React.Component {\r\n\r\n\t// Lets test this out, before we move this over to the App js file\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          \r\n\t\t\t// Lets do a state machine for the sake of it...\r\n\t\t\t// 0 is \"No result given yet\"\r\n\t\t\t// 1+ would be error codes...\r\n\t\t\t// How can I change this screen as per this?\r\n\t\t\t// Eh, thats later...\r\n\t\t\tcurrentState: 0,\r\n\r\n\t\t\t// This can take in the response code, and we can use that, cant we?\r\n\t\t\tlatestAttepmt: 0,\r\n\t\t  \r\n\t\t\tusername: '',\r\n\t\t\t\r\n\t\t\t// This needs to be hashed as fast as possible...\r\n\t\t\t// But I will worry about security...\r\n\t\t\t// Just note that this is probobly a bad idea...\r\n\t\t\tpassword: '',\r\n\t\t\t\r\n\t\t\tremember: false,\r\n\t\t\t\r\n        };\r\n\t\t\r\n\t\t//this.props.tokenSetter()\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis.loadFromCookies();\r\n\t};\r\n\t\r\n\tloadFromCookies = () => {\r\n\t\t\r\n\t\tconst data = Store.get('rememberUser')\r\n\t\ttry {\r\n\t\t\tthis.setState({ username:data.user ,password:data.pass })\r\n\t\t} catch {\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tuserFieldChange = (event) => {\r\n\t\tthis.setState( {username: event.target.value} )\r\n\t}\r\n\t\r\n\tpassFieldChange = (event) => {\r\n\t\tthis.setState( {password: event.target.value} )\r\n\t}\r\n\t\r\n\tremFieldChange = (event) => {\r\n\t\tthis.setState( {remember: event.target.value} )\r\n\t}\r\n\t\r\n\thandleSubmit = event => {\r\n\t\t//console.log(\"Login Triggered\")\r\n\t\t\r\n\t\t// THIS IS TERRIBLE SECIRTY! WILL SECURE THE PASSWORD IN PLAIN TEXT!\r\n\t\tif(this.state.remember) {\r\n\t\t\tStore.set('rememberUser', {user:this.state.username , pass: this.state.password })\r\n\t\t\tconsole.log(\"User data Stored\")\r\n\t\t}\r\n\t\t\r\n\t\tconst data = {\r\n\t\t\tusername: this.state.username,\r\n\t\t\tpassword: this.state.password\r\n\t\t};\r\n\t\t\r\n\t\t//console.log(data)\r\n\r\n\t\taxios.post(\"http://10.0.0.60:8000/apiTokenAuth/\", data )\r\n\t\t.then( res => { \r\n\t\t\tthis.setState({ latestAttept: 200 })\r\n\t\t\tconst result = this.props.tokenSetter( res.data.token, this.state.username )\r\n\t\t\tconsole.log(\"Success\")\r\n\t\t\t\r\n\t\t\tif (result) {\r\n\t\t\t\tconsole.log(\"Token registered\")\r\n\t\t\t\t\r\n\t\t\t\t// Change this to a dashboard lookin thing\r\n\t\t\t\tthis.props.history.push('/company')\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"Token Failed..?\")\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch( err => {\r\n\t\t\t// Change this depending on the error...\r\n\t\t\tthis.setState({ latestAttept: 400 })\r\n\t\t\tconsole.log(err)\r\n\t\t\tconsole.log(\"Connection failed...\")\r\n\t\t})\r\n\r\n\t\tevent.preventDefault();\r\n\t}\r\n\t\r\n\trender() {\r\n\t\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<form onSubmit={this.handleSubmit} >\r\n\t\t\t\t\t<h3>Sign In</h3>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Email Address</label>\r\n\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.username} onChange={this.userFieldChange} placeholder='Enter email' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t\t\t<input type='password' className='form-control' value={this.state.password} onChange={this.passFieldChange} placeholder='Enter password' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<input type='checkbox' className='form-control-input' id='customCheck1' value={this.state.remember} onChange={this.remFieldChange} />\r\n\t\t\t\t\t\t<label className='form-control-label' htmlFor='customCheck1' >Remember Me</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button type='submit' className='btn btn-dark btn-block'>Submit</button>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<p className='col forgot-password text-left text-dark'>\r\n\t\t\t\t\t\t\t<a href='10.0.0.60:3000'>Sign Up</a>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<p className='col forgot-password text-right text-dark'>\r\n\t\t\t\t\t\t\t<a href='10.0.0.60:3000'>Forgot password?</a>\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(signIn);","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass signup extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t\t\r\n\t\t\tusername: '',\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tpassword2: '',\r\n\t\t\tfirstName: '',\r\n\t\t\tlastName: '',\r\n\t\t\t\r\n\t\t\tcheckField: false,\r\n        };\r\n\t}\r\n\t\r\n\t// Wait, are Usernames a good thing for what we are doing? Hmmmm\r\n\tusernameFieldChange = (event) => {\r\n\t\tthis.setState( {username: event.target.value} )\r\n\t}\r\n\t\r\n\temailFieldChange = (event) => {\r\n\t\tthis.setState( {email: event.target.value} )\r\n\t}\r\n\t\r\n\tpassFieldChange = (event) => {\r\n\t\tthis.setState( {password: event.target.value} )\r\n\t}\r\n\t\r\n\tpass2FieldChange = (event) => {\r\n\t\tthis.setState( {password2: event.target.value} )\r\n\t}\r\n\t\r\n\tfirstNameFieldChange = (event) => {\r\n\t\tthis.setState( {firstName: event.target.value} )\r\n\t}\r\n\t\r\n\tlastnameFieldChange = (event) => {\r\n\t\tthis.setState( {lastName: event.target.value} )\r\n\t}\r\n\t\r\n\tcheckFieldChange = (event) => {\r\n\t\tthis.setState( {checkField: event.target.value} )\r\n\t}\r\n\t\r\n\thandleSubmit = event => {\r\n\t\t\r\n\t\tif (this.state.checkField) {\r\n\t\t\tconsole.log(\"Field was not checked\")\r\n\t\t}\r\n\t\t\r\n\t\tconst data = {\r\n\t\t\tusername: this.state.username,\r\n\t\t\t\r\n\t\t\tpassword: this.state.password,\r\n\t\t\tpassword2: this.state.password2,\r\n\t\t\t\r\n\t\t\temail: this.state.email,\r\n\t\t\t\r\n\t\t\tfirst_name: this.state.firstName,\r\n\t\t\tlast_name: this.state.firstName,\r\n\t\t};\r\n\t\t\r\n\t\t//DISABLE SIGNUP FOR NOW\r\n\t\t\r\n\t\t//console.log(data)\r\n\r\n\t\t/*axios.post(\"http://10.0.0.60:8000/registerUser/\", data )\r\n\t\t.then( res => { \r\n\t\t\tthis.setState({ latestAttept: 200 })\r\n\t\t\tconsole.log(\"Success\")\r\n\t\t})\r\n\t\t.catch( err => {\r\n\t\t\t// Change this depending on the error...\r\n\t\t\tthis.setState({ latestAttept: 400 })\r\n\t\t\tconsole.log(err)\r\n\t\t\tconsole.log(\"Connection failed...\")\r\n\t\t})*/\r\n\r\n\t\tevent.preventDefault();\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<form  onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<h3>Sign Up</h3>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Username</label>\r\n\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.username} onChange={this.usernameFieldChange} placeholder='Enter Username' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Email Address</label>\r\n\t\t\t\t\t\t<input type='email' className='form-control' value={this.state.email} onChange={this.emailFieldChange} placeholder='Enter email' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t\t\t<input type='password' className='form-control' value={this.state.password} onChange={this.passFieldChange} placeholder='Enter password' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Confirm Password</label>\r\n\t\t\t\t\t\t<input type='password' className='form-control' value={this.state.password2} onChange={this.pass2FieldChange} placeholder='Confirm password' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>First Name</label>\r\n\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.firstName} onChange={this.firstNameFieldChange} placeholder='First Name' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Last Name</label>\r\n\t\t\t\t\t\t<input type='text' className='form-control' value={this.state.lastName} onChange={this.lastnameFieldChange} placeholder='Last Name' />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<input type='checkbox' className='form-control-input' id='customCheck1' value={this.state.checkField} onChange={this.checkFieldChange} />\r\n\t\t\t\t\t\t<label className='form-control-label' htmlFor='customCheck1' >Legal stuff? Not sure...</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button type='submit' className='btn btn-dark btn-block'>Submit</button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<p className='forgot-password text-right text-dark'>\r\n\t\t\t\t\t\t<a href='10.0.0.60:3000'>Already Registered?</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t</form>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default signup;","// Use this or localstorage?\r\nimport Store from \"store\"\r\n\r\n// Maybe I should put ALL the storage stuff here...\r\nexport const login = (tokenKey, username) => {\r\n\tStore.set('jwtSession', {user:username, token:tokenKey})\r\n}\r\n\r\nexport const logout = () => {\r\n\tStore.remove('jwtSession')\r\n}\r\n\r\nexport const isLoggedIn = () => {\r\n\tif (Store.get('jwtSession')) {\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\treturn false;\r\n}\r\n\r\n// Lets try this for the Graph Data...\r\n// See if this works out okay...\r\n// The options may be overkill though...\r\nexport const getRadarEmotionData = (inputData) => {\r\n\t\r\n\tconst data = {\r\n\t\tlabels: ['Anger', 'Disgust', 'Fear', 'Joy', 'Sadness'],\r\n\t\t\tdatasets: [ \r\n\t\t\t{\r\n\t\t\t\tlabel: 'Confidence Levels',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tbackgroundColor: 'rgba(99, 255, 132, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(99, 255, 132, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getRadarEmotionOptions = () => {\r\n\tconst options = {\r\n\t  scale: {\r\n\t\tticks: { \r\n\t\t\tbeginAtZero: true,\r\n\t\t\tsuggestedMin: 0,\r\n\t\t\tsuggestedMax: 1,\r\n\t\t},\r\n\t  },\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getSentimentData = (inputData) => {\r\n\tconst data = {\r\n\tlabels: ['Positive', 'Negative'],\r\n\tdatasets: [\r\n\t\t\t{\r\n\t\t\tlabel: ['Sentiment'], \r\n\t\t\tdata: inputData,\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(99, 255, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgba(99, 255, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getSentimentOptions = () => {\r\n\tconst options = {\r\n\t\tcutoutPercentage: 50,\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getConceptsData = (inputData, labels) => {\r\n\tconst data = {\r\n\tlabels: labels,\r\n\tdatasets: [\r\n\t\t\t{\r\n\t\t\tlabel: 'Concepts Relevance',\r\n\t\t\tdata: inputData,\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getConceptsOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tsuggestedMin: 0,\r\n\t\t\t\t\t\tsuggestedMax: 1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\n// This can probobly be merged with the other one... but it is here for perhaps a color shift?\r\nexport const getCategoryData = (inputData, labels) => {\r\n\tconst data = {\r\n\tlabels: labels,\r\n\tdatasets: [\r\n\t\t\t{\r\n\t\t\tlabel: 'Categories Score',\r\n\t\t\tdata: inputData,\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getCategoryOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tsuggestedMin: 0,\r\n\t\t\t\t\t\tsuggestedMax: 1,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\n\r\n// This is where my template stuff here?\r\nexport const getDoughData = (inputData, inputData2) => {\r\n\tconst data = {\r\n\t\tlabels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\t\tborderColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getDoughOptions = () => {\r\n\tconst options = {\r\n\t\tcutoutPercentage: 50,\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getRadarData = (inputData) => {\r\n\tconst data = {\r\n\t\tlabels: ['Thing 1', 'Thing 2', 'Thing 3', 'Thing 4', 'Thing 5', 'Thing 6'],\r\n\t\t\tdatasets: [ \r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tbackgroundColor: 'rgba(99, 255, 132, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(99, 255, 132, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getRadarOptions = () => {\r\n\tconst options = {\r\n\t  scale: {\r\n\t\tticks: { beginAtZero: true },\r\n\t  },\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getLineData = (inputData, inputData2) => {\r\n\tconst data = {\r\n\t\tlabels: ['Thing 1', 'Thing 2', 'Thing 3', 'Thing 4', 'Thing 5', 'Thing 6'],\r\n\t\t\tdatasets: [ \r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tfill: false,\r\n\t\t\t\tbackgroundColor: 'rgb(99, 255, 132)',\r\n\t\t\t\tborderColor: 'rgba(99, 255, 132, 0.2)',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes2',\r\n\t\t\t\tdata: inputData2,\r\n\t\t\t\tfill: false,\r\n\t\t\t\tbackgroundColor: 'rgb(255, 99, 132)',\r\n\t\t\t\tborderColor: 'rgba(255, 99, 132, 0.2)',\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getLineOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getBarData = (inputData) => {\r\n\tconst data = {\r\n\tlabels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n\tdatasets: [\r\n\t\t\t{\r\n\t\t\tlabel: '# of Votes',\r\n\t\t\tdata: inputData,\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getBarOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}\r\n\r\nexport const getScatterData = (inputData, inputData2) => {\r\n\tconst data = {\r\n\t\tlabels: ['Thing 1', 'Thing 2', 'Thing 3', 'Thing 4', 'Thing 5', 'Thing 6'],\r\n\t\t\tdatasets: [ \r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes',\r\n\t\t\t\tdata: inputData,\r\n\t\t\t\tbackgroundColor: 'rgba(99, 255, 132, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(99, 255, 132, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: '# of Votes2',\r\n\t\t\t\tdata: inputData2,\r\n\t\t\t\tbackgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\tborderColor: 'rgba(255, 99, 132, 1)',\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\t\r\n\treturn data\r\n}\r\n\r\nexport const getScatterOptions = () => {\r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t},\r\n\t\t\t},],\r\n\t\t},\r\n\t}\r\n\t\r\n\treturn options\r\n}","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Store from \"store\"\r\nimport Calendar from 'react-calendar'\r\nimport { Doughnut, Radar, Bar } from 'react-chartjs-2';\r\n\r\n//import {isLoggedIn} from '../utils';\r\nimport {getRadarEmotionData, getSentimentData, getConceptsData, getCategoryData} from '../utils';\r\nimport {getRadarEmotionOptions, getSentimentOptions, getConceptsOptions, getCategoryOptions} from '../utils';\r\n\r\nclass journalView extends React.Component {\r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tmessages: \"Waiting for user input...\",\r\n\t\t\tjournalData: \"\",\r\n\t\t\t\r\n\t\t\tcurrentDate: new Date(),\r\n\t\t\t\r\n\t\t\t// These are the dates that we know have valid Journal entries\r\n\t\t\tvalidJournalDates: [],\r\n\t\t\t// These are the dates that we know have a valid Journal, AND an valid AI response!\r\n\t\t\tvalidJournalScanDates: [],\r\n\t\t\t\r\n\t\t\tdataCategories: getCategoryData([0], ['']),\r\n\t\t\toptionsCategories: getCategoryOptions(),\r\n\t\t\t\r\n\t\t\tdataConcepts: getConceptsData([0],['']),\r\n\t\t\toptionsConcepts: getConceptsOptions(),\r\n\t\t\t\r\n\t\t\tdataEntities: [],\r\n\t\t\tdataKeywords: [],\r\n\t\t\tdataRelations: [],\r\n\t\t\t\r\n\t\t\tdataEmotion: getRadarEmotionData([0]),\r\n\t\t\toptionsEmotions: getRadarEmotionOptions(),\r\n\t\t\t\r\n\t\t\tdataSentiment: getSentimentData([0]),\r\n\t\t\toptionsSentiment: getSentimentOptions(),\r\n\r\n        };\r\n\t\t\r\n\t\t// This doesnt look right... Fix this later I guess\r\n\t\tthis.onChange = (editorState) => this.setState({editorState});\r\n\t\tthis.setEditor = (editor) => {\r\n\t\t\tthis.editor = editor;\r\n\t\t};\r\n\t\t\r\n\t};\r\n\t\r\n\tcomponentDidMount() {\r\n\t\t\r\n\t\tthis.loadFromCookies();\r\n\t\t\r\n\t};\r\n\t\r\n\tloadFromCookies = () => {\r\n\t\t// Security here given our user....\r\n\t\t// console.log(this.props.currentUser)\r\n\t\t\r\n\t\t// Change this so that it is for the currentuser, I got that up here done, but LETS TRY\r\n\t\tlet journalDates = Store.get(this.props.currentUser+'-ValidDates')\r\n\t\t\r\n\t\ttry{\r\n\t\t\tthis.setState({validJournalScanDates: journalDates.AIDates, validJournalDates: journalDates.journalDates})\r\n\t\t\tconsole.log(\"Got the journal data from the cookies\")\r\n\t\t} catch{\r\n\t\t\t//console.log(\"No cookies to load the data from\")\r\n\t\t}\r\n\t};\r\n\t\r\n\tloadTestData = () => {\r\n\t\t// And here is our testdata for display\r\n\t\tlet AIdata = Store.get('testData')\r\n\t\t//try{\r\n\t\t\t//console.log(AIdata)\r\n\t\t\t\r\n\t\t\t// Categories!\r\n\t\t\tconst catData = AIdata.categories\r\n\t\t\t\r\n\t\t\tlet catLabels = []\r\n\t\t\tlet catScores = []\r\n\t\t\t\r\n\t\t\tvar index;\r\n\t\t\tfor (index in catData) {\r\n\t\t\t\tconst cat = catData[index]\r\n\t\t\t\t//console.log(cat)\r\n\t\t\t\t\r\n\t\t\t\tcatLabels.push(cat.label)\r\n\t\t\t\tcatScores.push(cat.score)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Concepts!\r\n\t\t\tconst conData = AIdata.concepts\r\n\t\t\t\r\n\t\t\tlet conLabels = []\r\n\t\t\tlet conRelevance = []\r\n\t\t\tlet conDatabase = []\r\n\t\t\t\r\n\t\t\tfor (index in conData) {\r\n\t\t\t\tconst con = conData[index]\r\n\t\t\t\t\r\n\t\t\t\tconLabels.push(con.text)\r\n\t\t\t\tconRelevance.push(con.relevance)\r\n\t\t\t\tconDatabase.push(con.dbpedia_resource)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Emotions!\r\n\t\t\tconst emDataObj = AIdata.emotion.document.emotion\r\n\t\t\tconst emData = [emDataObj.anger, emDataObj.disgust, emDataObj.fear, emDataObj.joy, emDataObj.sadness]\r\n\t\t\t\r\n\t\t\t// Entities!\r\n\t\t\tconst entData = AIdata.entities\r\n\t\t\t\r\n\t\t\tlet entity = []\r\n\r\n\t\t\tfor (index in entData) {\r\n\t\t\t\tconst ent = entData[index]\r\n\t\t\t\t//console.log(ent)\r\n\t\t\t\t\r\n\t\t\t\t// What about this?\r\n\t\t\t\t//console.log(ent.disambiguation)\r\n\t\t\t\t\r\n\t\t\t\tconst entEmotion = [ent.emotion.anger, ent.emotion.disgust, ent.emotion.fear, ent.emotion.joy, ent.emotion.sadness]\r\n\t\t\t\t\r\n\t\t\t\tconst senDataScore = ent.sentiment.score\r\n\t\t\t\tconst oppData = 1-Math.abs(senDataScore)\r\n\t\t\t\t\r\n\t\t\t\tlet arrangedDataScore = [0, 0]\r\n\t\t\t\tif (senDataScore > 0) {\r\n\t\t\t\t\tarrangedDataScore = [senDataScore, oppData]\r\n\t\t\t\t} else {\r\n\t\t\t\t\tarrangedDataScore = [oppData, senDataScore]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst entStore = {\r\n\t\t\t\t\tid:index,\r\n\t\t\t\t\t\r\n\t\t\t\t\ttext:ent.text,\r\n\t\t\t\t\ttype:ent.type,\r\n\t\t\t\t\t\r\n\t\t\t\t\tcount:ent.count,\r\n\t\t\t\t\trelevance:ent.relevance,\r\n\t\t\t\t\t\r\n\t\t\t\t\temotion:entEmotion,\r\n\t\t\t\t\tsentiment:arrangedDataScore,\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tentity.push(entStore)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Keywords!\r\n\t\t\tconst keyData = AIdata.keywords\r\n\t\t\t\r\n\t\t\tlet keyword = []\r\n\r\n\t\t\tfor (index in keyData) {\r\n\t\t\t\tconst key = keyData[index]\r\n\t\t\t\t\r\n\t\t\t\t//console.log(key.emotion)\r\n\t\t\t\t//console.log(key.sentiment)\r\n\t\t\t\t\r\n\t\t\t\tconst keyEmotion = [key.emotion.anger, key.emotion.disgust, key.emotion.fear, key.emotion.joy, key.emotion.sadness]\r\n\t\t\t\t\r\n\t\t\t\tconst senDataScore = key.sentiment.score\r\n\t\t\t\tconst oppData = 1-Math.abs(senDataScore)\r\n\t\t\t\t\r\n\t\t\t\tlet arrangedDataScore = [0, 0]\r\n\t\t\t\tif (senDataScore > 0) {\r\n\t\t\t\t\tarrangedDataScore = [senDataScore, oppData]\r\n\t\t\t\t} else {\r\n\t\t\t\t\tarrangedDataScore = [oppData, senDataScore]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst keyStore = {\r\n\t\t\t\t\tid:index,\r\n\t\t\t\t\t\r\n\t\t\t\t\ttext:key.text,\r\n\t\t\t\t\tcount:key.count,\r\n\t\t\t\t\trelevance:key.relevance,\r\n\t\t\t\t\t\r\n\t\t\t\t\temotion:keyEmotion,\r\n\t\t\t\t\tsentiment:arrangedDataScore,\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tkeyword.push(keyStore)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Relations!\r\n\t\t\tlet relation = []\r\n\t\t\t\r\n\t\t\tconst relDat = AIdata.relations\r\n\r\n\t\t\tfor (index in relDat) {\r\n\t\t\t\tconst rel = relDat[index]\r\n\t\t\t\t\r\n\t\t\t\t// Probobly combine these?\r\n\t\t\t\t\r\n\t\t\t\tconst relStore = {\r\n\t\t\t\t\tid: index,\r\n\t\t\t\t\tinit:rel.arguments[0].text,\r\n\t\t\t\t\taction:rel.type,\r\n\t\t\t\t\ttarget:rel.arguments[1].text,\r\n\t\t\t\t\tscore:rel.score,\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\trelation.push(relStore)\r\n\r\n\t\t\t\t// How do I Show this?\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Sentiment!\r\n\t\t\tconst senDataScore = AIdata.sentiment.document.score\r\n\t\t\t\r\n\t\t\tconst senOne = 0.5*(senDataScore + 1)\r\n\t\t\tconst senOpp = 0.5*(senDataScore - 1)\r\n\t\t\t\r\n\t\t\tlet arrangedDataScore = [senOne, senOpp]\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\t\r\n\t\t\t\tdataCategories:getCategoryData(catScores, catLabels),\r\n\t\t\t\tdataConcepts:getConceptsData(conRelevance, conLabels),\r\n\t\t\t\tdataEmotion:getRadarEmotionData(emData),\r\n\t\t\t\t\r\n\t\t\t\tdataEntities: entity,\r\n\t\t\t\tdataKeywords: keyword,\r\n\t\t\t\tdataRelations: relation,\r\n\t\t\t\r\n\t\t\t\tdataSentiment:getSentimentData(arrangedDataScore),\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\t\r\n\t\t//} catch{\r\n\t\t\t//console.log(\"Error!\")\r\n\t\t//}\r\n\t}\r\n\t\r\n\tsaveToCookies = () => {\r\n\t\t\r\n\t\tStore.set(this.props.currentUser+'-ValidDates', { journalDates:this.state.validJournalDates, AIDates:this.state.validJournalScanDates })\r\n\t\tconsole.log(\"Saved to cookies!\")\r\n\t};\r\n\t\r\n\tgetJournalDates = () => {\r\n\t\t\r\n\t\tif (this.props.authToken == null) {\r\n\t\t\tconsole.log(\"Not logged in\")\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\tconst config = {\r\n\t\t\theaders: { Authorization: `JWT ${this.props.authToken}` }\r\n\t\t};\r\n\t\t\r\n\t\t// IF ANY GETS FAILS DUE TO BAD TOKEN, WE NEED TO SEND IT UP THE CHAIN TO DO SOMETHING ABOUT IT\r\n\t\t\r\n\t\t// So, this will give you EVERY SINGLE VALID ENTRY WE HAVE\r\n\t\t// WITHOUT. I REPEAT. WITHOUT THE JOURNAL CONTENT\r\n\t\taxios.get(\"http://10.0.0.60:8000/getJournalDates\", config)\r\n\t\t.then( \r\n\t\t\tres => {\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(\"Got Data!\")\r\n\t\t\t\t\r\n\t\t\t\tlet tempAIArray = []\r\n\t\t\t\tlet tempJoArray = []\r\n\t\t\t\t\r\n\t\t\t\tStore.remove(this.props.currentUser+'-ValidDates')\r\n\r\n\t\t\t\tvar item = \"\"\r\n\t\t\t\tfor (item in res.data){\r\n\t\t\t\t\t\r\n\t\t\t\t\t// THESE DATES HAVE THE WRONG TIMEZONE COMING IN, SO THE RESULTING DAY CAN BE WRONG!!!!\r\n\t\t\t\t\t// CHANGE THIS!!!\r\n\t\t\t\t\tconst newDate = new Date(res.data[item].createdDate)\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst checkDate = newDate.getFullYear()+\"-\"+newDate.getMonth()+\"-\"+(newDate.getDate()+1)\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (res.data[item].hasAI) {\r\n\t\t\t\t\t\ttempAIArray.push( checkDate )\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttempJoArray.push( checkDate )\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({validJournalScanDates: tempAIArray, validJournalDates: tempJoArray})\r\n\t\t\t\t\r\n\t\t})\r\n\t\t.catch( err => {\r\n\t\t\tconsole.log(err)\r\n\t\t});\r\n\t\t\r\n\t\treturn false\r\n\t};\r\n\t\r\n\tpickDate = (selectedDate) => {\r\n\t\t\r\n\t\t// Okay, so check to see if we HAVE the journal entry in our storage\r\n\t\t// If we do, show that!\r\n\t\r\n\t\t// Change this so that it is for the currentuser, I got that up here done, but LETS TRY\r\n\t\tlet journal = Store.get(this.props.currentUser+'-Journal-'+selectedDate)\r\n\t\t\r\n\t\ttry{\r\n\t\t\t\r\n\t\t\t// TO DO, THIS ONE!\r\n\t\t\tconsole.log(journal.content)\r\n\t\t\t\r\n\t\t\tconsole.log(\"Got the Journal entry from storage?!\")\r\n\t\t} catch{\r\n\t\t\t//console.log(\"No cookies to load the data from\")\r\n\t\t\r\n\t\t\t// If we DONT, ask the server\r\n\t\t\t// need to be able to check if it was changed...\r\n\t\t\t// Probobly need to add a \"last Edited\" field...\r\n\t\t\t// And and edit history... but that is for later\r\n\t\t\t\r\n\t\t\t// We will change this to its own function eventually...\r\n\t\t\tif (this.props.authToken == null) {\r\n\t\t\t\tconsole.log(\"Not logged in\")\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: { Authorization: `JWT ${this.props.authToken}` }\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tconsole.log(\"requesting date\")\r\n\t\t\tthis.setState({currentDate: selectedDate})\r\n\t\t\t\r\n\t\t\tconst dateReq = selectedDate.toJSON().split(\"T\")[0]\r\n\t\t\t\r\n\t\t\taxios.get(\"http://10.0.0.60:8000/getUserJournal/?reqDate=\"+dateReq, config)\r\n\t\t\t.then( \r\n\t\t\t\tres => {\r\n\t\t\t\t\t// What if it is > 1?\r\n\t\t\t\t\tif (res.data.length > 0) {\r\n\t\t\t\t\t\tconsole.log(\"obtained a journal entry\")\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (res.data[0].hasAI) {\r\n\t\t\t\t\t\t\tconsole.log(\"Saved to the storage\")\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// Save in the cookies for non-login access...\r\n\t\t\t\t\t\t\tStore.set('testData', res.data[0].AIresult)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.loadTestData()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState( {\r\n\t\t\t\t\t\t\tmessages: \"Showing Journal Entry for: \" + this.state.currentDate.toString(),\r\n\t\t\t\t\t\t\tjournalDisp: res.data[0].content,\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tconsole.log(\"No entry for that day\")\r\n\t\t\t\t\t\tthis.setState( {\r\n\t\t\t\t\t\t\tmessages: \"No entry for that day\",\r\n\t\t\t\t\t\t\tjournalDisp: \"\",\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// LEts not store it in the cookies for now...\r\n\t\t\t})\r\n\t\t\t.catch( err => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t});\r\n\t\t\r\n\t\t}\r\n\t};\r\n\t\r\n\ttileClassName = ({ date, view }) => {\r\n\t\t\r\n\t\t// Add class to tiles in month view only\r\n\t\tif (view === 'month') {\r\n\t\t\t\r\n\t\t\tconst checkDate = date.getFullYear()+\"-\"+date.getMonth()+\"-\"+date.getDate()\r\n\t\t\t\r\n\t\t\t//console.log(checkDate)\r\n\t\t\t//console.log(this.state.validJournalDates)\r\n\r\n\t\t\t// Check if a date React-Calendar wants to check is on the list of dates to add class to\r\n\t\t\tconst hasJournal = this.state.validJournalDates.find( element => element === checkDate)\r\n\t\t\tconst hasAI = this.state.validJournalScanDates.find( element => element === checkDate)\r\n\t\t\t\r\n\t\t\tif (hasAI) {\r\n\t\t\t\treturn 'btn-dark';\r\n\t\t\t} else if (hasJournal) {\r\n\t\t\t\treturn 'btn-info'\r\n\t\t\t} else {\r\n\t\t\t\treturn 'btn-light'\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\t\r\n\t\t// Entities\r\n\t\tvar entitiesDisplay = [];\r\n\t\t\r\n\t\tif (this.state.dataEntities.length > 0) { \r\n\t\t\tvar index;\r\n\t\t\tfor (index in this.state.dataEntities) {\r\n\t\t\t\tconst ent = this.state.dataEntities[index]\r\n\t\t\t\t\r\n\t\t\t\tconst emotionData = getRadarEmotionData(ent.emotion)\r\n\t\t\t\tconst sentimentData = getSentimentData(ent.sentiment)\r\n\t\t\t\t\r\n\t\t\t\tentitiesDisplay.push(\r\n\t\t\t\t\t<tr key={ent.id}>\r\n\t\t\t\t\t\t<th scope=\"row\">{ent.text}</th>\r\n\t\t\t\t\t\t<td>{ent.type}</td>\r\n\t\t\t\t\t\t<td>{ent.count}</td>\r\n\t\t\t\t\t\t<td>{ent.relevance}</td>\r\n\t\t\t\t\t\t<td> <Radar ref={this.chartReference} data={emotionData} options={this.state.optionsEmotions} /> </td>\r\n\t\t\t\t\t\t<td> <Doughnut ref={this.chartReference} data={sentimentData} options={this.state.optionsSentiment} /> </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t}\r\n\t\t\r\n\t\t// Keywords\r\n\t\tvar keywordsDisplay = [];\r\n\t\t\r\n\t\tif (this.state.dataKeywords.length > 0) { \r\n\t\t\tfor (index in this.state.dataKeywords) {\r\n\t\t\t\tconst key = this.state.dataKeywords[index]\r\n\t\t\t\t\r\n\t\t\t\tconst emotionData = getRadarEmotionData(key.emotion)\r\n\t\t\t\tconst sentimentData = getSentimentData(key.sentiment)\r\n\t\t\t\t\r\n\t\t\t\tkeywordsDisplay.push(\r\n\t\t\t\t\t<tr key={key.id}>\r\n\t\t\t\t\t\t<th scope=\"row\">{key.text}</th>\r\n\t\t\t\t\t\t<td>{key.count}</td>\r\n\t\t\t\t\t\t<td><Radar ref={this.chartReference} data={emotionData} options={this.state.optionsEmotions} /></td>\r\n\t\t\t\t\t\t<td><Doughnut ref={this.chartReference} data={sentimentData} options={this.state.optionsSentiment} /></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t}\r\n\t\t\r\n\t\t// R E L A T I O N S\r\n\t\tvar relationsDisplay = [];\r\n\t\t\r\n\t\tif (this.state.dataRelations.length > 0) { \r\n\t\t\r\n\t\t\tfor (index in this.state.dataRelations) {\r\n\t\t\t\tconst rel = this.state.dataRelations[index]\r\n\t\t\t\trelationsDisplay.push(\r\n\t\t\t\t\t<tr key={rel.id}>\r\n\t\t\t\t\t\t<th scope=\"row\">{rel.init}</th>\r\n\t\t\t\t\t\t<td>{rel.action}</td>\r\n\t\t\t\t\t\t<td>{rel.target}</td>\r\n\t\t\t\t\t\t<td>{rel.score}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"mainView\">\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row \">\r\n\t\t\t\t\t\t<div className=\"col-lg-3 border m-2\">\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Calendar \r\n\t\t\t\t\t\t\t\t\tonChange={this.pickDate}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.currentDate}\r\n\t\t\t\t\t\t\t\t\ttileClassName={this.tileClassName}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tminDetail={'year'}\r\n\t\t\t\t\t\t\t\t\tmaxDetail={'month'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col border m-2\">\t\t\t\t\t\r\n\t\t\t\t\t\t\t<p>{this.state.messages}</p>\r\n\t\t\t\t\t\t\t<p>{this.state.journalDisp}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col border mx-2\">\r\n\t\t\t\t\t\t\t<Radar ref={this.chartReference} data={this.state.dataEmotion} options={this.state.optionsEmotions} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col border mx-2\">\r\n\t\t\t\t\t\t\t<Doughnut ref={this.chartReference} data={this.state.dataSentiment} options={this.state.optionsSentiment} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row  my-2\">\r\n\t\t\t\t\t\t<div className=\"col border mx-2\">\r\n\t\t\t\t\t\t\t<Bar ref={this.chartReference} data={this.state.dataCategories} options={this.state.optionsCategories} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col border mx-2\">\r\n\t\t\t\t\t\t\t<Bar ref={this.chartReference} data={this.state.dataConcepts} options={this.state.optionsConcepts} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<h3>Entities!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Type</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Relevance Score</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Emotion</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Sentiment</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{entitiesDisplay}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<h3>Keywords!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Word</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Emotion</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Sentiment</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{keywordsDisplay}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<h3>Relations!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Thing</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Action</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Target</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Score</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{relationsDisplay}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col-lg-2 border mx-2\">\r\n\t\t\t\t\t\t\t<p> Debug! </p>\r\n\t\t\t\t\t\t\t<button onClick={this.loadTestData}> Load Data </button>\r\n\t\t\t\t\t\t\t<button onClick={this.getJournalDates}> Get dates </button>\r\n\t\t\t\t\t\t\t<button onClick={this.saveToCookies}> Save dates </button>\r\n\t\t\t\t\t\t\t<button onClick={this.loadFromCookies}> Load dates </button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row  my-2\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tPADDING\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default journalView;","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\n//import Store from \"store\"\r\nimport {Editor, EditorState, RichUtils, ContentState} from 'draft-js';\r\n\r\nconst styles = {\r\n  editor: {\r\n    border: '1px solid gray',\r\n    minHeight: '6em'\r\n  }\r\n};\r\n\r\nclass journalView extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n\t\t\r\n\t\tconst today = new Date()\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tcurrentDate: today,\r\n\t\t\t\r\n\t\t\tmessages: \"Creating journal for: \" + today.toJSON().split(\"T\")[0],\r\n\t\t\t\r\n\t\t\teditorState: EditorState.createEmpty(),\r\n\t\t\tjournalPlaceolder: \"\",\r\n\r\n        };\r\n\t\t\r\n\t\t// This doesnt look right... Fix this later I guess\r\n\t\tthis.onChange = (editorState) => this.setState({editorState});\r\n\t\tthis.setEditor = (editor) => {\r\n\t\t\tthis.editor = editor;\r\n\t\t};\r\n\t\t\r\n\t};\r\n\r\n\t// Lets test a POST request then!\r\n\tsaveJournal = () => {\r\n\t\t\r\n\t\tif (this.props.authToken == null) {\r\n\t\t\tconsole.log(\"Not logged in\")\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\tconst config = {\r\n\t\t\theaders: { Authorization: `JWT ${this.props.authToken}` }\r\n\t\t};\r\n\t\t\r\n\t\tconst data = {\r\n\t\t\tshorthand: 'Some sort of has identifier?',\r\n\t\t\t\r\n\t\t\t// This is my workaround before I learn what ACTUALLY TO DO HERE\r\n\t\t\tauthor: '',\r\n\t\t\r\n\t\t\t// It SHOULD be sufficient to use the current date...\r\n\t\t\t// Because the journal transitions on date changes...\t\t\r\n\t\t\tcreatedDate: this.state.currentDate.toJSON().split(\"T\")[0],\r\n\t\t\t\r\n\t\t\t// Same here, Should be able to do this...\r\n\t\t\t// The question is, is this an \"overwrite\" or just an add?\r\n\t\t\tcontent: this.state.editorState.getCurrentContent().getPlainText(),\r\n\t\t};\r\n\t\t\r\n\t\tconsole.log(data.content)\r\n\t\t\r\n\t\taxios.post(\"http://10.0.0.60:8000/saveUserJournal/\", data, config )\r\n\t\t.then( res => { \r\n\t\t\r\n\t\t\tconsole.log(res)\r\n\t\t\tconsole.log(\"Success\")\r\n\t\t\t\r\n\t\t})\r\n\t\t.catch( err => {\r\n\t\t\t// Change this depending on the error...\r\n\t\t\tconsole.log(err)\r\n\t\t})\r\n\t}\r\n\r\n\tchangeJournal = (content) => {\r\n\t\t\r\n\t\t//let currentContent = this.state.editorState.getCurrentContent()\r\n\t\t\r\n\t\tlet newContent = ContentState.createFromText( content )\r\n\t\tlet newState = EditorState.createWithContent( newContent )\r\n\t\t\r\n\t\tthis.setState( {editorState: newState} )\r\n\t\t\r\n\t};\r\n\r\n\tonBoldClick = () => {\r\n\t\tthis.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'));\r\n\t}\r\n\t\r\n\thandleKeyCommand = (command, editorState) => {\r\n\t\tconst newState = RichUtils.handleKeyCommand(editorState, command);\r\n\r\n\t\tif (newState) {\r\n\t\t\tthis.onChange(newState);\r\n\t\t\treturn 'handled';\r\n\t\t}\r\n\r\n\t\treturn 'not-handled';\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"makeView\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t{this.state.messages}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col border mx-2 my-2\">\t\t\r\n\t\t\t\t\t\t\t<button onClick={this.onBoldClick.bind(this)}>Bold</button>\r\n\t\t\t\t\t\t\t<div style={styles.editor} >\r\n\t\t\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\t\t  ref={this.setEditor}\r\n\t\t\t\t\t\t\t\t  editorState={this.state.editorState}\r\n\t\t\t\t\t\t\t\t  onChange={this.onChange}\r\n\t\t\t\t\t\t\t\t  handleKeyCommand={this.handleKeyCommand}\r\n\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t  placeholder={this.state.journalPlaceolder}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button onClick={this.saveJournal}> Save current Journal entry </button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default journalView;","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Store from \"store\"\r\nimport Calendar from 'react-calendar'\r\nimport { Doughnut, Radar, Bar } from 'react-chartjs-2';\r\n\r\nimport {getRadarEmotionData, getSentimentData, getConceptsData, getCategoryData} from '../utils';\r\nimport {getRadarEmotionOptions, getSentimentOptions, getConceptsOptions, getCategoryOptions} from '../utils';\r\n\r\n\r\nclass companyView extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\t// Change this up to be a bit better,merge things together...\r\n\t\t\tdropMessage: 'Select Company=>',\r\n\t\t\tcurrentCompany: \"None\",\r\n\t\t\r\n\t\t\tcompanyList: [],\r\n\t\t\t\r\n\t\t\t// These are the dates that we know have valid Summary Entries...\r\n\t\t\tvalidSummaryDates: [],\r\n\t\t\t\r\n\t\t\tmessages: \"Waiting for user input...\",\r\n\t\t\tcompanyDisp:'',\r\n\t\t\t\r\n\t\t\tcurrentDate: new Date(),\r\n\t\t\t\r\n\t\t\tdataCategories: getCategoryData([0], ['']),\r\n\t\t\toptionsCategories: getCategoryOptions(),\r\n\t\t\t\r\n\t\t\tdataConcepts: getConceptsData([0], ['']),\r\n\t\t\toptionsConcepts: getConceptsOptions(),\r\n\t\t\t\r\n\t\t\tdataEntities: [],\r\n\t\t\tdataKeywords: [],\r\n\t\t\tdataRelations: [],\r\n\t\t\t\r\n\t\t\tdataEmotion: getRadarEmotionData([0]),\r\n\t\t\toptionsEmotions: getRadarEmotionOptions(),\r\n\t\t\t\r\n\t\t\tdataSentiment: getSentimentData([0]),\r\n\t\t\toptionsSentiment: getSentimentOptions(),\r\n\t\t\t\r\n        };\r\n\t\t\r\n\t};\r\n\t\r\n\tloadTestData = () => {\r\n\t\t// And here is our testdata for display\r\n\t\tlet AIdata = Store.get('testSummaryData')\r\n\t\t//try{\r\n\t\t\t\r\n\t\t\t//console.log(AIdata)\r\n\t\t\t// This AI data is going to be a Liiiiiittle more complex...\r\n\t\t\t\r\n\t\t\t// Categories!\r\n\t\t\tconst catData = AIdata.categories\r\n\t\t\t\r\n\t\t\tlet catLabels = []\r\n\t\t\tlet catScores = []\r\n\t\t\t\r\n\t\t\tvar index;\r\n\t\t\tvar batchIndex;\r\n\t\t\tfor (index in catData) {\r\n\t\t\t\tconst cat = catData[index]\r\n\t\t\t\t\r\n\t\t\t\tvar maxVal = 0\r\n\t\t\t\tvar relSum = 0\r\n\t\t\t\tfor (batchIndex in cat.batchData) {\r\n\t\t\t\t\tconst catRel = cat.batchData[batchIndex]\r\n\t\t\t\t\t// For now, we will average this...\r\n\t\t\t\t\trelSum += catRel.score\r\n\t\t\t\t\tmaxVal += 1\r\n\t\t\t\t}\r\n\t\t\t\trelSum /= maxVal\r\n\t\t\t\t\r\n\t\t\t\tcatLabels.push(index)\r\n\t\t\t\tcatScores.push(relSum)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Concepts!\r\n\t\t\tconst conData = AIdata.concepts\r\n\t\t\t//console.log(conData)\r\n\t\t\tlet conLabels = []\r\n\t\t\tlet conRelevance = []\r\n\t\t\tlet conDatabase = []\r\n\t\t\t\r\n\t\t\tvar i\r\n\t\t\t\r\n\t\t\tfor (index in conData) {\r\n\t\t\t\tconst con = conData[index]\r\n\t\t\t\t\r\n\t\t\t\tmaxVal = 0\r\n\t\t\t\tlet conSum = 0\r\n\t\t\t\t\r\n\t\t\t\tfor (i in con.batchData) {\r\n\t\t\t\t\tconSum += con.batchData[i]\r\n\t\t\t\t\tmaxVal += 1\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconSum /= maxVal\r\n\t\t\t\t\r\n\t\t\t\tconLabels.push(index)\r\n\t\t\t\tconRelevance.push(conSum)\r\n\t\t\t\tconDatabase.push(con.dbpedia_resource)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Emotions!\r\n\t\t\t\r\n\t\t\t// Doin average for now!\r\n\t\t\tmaxVal = 0\r\n\t\t\tvar emSum = [0,0,0,0,0]\r\n\t\t\tvar emSet = []\r\n\t\t\t\r\n\t\t\tconst emDataObj = AIdata.emotion\r\n\t\t\tfor (index in emDataObj) {\r\n\t\t\t\tconst emData = emDataObj[index]\r\n\t\t\t\tconst totalData = [emData.anger, emData.disgust, emData.fear, emData.joy, emData.sadness]\r\n\t\t\t\t\r\n\t\t\t\tmaxVal += 1\r\n\t\t\t\tfor( i in emSum ){\r\n\t\t\t\t\temSum[i] += totalData[i]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\temSet.push(totalData)\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tfor( i in emSum ){\r\n\t\t\t\temSum[i] /= maxVal\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Redo this for later...\r\n\t\t\temSet.unshift(emSum)\r\n\t\t\t\r\n\t\t\t// Entities!\r\n\t\t\tconst entData = AIdata.entities\r\n\t\t\t//console.log(entData)\r\n\t\t\t\r\n\t\t\t/*let entity = []\r\n\r\n\t\t\tfor (index in entData) {\r\n\t\t\t\tconst ent = entData[index]\r\n\t\t\t\t//console.log(ent)\r\n\t\t\t\t\r\n\t\t\t\t// What about this?\r\n\t\t\t\t//console.log(ent.disambiguation)\r\n\t\t\t\t\r\n\t\t\t\tconst entEmotion = [ent.emotion.anger, ent.emotion.disgust, ent.emotion.fear, ent.emotion.joy, ent.emotion.sadness]\r\n\t\t\t\t\r\n\t\t\t\tconst senDataScore = ent.sentiment.score\r\n\t\t\t\tconst oppData = 1-Math.abs(senDataScore)\r\n\t\t\t\t\r\n\t\t\t\tlet arrangedDataScore = [0, 0]\r\n\t\t\t\tif (senDataScore > 0) {\r\n\t\t\t\t\tarrangedDataScore = [senDataScore, oppData]\r\n\t\t\t\t} else {\r\n\t\t\t\t\tarrangedDataScore = [oppData, senDataScore]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst entStore = {\r\n\t\t\t\t\tid:index,\r\n\t\t\t\t\t\r\n\t\t\t\t\ttext:ent.text,\r\n\t\t\t\t\ttype:ent.type,\r\n\t\t\t\t\t\r\n\t\t\t\t\tcount:ent.count,\r\n\t\t\t\t\trelevance:ent.relevance,\r\n\t\t\t\t\t\r\n\t\t\t\t\temotion:entEmotion,\r\n\t\t\t\t\tsentiment:arrangedDataScore,\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tentity.push(entStore)\r\n\t\t\t}*/\r\n\t\t\t\r\n\t\t\t// Keywords!\r\n\t\t\tconst keyData = AIdata.keywords\r\n\t\t\t\r\n\t\t\tlet keyword = []\r\n\r\n\t\t\tfor (index in keyData) {\r\n\t\t\t\tconst key = keyData[index]\r\n\t\t\t\t\r\n\t\t\t\t//console.log(key.emotion)\r\n\t\t\t\t//console.log(key.sentiment)\r\n\t\t\t\t\r\n\t\t\t\tlet keyEmSum = [0,0,0,0,0]\r\n\t\t\t\tlet keyRelSum = 0\r\n\t\t\t\tlet keySenSum = 0\r\n\t\t\t\tmaxVal = 0\r\n\t\t\t\t\r\n\t\t\t\tfor (i in key.batchData) {\r\n\t\t\t\t\tconst keyData = key.batchData[i]\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst keyEmotion = [keyData.emotion.anger, keyData.emotion.disgust, keyData.emotion.fear, keyData.emotion.joy, keyData.emotion.sadness]\r\n\t\t\t\t\tfor( i in keyEmSum ){\r\n\t\t\t\t\t\tkeyEmSum[i] += keyEmotion[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tkeyRelSum += keyData.relevance\r\n\t\t\t\t\tkeySenSum += keyData.sentiment.score\r\n\t\t\t\t\t\r\n\t\t\t\t\tmaxVal += 1\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor( i in keyEmSum ){\r\n\t\t\t\t\tkeyEmSum[i] /= maxVal\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tkeySenSum /= maxVal\r\n\t\t\t\t\r\n\t\t\t\tconst keySenOne = 0.5*(keySenSum + 1) /maxVal\r\n\t\t\t\tconst keySenOpp = 0.5*(keySenSum - 1) /maxVal\r\n\t\t\t\t\r\n\t\t\t\tlet keySenScore = [keySenOne, keySenOpp]\r\n\t\t\t\t\r\n\t\t\t\tconst keyStore = {\r\n\t\t\t\t\tid:index,\r\n\t\t\t\t\t\r\n\t\t\t\t\ttext:index,\r\n\t\t\t\t\tcount:key.totalCount,\r\n\t\t\t\t\trelevance:keyRelSum,\r\n\t\t\t\t\t\r\n\t\t\t\t\temotion:keyEmSum,\r\n\t\t\t\t\tsentiment:keySenScore,\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tkeyword.push(keyStore)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Relations!\r\n\t\t\t/*let relation = []\r\n\t\t\t\r\n\t\t\tconst relDat = AIdata.relations\r\n\t\t\t//console.log(relDat)\r\n\r\n\t\t\tfor (index in relDat) {\r\n\t\t\t\tconst rel = relDat[index]\r\n\t\t\t\t\r\n\t\t\t\t// Probobly combine these?\r\n\t\t\t\t\r\n\t\t\t\tconst relStore = {\r\n\t\t\t\t\tid: index,\r\n\t\t\t\t\tinit:rel.arguments[0].text,\r\n\t\t\t\t\taction:rel.type,\r\n\t\t\t\t\ttarget:rel.arguments[1].text,\r\n\t\t\t\t\tscore:rel.score,\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\trelation.push(relStore)\r\n\r\n\t\t\t}*/\r\n\t\t\r\n\t\t\tmaxVal = 0\r\n\t\t\tlet senSum = 0\r\n\t\t\r\n\t\t\t// Sentiment!\r\n\t\t\tconst senDataScore = AIdata.sentiment\r\n\t\t\tfor (index in senDataScore) {\r\n\t\t\t\tsenSum += senDataScore[index].score\r\n\t\t\t\tmaxVal += 1\r\n\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\tconst senOne = 0.5*(senSum + 1) /maxVal\r\n\t\t\tconst senOpp = 0.5*(senSum - 1) /maxVal\r\n\t\t\t\r\n\t\t\tlet arrangedDataScore = [senOne, senOpp]\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\t\r\n\t\t\t\tdataCategories:getCategoryData(catScores, catLabels),\r\n\t\t\t\tdataConcepts:getConceptsData(conRelevance, conLabels),\r\n\t\t\t\tdataEmotion:getRadarEmotionData(emSum),\r\n\t\t\t\t\r\n\t\t\t\t//dataEntities: entity,\r\n\t\t\t\tdataKeywords: keyword,\r\n\t\t\t\t//dataRelations: relation,\r\n\t\t\t\r\n\t\t\t\tdataSentiment:getSentimentData(arrangedDataScore),\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\t\r\n\t\t//} catch{\r\n\t\t\t//console.log(\"Error!\")\r\n\t\t//}\r\n\t}\r\n\t\r\n\tgetCookiesValidDates = () => {\r\n\t\tlet getDates = Store.get(this.props.currentUser+'-'+this.state.currentCompany+'-ValidDates')\r\n\t\tthis.setState({validSummaryDates: getDates['dates']})\r\n\t}\r\n\t\r\n\tgetValidDates = () => {\r\n\t\t\r\n\t\tif (this.props.authToken == null) {\r\n\t\t\tconsole.log(\"Not logged in\")\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\tif (this.state.currentCompany === \"None\") {\r\n\t\t\tconsole.log(\"Select Valid Company!\")\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\tconst config = {\r\n\t\t\theaders: { Authorization: `JWT ${this.props.authToken}` }\r\n\t\t};\r\n\t\t\r\n\t\taxios.get(\"http://10.0.0.60:8000/getCompanyDates?reComp=\"+this.state.currentCompany, config)\r\n\t\t.then( \tres => {\r\n\t\t\t\tlet tempSumArray = []\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(\"Got Valid Dates!\")\r\n\t\t\t\tStore.remove(this.props.currentUser+'-'+this.state.currentCompany+'-ValidDates')\r\n\r\n\t\t\t\tvar item = \"\"\r\n\t\t\t\tfor (item in res.data){\r\n\t\t\t\t\t\r\n\t\t\t\t\t// THESE DATES HAVE THE WRONG TIMEZONE COMING IN, SO THE RESULTING DAY CAN BE WRONG!!!!\r\n\t\t\t\t\t// CHANGE THIS!!!\r\n\t\t\t\t\tconst newDate = new Date(res.data[item].forDate)\r\n\t\t\t\t\tconst checkDate = newDate.getFullYear()+\"-\"+newDate.getMonth()+\"-\"+(newDate.getDate()+1)\r\n\t\t\t\t\r\n\t\t\t\t\ttempSumArray.push( checkDate )\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tStore.set(this.props.currentUser+'-'+this.state.currentCompany+'-ValidDates', {'dates':tempSumArray})\r\n\t\t\t\t//console.log(tempSumArray)\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({validSummaryDates: tempSumArray})\r\n\t\t})\r\n\t\t.catch( err => {\r\n\t\t\tconsole.log(err)\r\n\t\t});\r\n\t}\r\n\t\r\n\tgetCompanyList = () => {\r\n\r\n\t\t// We will change this to its own function eventually...\r\n\t\tif (this.props.authToken == null) {\r\n\t\t\tconsole.log(\"Not logged in\")\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\tconst config = {\r\n\t\t\theaders: { Authorization: `JWT ${this.props.authToken}` }\r\n\t\t};\r\n\t\r\n\t\taxios.get(\"http://10.0.0.60:8000/getUsersCompanies\", config)\r\n\t\t.then( \tres => {\r\n\t\t\t\t// Should respond with a 1 length thing\r\n\t\t\t\tif (res.data.length > 0) {\r\n\t\t\t\t\t// Normal behaviour\r\n\t\t\t\t\tconsole.log(\"Got the list of companies\")\r\n\t\t\t\t\t//console.log(res)\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Companies this user is 'owner' of\r\n\t\t\t\t\t//console.log(res.data[0].companyOwner)\r\n\t\t\t\t\t// Companies that this user is Allowed to see\r\n\t\t\t\t\t//console.log(res.data[0].companyAllowsView)\r\n\t\t\t\t\t// Companies this user is sent updates on\r\n\t\t\t\t\t//console.log(res.data[0].companySendsTo)\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Merge these three into a single set for viewing for now?\r\n\t\t\t\t\tlet adding = []\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar index;\r\n\t\t\t\t\tfor (index in res.data[0].companyOwner) {\r\n\t\t\t\t\t\tlet name = res.data[0].companyOwner[index]\r\n\t\t\t\t\t\tif ( !adding.includes(name) ) {\r\n\t\t\t\t\t\t\tadding.push(name)\r\n\t\t\t\t\t\t\t//console.log(name)\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (index in res.data[0].companyAllowsView) {\r\n\t\t\t\t\t\tlet name = res.data[0].companyAllowsView[index]\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif ( !adding.includes(name) ) {\r\n\t\t\t\t\t\t\tadding.push(name)\r\n\t\t\t\t\t\t\t//console.log(name)\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (index in res.data[0].companySendsTo) {\r\n\t\t\t\t\t\tlet name = res.data[0].companySendsTo[index]\r\n\t\t\t\t\t\tif ( !adding.includes(name) ) {\r\n\t\t\t\t\t\t\tadding.push(name)\r\n\t\t\t\t\t\t\t//console.log(name)\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({companyList: adding})\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// This should not trigger\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch( err => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tpickDate = (selectedDate) => {\r\n\t\t\r\n\t\tif (this.state.currentCompany === \"None\") {\r\n\t\t\tconsole.log(\"Select Valid Company!\")\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\t// Okay, so check to see if we HAVE the journal entry in our storage\r\n\t\t// If we do, show that!\r\n\t\r\n\t\t// Change this so that it is for the currentuser, I got that up here done, but LETS TRY\r\n\t\tlet summaryData = Store.get(this.props.currentUser+'-'+this.state.currentCompany+'-Summary-'+selectedDate)\r\n\t\t\r\n\t\ttry{\r\n\t\t\t\r\n\t\t\t// TO DO, THIS ONE!\r\n\t\t\tconsole.log(summaryData.content)\r\n\t\t\tconsole.log(\"Got the summary entry from storage?!\")\r\n\t\t} catch{\r\n\t\t\t\r\n\t\t\t// So, we need to get the summary data from the server...\r\n\t\t\t// We need the company name we want here, and the user, which we have...\r\n\t\t\t\r\n\t\t\t// We will change this to its own function eventually...\r\n\t\t\tif (this.props.authToken == null) {\r\n\t\t\t\tconsole.log(\"Not logged in\")\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: { Authorization: `JWT ${this.props.authToken}` }\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tconsole.log(\"requesting date\")\r\n\t\t\tthis.setState({currentDate: selectedDate})\r\n\t\t\t\r\n\t\t\tconst dateReq = selectedDate.toJSON().split(\"T\")[0]\r\n\t\t\t\r\n\t\t\taxios.get(\"http://10.0.0.60:8000/getCompanySummary/?reqDate=\"+dateReq+\"&reComp=\"+this.state.currentCompany, config)\r\n\t\t\t.then( \r\n\t\t\t\tres => {\r\n\t\t\t\t\t// What if it is > 1?\r\n\t\t\t\t\tif (res.data.length > 0) {\r\n\t\t\t\t\t\tconsole.log(\"obtained a company summary\")\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Check for matching stuff on this end?\r\n\t\t\t\t\t\t//console.log(res.data[0].summaryResult)\r\n\t\t\t\t\t\t// Save in the cookies for non-login access...\r\n\t\t\t\t\t\tStore.set('testSummaryData', res.data[0].summaryResult)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.loadTestData();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState( {\r\n\t\t\t\t\t\t\tmessages: \"Showing \" + this.state.currentCompany + \": Summary Entry for: \" + this.state.currentDate.toString(),\r\n\t\t\t\t\t\t\tcompanyDisp: \">:(\",\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tconsole.log(\"No entry for that day\")\r\n\t\t\t\t\t\tthis.setState( {\r\n\t\t\t\t\t\t\tmessages: \"No entry for that day\",\r\n\t\t\t\t\t\t\tcompanyDisp: \":/\",\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// LEts not store it in the cookies for now...\r\n\t\t\t})\r\n\t\t\t.catch( err => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t});\r\n\t\t\r\n\t\t}\r\n\t};\r\n\t\r\n\ttileClassName = ({ date, view }) => {\r\n\t\t\r\n\t\t// Add class to tiles in month view only\r\n\t\tif (view === 'month') {\r\n\t\t\t\r\n\t\t\tconst checkDate = date.getFullYear()+\"-\"+date.getMonth()+\"-\"+date.getDate()\r\n\t\t\t\r\n\t\t\t//console.log(checkDate)\r\n\t\t\t//console.log(this.state.validJournalDates)\r\n\r\n\t\t\t// Check if a date React-Calendar wants to check is on the list of dates to add class to\r\n\t\t\tconst hasSummary = this.state.validSummaryDates.find( element => element === checkDate)\r\n\t\t\t\r\n\t\t\tif (hasSummary) {\r\n\t\t\t\treturn 'btn-dark';\r\n\t\t\t} else {\r\n\t\t\t\treturn 'btn-light'\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tsetCurrentCompany = (event) => {\r\n\t\r\n\t\tthis.setState({dropMessage: event.target.value, currentCompany: event.target.value})\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t\r\n\t\tvar dropDownInternal = []\r\n\t\t\r\n\t\tlet index;\r\n\t\tfor (index in this.state.companyList) {\r\n\t\t\tlet comp = this.state.companyList[index]\r\n\t\t\tdropDownInternal.push( \r\n\t\t\t\t<button className=\"dropdown-item\" key={index} onClick={this.setCurrentCompany} value={ comp }>\r\n\t\t\t\t\t{comp}\r\n\t\t\t\t</button> \r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\t// Entities\r\n\t\tvar entitiesDisplay = [];\r\n\t\t\r\n\t\tif (this.state.dataEntities.length > 0) { \r\n\t\t\tfor (index in this.state.dataEntities) {\r\n\t\t\t\tconst ent = this.state.dataEntities[index]\r\n\t\t\t\t\r\n\t\t\t\tconst emotionData = getRadarEmotionData(ent.emotion)\r\n\t\t\t\tconst sentimentData = getSentimentData(ent.sentiment)\r\n\t\t\t\t\r\n\t\t\t\tentitiesDisplay.push(\r\n\t\t\t\t\t<tr key={ent.id}>\r\n\t\t\t\t\t\t<th scope=\"row\">{ent.text}</th>\r\n\t\t\t\t\t\t<td>{ent.type}</td>\r\n\t\t\t\t\t\t<td>{ent.count}</td>\r\n\t\t\t\t\t\t<td>{ent.relevance}</td>\r\n\t\t\t\t\t\t<td> <Radar ref={this.chartReference} data={emotionData} options={this.state.optionsEmotions} /> </td>\r\n\t\t\t\t\t\t<td> <Doughnut ref={this.chartReference} data={sentimentData} options={this.state.optionsSentiment} /> </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tentitiesDisplay.push(\r\n\t\t\t\t<p>\r\n\t\t\t\t\tNone Found!\r\n\t\t\t\t</p>\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\t// Keywords\r\n\t\tvar keywordsDisplay = [];\r\n\t\t\r\n\t\tif (this.state.dataKeywords.length > 0) { \r\n\t\t\tfor (index in this.state.dataKeywords) {\r\n\t\t\t\tconst key = this.state.dataKeywords[index]\r\n\t\t\t\t\r\n\t\t\t\tconst emotionData = getRadarEmotionData(key.emotion)\r\n\t\t\t\tconst sentimentData = getSentimentData(key.sentiment)\r\n\t\t\t\t\r\n\t\t\t\tkeywordsDisplay.push(\r\n\t\t\t\t\t<tr key={key.id}>\r\n\t\t\t\t\t\t<th scope=\"row\">{key.text}</th>\r\n\t\t\t\t\t\t<td>{key.count}</td>\r\n\t\t\t\t\t\t<td><Radar ref={this.chartReference} data={emotionData} options={this.state.optionsEmotions} /></td>\r\n\t\t\t\t\t\t<td><Doughnut ref={this.chartReference} data={sentimentData} options={this.state.optionsSentiment} /></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tkeywordsDisplay.push(\r\n\t\t\t\t<p>\r\n\t\t\t\t\tNone Found!\r\n\t\t\t\t</p>\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\t// R E L A T I O N S\r\n\t\tvar relationsDisplay = [];\r\n\t\t\r\n\t\tif (this.state.dataRelations.length > 0) { \r\n\t\t\r\n\t\t\tfor (index in this.state.dataRelations) {\r\n\t\t\t\tconst rel = this.state.dataRelations[index]\r\n\t\t\t\trelationsDisplay.push(\r\n\t\t\t\t\t<tr key={rel.id}>\r\n\t\t\t\t\t\t<th scope=\"row\">{rel.init}</th>\r\n\t\t\t\t\t\t<td>{rel.action}</td>\r\n\t\t\t\t\t\t<td>{rel.target}</td>\r\n\t\t\t\t\t\t<td>{rel.score}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\trelationsDisplay.push(\r\n\t\t\t\t<p>\r\n\t\t\t\t\tNone Found!\r\n\t\t\t\t</p>\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"companyView\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-lg-3 border m-2\">\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Calendar \r\n\t\t\t\t\t\t\t\t\tonChange={this.pickDate}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.currentDate}\r\n\t\t\t\t\t\t\t\t\ttileClassName={this.tileClassName}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tminDetail={'year'}\r\n\t\t\t\t\t\t\t\t\tmaxDetail={'month'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col border m-2\">\t\t\t\t\t\r\n\t\t\t\t\t\t\t<p>{this.state.messages}</p>\r\n\t\t\t\t\t\t\t<p>{this.state.companyDisp}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t\t  <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t  {this.state.dropMessage}\r\n\t\t\t\t\t\t\t  </button>\r\n\t\t\t\t\t\t\t  <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n\t\t\t\t\t\t\t\t{dropDownInternal}\r\n\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<button onClick={this.loadTestData}> Get Summary Test </button>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<button onClick={this.getCompanyList}> Get Comp List </button>\r\n\t\t\t\t\t\t\t<button onClick={this.getValidDates}> Get Valid Dates (server)</button>\r\n\t\t\t\t\t\t\t<button onClick={this.getCookiesValidDates}> Get Valid Dates (cookies)</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col border mx-2\">\r\n\t\t\t\t\t\t\t<Radar ref={this.chartReference} data={this.state.dataEmotion} options={this.state.optionsEmotions} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col border mx-2\">\r\n\t\t\t\t\t\t\t<Doughnut ref={this.chartReference} data={this.state.dataSentiment} options={this.state.optionsSentiment} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row  my-2\">\r\n\t\t\t\t\t\t<div className=\"col border mx-2\">\r\n\t\t\t\t\t\t\t<Bar ref={this.chartReference} data={this.state.dataCategories} options={this.state.optionsCategories} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col border mx-2\">\r\n\t\t\t\t\t\t\t<Bar ref={this.chartReference} data={this.state.dataConcepts} options={this.state.optionsConcepts} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<h3>Entities!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Type</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Relevance Score</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Emotion</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Sentiment</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{entitiesDisplay}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<h3>Keywords!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Word</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">#Appearances</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Emotion</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Sentiment</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{keywordsDisplay}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row my-2\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<h3>Relations!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Thing</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Action</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Target</th>\r\n\t\t\t\t\t\t\t\t<th scope=\"col\">Score</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{relationsDisplay}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row  my-2\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tPADDING\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default companyView;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\n\nimport { Navigation, Footer, Landing, SignIn, SignUp, ViewJournals, WriteJournals, ViewCompany } from \"./components\";\n\nimport Store from \"store\"\n\n//import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\n\nclass App extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n          \n\t\t  currentUser: null,\n\t\t  sessionToken: null,\n\n        };\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis.loadFromCookies();\n\t\t\n\t};\n\t\n\tloadFromCookies = () => {\n\t\tconst lastUserSet = Store.get('lastUser');\n\t\t\t\n\t\ttry{ \n\t\t\tthis.setState({ currentUser: lastUserSet.user, sessionToken: lastUserSet.session }) \n\t\t}\n\t\tcatch{\n\t\t\tconsole.log(\"No user based cookies\")\n\t\t};\n\t}\n\t\n\tsetToken = ( token, username ) => {\n\t\t// Verify this before we sent it in I guess?\n\t\tthis.setState({ sessionToken: token, currentUser: username })\n\t\t\n\t\tStore.set('lastUser', { user:username, session:token })\n\t\t\n\t\t// Return if we succeeded or not\n\t\treturn true\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Navigation \n\t\t\t\t\t\tcurrentUser={this.state.currentUser}\n\t\t\t\t\t/>\n\t\t\t\t\t\t\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact component={() => <Landing \n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/>} />\n\t\t\t\t\t\t<Route path=\"/signin\" exact component={() => <SignIn \n\t\t\t\t\t\t\t\ttokenSetter={this.setToken}\n\t\t\t\t\t\t\t/>} />\n\t\t\t\t\t\t<Route path=\"/signup\" exact component={() => <SignUp \n\t\t\t\t\t\t\n\t\t\t\t\t\t\t/>} />\n\t\t\t\t\t\t<Route path=\"/read\" exact component={() => <ViewJournals \n\t\t\t\t\t\t\t\tcurrentUser={this.state.currentUser}\n\t\t\t\t\t\t\t\tauthToken={this.state.sessionToken}\n\t\t\t\t\t\t\t/>} />\n\t\t\t\t\t\t<Route path=\"/write\" exact component={() => <WriteJournals \n\t\t\t\t\t\t\t\tauthToken={this.state.sessionToken}\n\t\t\t\t\t\t\t/>} />\n\t\t\t\t\t\t<Route path=\"/company\" exact component={() => <ViewCompany \n\t\t\t\t\t\t\t\tauthToken={this.state.sessionToken}\n\t\t\t\t\t\t\t/>} />\n\t\t\t\t\t</Switch>\n\n\t\t\t\t\t<Footer \n\t\t\t\t\t\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport'bootstrap/dist/css/bootstrap.min.css';\n//import $ from'jquery';\n//import Popper from 'popper.js';\nimport'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}